#pragma once

// Name: ManEater, Version: 1.0.0


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Maneater.ManeaterAIFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UManeaterAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ManeaterAIFunctionLibrary");
		return ptr;
	}



	void STATIC_GetPawnAndAIController(class UObject* InObject, class APawn** Out_Pawn, class AME_AIController** Out_AIController);
};

// Class Maneater.ME_AbilitySystemComponent
// 0x00F8 (FullSize[0x13F0] - InheritedSize[0x12F8])
class UME_AbilitySystemComponent : public UAbilitySystemComponent
{
public:
	TMap<struct FActiveGameplayEffectHandle, struct FGameplayEffectParticleSystems> PersistentParticleSystemMap;                               // 0x12F8(0x0050) (NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FAbilityInfoListStruct> AbilityCache;                                              // 0x1348(0x0050) (NativeAccessSpecifierPublic)
	TMap<struct FString, struct FAbilityInfoStruct>    AbilityHandleToInfoCache;                                  // 0x1398(0x0050) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D9LX[0x8];                                     // 0x13E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AbilitySystemComponent");
		return ptr;
	}



	void SpawnEmitter(struct FMEGameplayEffectParticleSystem* GameplayEffectParticleSystem, class UParticleSystem* ParticleSystem, class USceneComponent* AttachComponent);
	class UME_AttributeSet* GetAttributeSet(class UClass* AttributeSetClass);
};

// Class Maneater.ME_AbilitySystemInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_AbilitySystemInterface : public UAbilitySystemInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AbilitySystemInterface");
		return ptr;
	}



};

// Class Maneater.ME_ActorDamageInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_ActorDamageInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ActorDamageInterface");
		return ptr;
	}



	int GetSizeLevel(class AME_AnimalCharacter* GrabbingAnimal);
	float GetMaxHealth();
	float GetCurrentHealth();
};

// Class Maneater.ME_AggroComponent
// 0x0058 (FullSize[0x0108] - InheritedSize[0x00B0])
class UME_AggroComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_85R6[0x18];                                    // 0x00B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAlertStateChanged;                                       // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSuspicionUpdated;                                        // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              SuspicionDecayRate;                                        // 0x00E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuspicionCooldownTime;                                     // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertEventCooldownTime;                                    // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NBCJ[0x14];                                    // 0x00F4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AggroComponent");
		return ptr;
	}



	void Timer_OnSuspicionCooledDown();
	float GetSuspicionLevel();
	TEnumAsByte<Maneater_EAIThreatAlertState> GetAlertState();
};

// Class Maneater.ME_AICombatInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_AICombatInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AICombatInterface");
		return ptr;
	}



	bool CanAIAttackTarget(const struct FAttackTarget& PotentialTarget);
	void AIAttackTarget(const struct FAttackTarget& NewTarget);
};

// Class Maneater.ME_AIController
// 0x0420 (FullSize[0x0748] - InheritedSize[0x0328])
class AME_AIController : public AAIController
{
public:
	unsigned char                                      UnknownData_I935[0x10];                                    // 0x0328(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumSpawnTime;                                          // 0x0338(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPossessTime;                                           // 0x033C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastDeathTime;                                             // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUnscared;                                                 // 0x0344(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IBDK[0x3];                                     // 0x0345(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAIDied;                                                  // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q8XT[0x10];                                    // 0x0358(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBehaviorTreeComponent*                      BehaviorTreeComponent;                                     // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBehaviorTree*                               BehaviorTreeAsset;                                         // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H4K4[0x58];                                    // 0x0378(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDrawPerceptionDebug;                                      // 0x03D0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawTargetingDebug;                                       // 0x03D1(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawFocus;                                                // 0x03D2(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CJEN[0x25];                                    // 0x03D3(0x0025) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BlendedPawnRotationInterpSpeed;                            // 0x03F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WOBF[0x14];                                    // 0x03FC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UME_SpawnlistCondition*>              SpawnedConditions;                                         // 0x0410(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStationarySpawn;                                          // 0x0420(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HMX1[0xF];                                     // 0x0421(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DeathAlertRadius;                                          // 0x0430(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeathAlertTime;                                            // 0x0434(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RYJF[0xC];                                     // 0x0438(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIgnoreSignificanceCalculation;                            // 0x0444(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VN7W[0x3];                                     // 0x0445(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SignificanceDisabledWeightMod;                             // 0x0448(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SignificanceBucketWeight;                                  // 0x044C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CachedCurrentSignificance;                                 // 0x0450(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSignificance;                                           // 0x0454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DespawnConsiderationChange;                                // 0x0458(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DespawnConsiderationSignificance;                          // 0x045C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinSpawnSignificance;                                      // 0x0460(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpawnSignificance;                                      // 0x0464(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseTickInterval;                                          // 0x0468(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TickIntervalMod;                                           // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseTypeSignificanceMod;                                   // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HuntActorSignificanceMod;                                  // 0x0474(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BossFightSignificanceMod;                                  // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PendingCombatSignificanceMod;                              // 0x047C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ActiveCombatSignificanceMod;                               // 0x0480(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfSightSignificanceMod;                                 // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpawnConditionFailedSignificanceMod;                       // 0x0488(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPersistentAI;                                             // 0x048C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X1BU[0x3];                                     // 0x048D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxMercunaBucket;                                          // 0x0490(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPreDormantPawnTickEnabled;                                // 0x0494(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0H8L[0x3];                                     // 0x0495(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UPrimitiveComponent*, struct FPreDormantValues> PreDormantValues;                                          // 0x0498(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int                                                CurrentDefinedPatrolIndex;                                 // 0x04E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_APIV[0x8];                                     // 0x04EC(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCapableOfAttacking;                                       // 0x04F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4JJB[0x3];                                     // 0x04F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AttackTargetDistance;                                      // 0x04F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BB_AttackTargetDistance;                                   // 0x04FC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackTargetAngle;                                         // 0x0504(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BB_AttackTargetAngle;                                      // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QLN4[0x20];                                    // 0x0510(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_ECombatStatus                             CombatStatus;                                              // 0x0530(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7YY5[0x3];                                     // 0x0531(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BaseCombatPriority;                                        // 0x0534(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseCombatLockTime;                                        // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseCombatPriorityCooldownTime;                            // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OM32[0x18];                                    // 0x0540(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bRegisterWithCombatManager;                                // 0x0558(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YS83[0x7];                                     // 0x0559(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    ThreatStateHasChanged;                                     // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RelatedObjectiveHasChanged;                                // 0x0570(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UME_AggroComponent*                          AggroComponent;                                            // 0x0580(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BB_CurrentAlertLevelKey;                                   // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       LastAlertInstigator;                                       // 0x0590(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertTickInterval;                                         // 0x0598(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AlertSpawnCooldownTime;                                    // 0x059C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnemyEscapeDistance;                                       // 0x05A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForceUnscareDistance;                                      // 0x05A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PlayerSharkSuspicionRate;                                  // 0x05A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AlertCooldownTime;                                         // 0x05AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanBeSharkWitness;                                        // 0x05B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6YGL[0x7];                                     // 0x05B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TEnumAsByte<Maneater_EAIThreatAlertState>, class UAkAudioEvent*> AlertChangeAudioEvent;                                     // 0x05B8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UME_AlertEvent_Witness*                      AlertedWitnessEvent;                                       // 0x0608(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HTXP[0xC];                                     // 0x0610(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LeashDistance;                                             // 0x061C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldBeLeashed;                                          // 0x0620(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanChangeLeashLocation;                                   // 0x0621(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUpdateLeashLocationOnDamage;                              // 0x0622(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUpdateLeashLocationOnPlayerDamage;                        // 0x0623(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWipeAggroOnLeash;                                         // 0x0624(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P0E1[0x3];                                     // 0x0625(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AggroCooldownOnWipe;                                       // 0x0628(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBreakLeashOnThreat;                                       // 0x062C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DB6H[0xF];                                     // 0x062D(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanLookForThreats;                                        // 0x063C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PIYJ[0x3];                                     // 0x063D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      ClosestVisibleThreat;                                      // 0x0640(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             ClosestVisibleThreatComponent;                             // 0x0648(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ClosestVisibleThreatLocation;                              // 0x0650(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ADY9[0x4];                                     // 0x065C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      LastVisibleThreat;                                         // 0x0660(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastVisibleThreatDistance;                                 // 0x0668(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OGXS[0x4];                                     // 0x066C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanListenForThreats;                                      // 0x0670(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanEmitSounds;                                            // 0x0671(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C846[0x2];                                     // 0x0672(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHearingRange;                                           // 0x0674(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y7OH[0x24];                                    // 0x0678(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanRespondToStimuli;                                      // 0x069C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U61M[0x3];                                     // 0x069D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 SightRangeByTimeOfDay;                                     // 0x06A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SightRangeByPlayerGrowthScale;                             // 0x06A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseAirSightLength;                                        // 0x06B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseSurfaceSightLength;                                    // 0x06B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseUnderwaterSightLength;                                 // 0x06B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightWaterPenetrationDepth;                                // 0x06BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightConeAngle;                                            // 0x06C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PeripheralSightLength;                                     // 0x06C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PeripheralSightConeAngle;                                  // 0x06C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PVMP[0x4];                                     // 0x06CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              ThreateningPawnTypes;                                      // 0x06D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<Maneater_EPawnSpeciesType>>     ThreateningSpecies;                                        // 0x06E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9HHB[0x20];                                    // 0x06F0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVisionType                                 AIVision;                                                  // 0x0710(0x0001) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NJBJ[0x37];                                    // 0x0711(0x0037) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AIController");
		return ptr;
	}



	bool UseNearestPatrolPoint();
	bool UseAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle);
	void TransferAlertKnowledge(class AME_AIController* AIC);
	void TickThreatTimer();
	void SetUseNearestPatrolPoint(bool bUseNearest);
	void SetPatrolPlotter(class ATwAIPatrolPlotter* InPatrolPlotter);
	void SetLeashLocation(const struct FVector& InLeashLocation);
	void SetLeashActive(bool bSetActive);
	void SetCurrentDefinedPatrolIndex(int NewPatrolIdx);
	void SetBehaviorTreeEnabled(bool bEnabled);
	void SetAlertState(TEnumAsByte<Maneater_EAIThreatAlertState> NewAlertState, class AActor* AlertInstigator, bool bForced, int millisecondDelayMax);
	void OnSuspicionIncreased(float NewSuspicionLevel, class AActor* SuspicionInstigator);
	void OnReturnedToLeash();
	void OnPlayerPawnStatusChanged(class AActor* PlayerPawn);
	void OnHeardNoise(const struct FVector& NoiseOrigin, float NoiseIntensity, class AActor* NoiseInstigator);
	void OnDamagedPlayer(float DamageAmount);
	void OnDamaged(float DamageAmount, class AActor* DamageInstigator);
	void OnCombatStatusChanged(Maneater_ECombatStatus Status);
	void OnCombatCooldownExpired();
	void NotifyPawnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void NotifyPawnDamaged(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void MakeAIAudibleNoise(const struct FVector& Origin, float Intensity, class AActor* NoiseInstigator);
	void LookForThreats();
	bool IsPlayerInstigatedAlert(class AActor* AlertInstigator);
	bool IsOnNavmesh();
	bool IsDormant();
	bool IsAlertedToPlayer();
	void IncreaseSuspicion(float SuspicionAmount, class AActor* SuspcionInstigator);
	float GetTotalCombatPriority();
	float GetSuspicion();
	float GetSightDistance();
	class UAbilitySystemComponent* GetPawnAbilitySystemComponent();
	class ATwAIPatrolPlotter* GetPatrolPlotter();
	struct FVector GetLeashLocation();
	float GetLeashDistance();
	bool GetLeashActive();
	class AActor* GetEnemy();
	int GetCurrentDefinedPatrolIndex();
	TEnumAsByte<Maneater_EAIThreatAlertState> GetCurrentAlert();
	Maneater_ECombatStatus GetCombatStatus();
	float GetCombatPriorityBuffs();
	float GetCombatPriority();
	float GetCombatLockTime();
	float GetCombatCooldownTime();
	class AMEEscapeVolume* GetClosestEscapeVolume();
	class AMEEscapeVolume* GetBoatEscapeVolume();
	float GetBaseSightDistance();
	float GetAbilityPriority();
	void CancelAllAbilities();
	void CancelAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle);
	bool AttackTargetActor(const struct FAttackTarget& NewTarget);
	void AlertStateChangedInternal(TEnumAsByte<Maneater_EAIThreatAlertState> OldAlertState, TEnumAsByte<Maneater_EAIThreatAlertState> NewState, class AActor* ChangeInstigator);
	void AddCombatPriorityBuff(const struct FCombatPriorityBuff& CombatPriorityBuff);
	void AbilityEnded(const struct FAbilityEndedData& AbilityData);
};

// Class Maneater.ME_AIDirector
// 0x0530 (FullSize[0x0750] - InheritedSize[0x0220])
class AME_AIDirector : public AActor
{
public:
	float                                              EvasionNotifyDistance;                                     // 0x0220(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxAllowedToAggro;                                         // 0x0224(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2BXU[0x30];                                    // 0x0228(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      BeachgoerEscapeRoutes[0x10];                               // 0x0228(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_MIP4[0x10];                                    // 0x0268(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_CombatManager*                           CombatManager;                                             // 0x0278(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6REP[0x480];                                   // 0x0280(0x0480) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UME_AlertEvent*>                      ActiveAlerts;                                              // 0x0700(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UME_AlertEvent_Witness*>              WitnessAlerts;                                             // 0x0710(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SJ0V[0x30];                                    // 0x0720(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AIDirector");
		return ptr;
	}



	void UnregisterEvent(class UME_AlertEvent* AlertEvent);
	void UnregisterAllEvents(class AActor* LinkedActor);
	void RegisterEvent(class UME_AlertEvent* AlertEvent);
	void OnEventPulse(class UME_AlertEvent* AlertEvent);
	void OnEndAbility(class AME_AIController* AIC, class UME_GameplayAbility* Ability);
	void NotifyIncomingAttack(float BaseIncomingAttackDistance, bool bIsBite);
	void GetReleventWitnessEvents(class AME_AIController* AIC, TArray<class UME_AlertEvent_Witness*>* out_WitnessAlerts);
	class UME_CombatManager* GetCombatManager();
	void ForceToAlertState(TEnumAsByte<Maneater_EAIThreatAlertState> NewAlertState, const struct FVector& Origin, float Radius, class UClass* PawnClass);
	class UME_AlertEvent_Witness* CreateAndRegisterWitnessEvent(class AActor* LinkedActor);
	void BroadcastNoise(const struct FVector& NoiseOrigin, float NoiseIntensity, class AActor* NoiseInstigator);
};

// Class Maneater.ME_VehicleMovementComponent
// 0x00F8 (FullSize[0x0230] - InheritedSize[0x0138])
class UME_VehicleMovementComponent : public UPawnMovementComponent
{
public:
	unsigned char                                      UnknownData_GYZ3[0x2C];                                    // 0x0138(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMercuna3DMovementProperties                MovementProperties;                                        // 0x0164(0x003C) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              SteeringResponsiveness;                                    // 0x01A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccelerationInterpSpeed;                                   // 0x01A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     Acceleration;                                              // 0x01A8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     WorldAcceleration;                                         // 0x01B4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AngularVelocity;                                           // 0x01C0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bPositionCorrected : 1;                                    // 0x01CC(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2YCZ[0x63];                                    // 0x01CD(0x0063) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_VehicleMovementComponent");
		return ptr;
	}



	struct FVector GetLocalVelocity();
	struct FVector GetAngularVelocity();
	void AddImpulse(const struct FVector& Impulse, const struct FVector& ImpulseLocation, const struct FVector& ImpulseNormal);
};

// Class Maneater.ME_AirVehicleMoveComponent
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UME_AirVehicleMoveComponent : public UME_VehicleMovementComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AirVehicleMoveComponent");
		return ptr;
	}



};

// Class Maneater.ME_AITask_DirectMoveTo
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UME_AITask_DirectMoveTo : public UAITask
{
public:
	struct FDirectMoveRequest                          MoveRequest;                                               // 0x0070(0x0020) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UME_CharacterMovementComponent*              CharacterMove;                                             // 0x0090(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G8CX[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AITask_DirectMoveTo");
		return ptr;
	}



};

// Class Maneater.ME_AITask_VehicleDirectMoveTo
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UME_AITask_VehicleDirectMoveTo : public UAITask
{
public:
	struct FDirectMoveRequest                          MoveRequest;                                               // 0x0070(0x0020) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UME_VehicleMovementComponent*                VehicleMove;                                               // 0x0090(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZKCF[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AITask_VehicleDirectMoveTo");
		return ptr;
	}



};

// Class Maneater.ME_AlertEvent
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UME_AlertEvent : public UObject
{
public:
	unsigned char                                      UnknownData_5RYH[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_EAlertEventDuration                       AlertDuration;                                             // 0x0058(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1KW4[0x3];                                     // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DurationMagnitude;                                         // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PeriodicInterval;                                          // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AlertDistance;                                             // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IncreaseSuspicionAmount;                                   // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GBPL[0x24];                                    // 0x006C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AlertEvent");
		return ptr;
	}



	void Timer_PeriodicPulse();
	void Timer_Lifetime();
	void SetEventLocation(const struct FVector& InEventLocation);
	void LinkActorToEvent(class AActor* ActorToLink);
	float GetSuspicionAmount();
	class AActor* GetLinkedActor();
	struct FVector GetEventLocation();
	bool CanProcessEvent(class AME_AIController* AIC);
};

// Class Maneater.ME_AlertEvent_Witness
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UME_AlertEvent_Witness : public UME_AlertEvent
{
public:
	unsigned char                                      UnknownData_ES5B[0x10];                                    // 0x0090(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AlertEvent_Witness");
		return ptr;
	}



	struct FVector GetCachedVisiblePoint();
};

// Class Maneater.ME_AmbientActivityComponent
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UME_AmbientActivityComponent : public UActorComponent
{
public:
	TArray<class UME_AmbientActivityData*>             PossibleActivities;                                        // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_73IJ[0x28];                                    // 0x00C0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AmbientActivityComponent");
		return ptr;
	}



};

// Class Maneater.ME_ActivityProp
// 0x0140 (FullSize[0x0168] - InheritedSize[0x0028])
class UME_ActivityProp : public UObject
{
public:
	TEnumAsByte<Engine_EDetailMode>                    DetailMode;                                                // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BGWN[0x3];                                     // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxDrawDistance;                                           // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                                  LocalTransform;                                            // 0x0030(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FName                                       AttachSocket;                                              // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DetachedLifespan;                                          // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSimulateOnDetach;                                         // 0x006C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPropDetachPhase>             DetachTiming;                                              // 0x006D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0D5X[0x2];                                     // 0x006E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FPropRandomVectorParam>  VectorParams;                                              // 0x0070(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FPropRandomScalarParam>  ScalarParams;                                              // 0x00C0(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FPropRandomTextureParam> TextureParams;                                             // 0x0110(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7T22[0x8];                                     // 0x0160(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ActivityProp");
		return ptr;
	}



};

// Class Maneater.ME_ActivityProp_Static
// 0x0008 (FullSize[0x0170] - InheritedSize[0x0168])
class UME_ActivityProp_Static : public UME_ActivityProp
{
public:
	class UStaticMesh*                                 StaticMesh;                                                // 0x0168(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ActivityProp_Static");
		return ptr;
	}



};

// Class Maneater.ME_ActivityProp_Skeletal
// 0x0008 (FullSize[0x0170] - InheritedSize[0x0168])
class UME_ActivityProp_Skeletal : public UME_ActivityProp
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0168(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ActivityProp_Skeletal");
		return ptr;
	}



};

// Class Maneater.ME_ActivityProp_Decal
// 0x0018 (FullSize[0x0180] - InheritedSize[0x0168])
class UME_ActivityProp_Decal : public UME_ActivityProp
{
public:
	class UMaterialInterface*                          DecalMaterial;                                             // 0x0168(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     DecalSize;                                                 // 0x0170(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BTIR[0x4];                                     // 0x017C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ActivityProp_Decal");
		return ptr;
	}



};

// Class Maneater.ME_AmbientActivityData
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UME_AmbientActivityData : public UDataAsset
{
public:
	struct FString                                     FriendlyName;                                              // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                LoopingIdleAnim;                                           // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                OutroAnim;                                                 // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceToRoam;                                              // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoamRadius;                                                // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CustomScaredPercent;                                       // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MUL9[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FActivityAlertStruct>                AlertStructs;                                              // 0x0060(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlendOutTime;                                              // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KRT7[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FActivityPropElement>                Props;                                                     // 0x0078(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                              ActivityDuration;                                          // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AmbientActivityData");
		return ptr;
	}



};

// Class Maneater.ME_AmbientActivityPoint
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AME_AmbientActivityPoint : public AActor
{
public:
	class USphereComponent*                            PlacementCollisionComponent;                               // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_AmbientActivityComponent*                ActivityComponent;                                         // 0x0228(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AmbientActivityPoint");
		return ptr;
	}



};

// Class Maneater.ME_CharacterAIController
// 0x0038 (FullSize[0x0780] - InheritedSize[0x0748])
class AME_CharacterAIController : public AME_AIController
{
public:
	struct FName                                       BB_ThrashAttackerKey;                                      // 0x0748(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BB_ThrashAttackStateKey;                                   // 0x0750(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BB_InjuryStateKey;                                         // 0x0758(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EThrashAttackType>            LastBBThrashState;                                         // 0x0760(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YQNY[0x7];                                     // 0x0761(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_Character*                               CharacterPawn;                                             // 0x0768(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D37T[0x10];                                    // 0x0770(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CharacterAIController");
		return ptr;
	}



	void OnGameplayTagRemoved(const struct FGameplayTagContainer& TagsRemoved);
	void OnGameplayTagAdded(const struct FGameplayTagContainer& TagsAdded, float TagDuration);
	void OnForceStopMoving(Maneater_EThreeStateSwitch MovementState, Maneater_EThreeStateSwitch RotationState);
};

// Class Maneater.ME_AnimalAIController
// 0x0048 (FullSize[0x07C8] - InheritedSize[0x0780])
class AME_AnimalAIController : public AME_CharacterAIController
{
public:
	class AME_AnimalCharacter*                         AnimalPawn;                                                // 0x0780(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_AnimalMovementComponent*                 AnimalMovementComponent;                                   // 0x0788(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RGFR[0x4];                                     // 0x0790(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SwapToCombatMovementThreshold;                             // 0x0794(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SwapToGeneralMovementThreshold;                            // 0x0798(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CombatDistance;                                            // 0x079C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CombatHeight;                                              // 0x07A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMinMaxRange                                ChanceToEvadeRange;                                        // 0x07A4(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              FlankingThreshold;                                         // 0x07AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FlankingModifier;                                          // 0x07B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxReactTime;                                              // 0x07B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxEvadeRange;                                             // 0x07B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BiteEvadeDelay;                                            // 0x07BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      EvadeFailedCooldownEffect;                                 // 0x07C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimalAIController");
		return ptr;
	}



	bool TriggerEvadeIfWithinRange();
	bool TriggerEvade();
	void OnPreyGrabbed(class AME_AnimalCharacter* Grabber, class AActor* Prey);
};

// Class Maneater.ME_Character
// 0x0768 (FullSize[0x0C20] - InheritedSize[0x04B8])
class AME_Character : public ACharacter
{
public:
	unsigned char                                      UnknownData_O5C1[0x8];                                     // 0x04B8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_9S0U[0x58];                                    // 0x04C0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_Character*                               DefaultCharacter;                                          // 0x0518(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPawnGender>                  Gender;                                                    // 0x0520(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPawnBodyType>                BodyType;                                                  // 0x0521(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPawnAge>                     Age;                                                       // 0x0522(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_ECharacterInjuryState>        InjuryState;                                               // 0x0523(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZOWU[0x4];                                     // 0x0524(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       FriendlyName;                                              // 0x0528(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                CharacterLevel;                                            // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPawnSpeciesType>             SpeciesType;                                               // 0x0544(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreDamageFromSameSpecies;                              // 0x0545(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreDamageFromHumans;                                   // 0x0546(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6QRO[0x1];                                     // 0x0547(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PartialRagdollBlendWeight;                                 // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollOverlapLinearDampening;                             // 0x054C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollOverlapLinearDampeningTime;                         // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XGER[0xC];                                     // 0x0554(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RagdollWaterLinearDamping;                                 // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollWaterAngularDamping;                                // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollAboveWaterLinearDamping;                            // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollAboveWaterAngularDamping;                           // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitImpulseScale;                                           // 0x0570(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P1TV[0x4];                                     // 0x0574(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 BumpMassDifferential;                                      // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ImpulseRagdollThreshold;                                   // 0x0580(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StationaryRotationSpeed;                                   // 0x0584(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PassiveRotationSpeed;                                      // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WalkingRotationSpeed;                                      // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombatRotationSpeed;                                       // 0x0590(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5D10[0x8];                                     // 0x0594(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TurnSpeed;                                                 // 0x059C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BodyWaterDepth;                                            // 0x05A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadWaterDepth;                                            // 0x05A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KTUD[0x8];                                     // 0x05A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_AnimalCharacter*                         ThrashAttacker;                                            // 0x05B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NHEJ[0x18];                                    // 0x05B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    CharacterAttributeChanged;                                 // 0x05D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    CharacterAttributesChanged;                                // 0x05E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    EvolutionAbilityActivated;                                 // 0x05F0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SonarAbilityActivated;                                     // 0x0600(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O3U5[0x1];                                     // 0x0610(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsReturningFromRagdoll;                                   // 0x0611(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipBlending;                                             // 0x0612(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7416[0x15];                                    // 0x0613(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicsAsset*                               SingleBodyPhysicsAsset;                                    // 0x0628(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                               OriginalPhysicsAsset;                                      // 0x0630(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeAboveWaterToEnableSplash;                              // 0x0638(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YGA9[0xC];                                     // 0x063C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_CharacterAIController*                   CharacterAIController;                                     // 0x0648(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinVelocityZForFallingDamage;                              // 0x0650(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinMeshVelocityForRagdollImpactFX;                         // 0x0654(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NotifyHitImpactFXCooldown;                                 // 0x0658(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NEUU[0x4];                                     // 0x065C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RagdollImpactFXCooldown;                                   // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZUIL[0x8];                                     // 0x0664(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AccumulatedFallVelocity;                                   // 0x066C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DM66[0x10];                                    // 0x0670(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             WhipShotTrailParticle;                                     // 0x0680(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WhipshotImpactSound;                                       // 0x0688(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PreWhipShotPhysicsMultiplier;                              // 0x0690(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WhipshotRotationSpeed;                                     // 0x0694(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WhipshotSpinningRotation;                                  // 0x0698(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WhipshotRollingRotation;                                   // 0x069C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WhipshotImpactActorClass;                                  // 0x06A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_19KF[0x8];                                     // 0x06A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMaterialInstanceDynamic*>            DynamicMaterials;                                          // 0x06B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FLimbGoreParameters>     LimbGoreParams;                                            // 0x06C0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       ThrashEscapeBoneBase;                                      // 0x0710(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ThrashEscapeBoneDirection;                                 // 0x0718(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             NutritionChunkSpawnParticle;                               // 0x0720(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LargeChunkSpawnBone;                                       // 0x0728(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             LargeChunkSpawnParticle;                                   // 0x0730(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMomentumForce                              ThrashEscapeInfo;                                          // 0x0738(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         NutritionTableRow;                                         // 0x0768(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsNonCombatCharacter;                                     // 0x0778(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3SGY[0x3];                                     // 0x0779(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       HeadBoneName;                                              // 0x077C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastInstigatedAlertTime;                                   // 0x0784(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_CharacterVoiceData*                      VoiceData;                                                 // 0x0788(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AudioEventOnAITarget;                                      // 0x0790(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AudioEventOnAIDeath;                                       // 0x0798(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LI93[0x10];                                    // 0x07A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastReceivedDamageTime;                                    // 0x07B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageResistPct;                                           // 0x07B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VulnerabilityThresholdImpulseResistPct;                    // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WITU[0x4];                                     // 0x07BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FThrashGrabPoint>                    ThrashGrabPoints;                                          // 0x07C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LimbLossHealthBuffer;                                      // 0x07D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBreathUnderwater;                                      // 0x07D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBreathOutOfWater;                                      // 0x07D5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AX6Z[0x2];                                     // 0x07D6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DrownDeathTime;                                            // 0x07D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreathRegainTime;                                          // 0x07DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RemainingBreath;                                           // 0x07E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C2NF[0x4];                                     // 0x07E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             DrowningVFX;                                               // 0x07E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DrowningLastBreathVFX;                                     // 0x07F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     ActiveDrowningVFX;                                         // 0x07F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DiverParticlesVFX;                                         // 0x0800(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9AN3[0x10];                                    // 0x0808(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   DiverVFXBubbleRange;                                       // 0x0818(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BodyFluidSimRadius;                                        // 0x0820(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BodyFluidSimIntensity;                                     // 0x0824(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinFluidSimVelocityDisturbance;                            // 0x0828(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_92FC[0x1C];                                    // 0x082C(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bOrientToWalkableSurface;                                  // 0x0848(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TVCG[0x7];                                     // 0x0849(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_PhysicalMaterial*                        FeetPhysicalMaterial;                                      // 0x0850(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ALXF[0x4];                                     // 0x0858(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinTimeBetweenFootsteps;                                   // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasHitMask;                                               // 0x0860(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E07R[0x3];                                     // 0x0861(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                HitMaskResolution;                                         // 0x0864(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BXLQ[0x98];                                    // 0x0868(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterDied;                                           // 0x0900(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              CorpsePhysicsBlendInTime;                                  // 0x0910(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCorpseLifeSpan;                                         // 0x0914(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanDie;                                                   // 0x0918(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QG38[0x7];                                     // 0x0919(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DeathTime;                                                 // 0x0920(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WFG2[0x4];                                     // 0x0924(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAlertEventParams>                   SpawnAlertsOnDeath;                                        // 0x0928(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAlertEventParams                           AlertEventOnConsumed;                                      // 0x0938(0x0010) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FMYT[0x8];                                     // 0x0948(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_MercunaObstacleComponent*                MercunaObstacle;                                           // 0x0950(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UME_MercunaNavigationComponent*              MercunaNavigation;                                         // 0x0958(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PhysicalAnimBlendStrength;                                 // 0x0960(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PhysicalAnimBlendOutTime;                                  // 0x0964(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               SwimmingPhysicalAnimBlendBones;                            // 0x0968(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               WalkingPhysicalAnimBlendBones;                             // 0x0978(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DVBO[0x28];                                    // 0x0988(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAbilityInfoStruct>                  CharacterAbilities;                                        // 0x09B0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_AbilitySystemComponent*                  AbilitySystemComponent;                                    // 0x09C0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AbilityHelperClass;                                        // 0x09C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_CharacterAbilityHelper*                  AbilityHelperObject;                                       // 0x09D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  CharacterAbilitiesDataTable;                               // 0x09D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              NativeGameplayEffects;                                     // 0x09E0(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U0Z0[0x10];                                    // 0x09F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGameplayTagAdded;                                        // 0x0A00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameplayTagRemoved;                                      // 0x0A10(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SmallCharacterEntrySplash;                                 // 0x0A20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SmallCharacterEntrySplashAudio;                            // 0x0A28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmallCharacterEntrySplashMinSpeed;                         // 0x0A30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EHAI[0x4];                                     // 0x0A34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             MediumCharacterEntrySplash;                                // 0x0A38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MediumCharacterEntrySplashAudio;                           // 0x0A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MediumCharacterEntrySplashMinSpeed;                        // 0x0A48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C52M[0x4];                                     // 0x0A4C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             LargeCharacterEntrySplash;                                 // 0x0A50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LargeCharacterEntrySplashAudio;                            // 0x0A58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LargeCharacterEntrySplashMinSpeed;                         // 0x0A60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QZW1[0x4];                                     // 0x0A64(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AttributeSetClass;                                         // 0x0A68(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UME_AttributeSet>             CharacterAttributeSet;                                     // 0x0A70(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  AttributeDefaults;                                         // 0x0A78(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4FLO[0xC];                                     // 0x0A80(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_EDirOctant                                DesiredAnimDir;                                            // 0x0A8C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PKAX[0x3];                                     // 0x0A8D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RootMotionNonUniformTranslationScale;                      // 0x0A90(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XECH[0x18];                                    // 0x0A9C(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SeaLevelOffset;                                            // 0x0AB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_49NQ[0x4];                                     // 0x0AB8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RecentlyBumpedWindow;                                      // 0x0ABC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V75Z[0x18];                                    // 0x0AC0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsInvisibleToAI;                                          // 0x0AD8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RC4O[0x7];                                     // 0x0AD9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             SpawnParticleVFX;                                          // 0x0AE0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E7ZJ[0x8];                                     // 0x0AE8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  SpawnParticleRelativeOffset;                               // 0x0AF0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SpawnAkEvent;                                              // 0x0B20(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DespawnParticleVFX;                                        // 0x0B28(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                                  DespawnParticleRelativeOffset;                             // 0x0B30(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DespawnAkEvent;                                            // 0x0B60(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGeometryHit;                                             // 0x0B68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      AIPatrolPlotter[0x28];                                     // 0x0B78(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_UMCM[0x10];                                    // 0x0BA0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TerrorizeAmount;                                           // 0x0BB0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseOverlapCheck;                                          // 0x0BB4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KEE7[0x3];                                     // 0x0BB5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                AudioStatePulseTimerHandle;                                // 0x0BB8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsApex;                                                   // 0x0BC0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JW9K[0x7];                                     // 0x0BC1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FBoneBaseBlendWeight>                GrabbedIKSetup;                                            // 0x0BC8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInWaterVolume;                                          // 0x0BD8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZCD9[0x3];                                     // 0x0BD9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SoftLockNarratorEventName;                                 // 0x0BDC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       KilledByPlayerNarratorEventName;                           // 0x0BE4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       KilledPlayerNarratorEventName;                             // 0x0BEC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EAIThreatAlertState>          CurrentAlertState;                                         // 0x0BF4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F2OD[0x3];                                     // 0x0BF5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      CurrentInstigatingActor;                                   // 0x0BF8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  CharacterStateDialogTable;                                 // 0x0C00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTriggerWhipshotRecovery;                                  // 0x0C08(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               QueueRagdollStandup;                                       // 0x0C09(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SL0T[0x2];                                     // 0x0C0A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RagdollGetupDelay;                                         // 0x0C0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollGetupTime;                                          // 0x0C10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRagdollGetupWaiting;                                      // 0x0C14(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bGetupRagdollActive;                                       // 0x0C15(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_46K2[0x2];                                     // 0x0C16(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_WeaponComponent*                         AttachedWeapon;                                            // 0x0C18(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_Character");
		return ptr;
	}



	void UpdateVulnerability();
	void StopVoice();
	void StopAI(const struct FString& StopReason);
	void SetRootMotionNonUniformTranslationScale(const struct FVector& inRootMotionScale);
	void SetDesiredAnimDir(Maneater_EDirOctant AnimDir);
	void SetDeathPhysics(float PhysicsBlendDuration, bool bPartialPhysics);
	void SetAIPatrolPlotter(class ATwAIPatrolPlotter* InPatrolPlotter);
	void RestartAI(bool bMaintainAggroInfo);
	void PulseDynamicDialogueEvent(struct FName* DialogueEventName, TArray<struct FString> ArgumentValueNames);
	void ProcessRagdollImpactResponse(class UPhysicalMaterial* InstigatorPM, class UPrimitiveComponent* InstigatorComp, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse);
	void PostDynamicDialogueEvent(struct FName* DialogueEventName, TArray<struct FString>* ArgumentValueNames);
	bool PlayVoice(TEnumAsByte<Maneater_ECharacterVoiceEventType> VoiceType, int VoicePriority);
	void PlayFootstep();
	void OnStunArmorDepleted();
	void OnPlayerSharkGrowthLevelChanged(int NewLevel, bool bChangeFromTheoretical);
	void OnPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OnGameplayEffectRemoved(const struct FActiveGameplayEffect& RemovedGameplayEffect);
	void OnGameplayEffectApplied(class UAbilitySystemComponent* Source, const struct FGameplayEffectSpec& SpecApplied, const struct FActiveGameplayEffectHandle& ActiveHandle);
	void OnDied(class AController* Killer);
	void OnBump();
	bool IsVulnerable();
	bool IsUnderwater();
	bool IsTagged();
	bool IsSilhouetted();
	bool IsPhysicalAnimationActive();
	bool IsPassenger();
	bool IsInstigatingAnyAlerts();
	bool IsDrowning();
	bool IsCritVulnerable();
	bool IsBeingThrashedByPlayer();
	bool IsBeingThrashed();
	bool IsAliveAndWell();
	bool IsAbilitySystemComponentSetUp();
	bool HasPassedVulnerabilityThreshold();
	bool GetWasRecentlyBumped();
	struct FString GetVisionTypeAsDialogueString();
	struct FRotator GetThrashEscapeDirection();
	struct FVector GetRootMotionNonUniformTranslationScale();
	class AME_VehiclePawn* GetPassengerVehicle();
	int GetPassengerSeat();
	class UPhysicsAsset* GetOriginalPhysicsAsset();
	struct FNutrientChunkList GetNutritionData_BP();
	class UME_MercunaObstacleComponent* GetMercunaObstacle();
	class UME_MercunaNavigationComponent* GetMercunaNavigation();
	struct FString GetLocationAsDialogueString();
	struct FVector GetHeadLocation();
	class UME_PhysicalMaterial* GetFloorPhysicalMaterial();
	Maneater_EDirOctant GetDesiredAnimDir();
	class UCapsuleComponent* GetCollisionComponent();
	Maneater_EVisionType GetCharacterVisionType();
	class ATwAIPatrolPlotter* GetAIPatrolPlotter();
	class UME_AbilitySystemComponent* GetAbilitySystemComponent();
	void Died(class AController* Killer, bool bPlayDeathAnimation);
	void Despawn();
	void ClearAttachedProjectiles();
	bool CanVisionTypeSeeCharacter(Maneater_EVisionType VisionType);
	void BlendBackToDefault();
};

// Class Maneater.ME_AnimalCharacter
// 0x0330 (FullSize[0x0F50] - InheritedSize[0x0C20])
class AME_AnimalCharacter : public AME_Character
{
public:
	struct FAbilityInfoStruct                          ThrashReleaseGameplayAbility;                              // 0x0C20(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UClass*                                      ThrashReleaseGameplayEffect;                               // 0x0C38(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAbilityInfoStruct                          RagdollRecoveryGameplayAbility;                            // 0x0C40(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_AnimalAIController>       AnimalAIController;                                        // 0x0C58(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterAbilityTriggered;                               // 0x0C60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              StaminaConsumptionModifier;                                // 0x0C70(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastConsumedStaminaTime;                                   // 0x0C74(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PassiveHealthRegenRate;                                    // 0x0C78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4MA6[0x4];                                     // 0x0C7C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               HealthRegenSound;                                          // 0x0C80(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JAYT[0x4];                                     // 0x0C88(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PassiveHealthRegenPctMax;                                  // 0x0C8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TFWX[0x4];                                     // 0x0C90(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentSpeedPct;                                           // 0x0C94(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastWasSwimmingTime;                                       // 0x0C98(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBecomePhysicalOutOfWater;                                 // 0x0C9C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DHK3[0x3];                                     // 0x0C9D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               OutOfWaterSimulatedBodies;                                 // 0x0CA0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OutOfWaterPhysicsWeight;                                   // 0x0CB0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayPhysicalHitReactions;                                 // 0x0CB4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F80E[0x7];                                     // 0x0CB5(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PhysicalHitReactionMaxBlendWeight;                         // 0x0CBC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PhysicalHitReactionBlendOutTime;                           // 0x0CC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C5WS[0x4];                                     // 0x0CC4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               PhysicalHitReactionFixedBones;                             // 0x0CC8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTailStiffRotDelta;                                      // 0x0CD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JKL6[0xC];                                     // 0x0CDC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TailControlStrength;                                       // 0x0CE8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TailBoneName;                                              // 0x0CEC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8NR7[0x8];                                     // 0x0CF4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BaseDecayRate;                                             // 0x0CFC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K9WS[0x4];                                     // 0x0D00(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BaseThrashStaminaRecovery;                                 // 0x0D04(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseDecayRateAcceleration;                                 // 0x0D08(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxThrashStruggleBuffer;                                   // 0x0D0C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_26AZ[0x8];                                     // 0x0D10(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ThrashDecayAccelerationDelay;                              // 0x0D18(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LMOJ[0xC];                                     // 0x0D1C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DestructibleObjectStrikeDamageBonus;                       // 0x0D28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FeedHealthRegenRate;                                       // 0x0D2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FeedHealthRegenBonus;                                      // 0x0D30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D7X2[0x4];                                     // 0x0D34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               ReleasePreySound;                                          // 0x0D38(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             ReleasePreyVFX;                                            // 0x0D40(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       CurrentPreyActor;                                          // 0x0D48(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EThrashAttackType>            CurrentPreyThrashType;                                     // 0x0D50(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y2VF[0x3];                                     // 0x0D51(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UMeshComponent>               CurrentPreyMesh;                                           // 0x0D54(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UME_AnimInstance_Base>        CurrentPreyMeshABP;                                        // 0x0D5C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       JawSocketName;                                             // 0x0D64(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XYND[0x4];                                     // 0x0D6C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPreyGrabbed;                                             // 0x0D70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPreyConsumedDelegate;                                    // 0x0D80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnableThrashUI;                                          // 0x0D90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPreyReleased;                                            // 0x0DA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              LimbThickness;                                             // 0x0DB0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V1BJ[0x5C];                                    // 0x0DB4(0x005C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             PreGrabRoot;                                               // 0x0E10(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7B2Z[0x28];                                    // 0x0E18(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               AudioEventOnHit;                                           // 0x0E40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventOnHardHit;                                       // 0x0E48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEventOnDeath;                                         // 0x0E50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       OnDamagePlayerStingerName;                                 // 0x0E58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       OnDamagedByPlayerStingerName;                              // 0x0E60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TailWhipMassDifferential;                                  // 0x0E68(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ThrashMassDifferential;                                    // 0x0E70(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                           LargeWildlifeBody;                                         // 0x0E78(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLargeWildlifeUseCapsule;                                  // 0x0E80(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBlockSmallerWildlife;                                     // 0x0E81(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RMPL[0x6];                                     // 0x0E82(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bGetNutrientsOnConsume;                                    // 0x0E88(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XT2V[0x7];                                     // 0x0E89(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               AttackPointSocketNames;                                    // 0x0E90(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_51JE[0x8];                                     // 0x0EA0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentPreyGrabPointIndex;                                 // 0x0EA8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8X2K[0xC];                                     // 0x0EAC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaximumJawWidth;                                           // 0x0EB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PartialRagdollBlendSpeed;                                  // 0x0EBC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumRagdollMultiplier;                                  // 0x0EC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StunInAirRagdollWeight;                                    // 0x0EC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoneBaseBlendWeight>                InAirRagdoll;                                              // 0x0EC8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoneBaseBlendWeight>                InWaterStunRagdoll;                                        // 0x0ED8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoneBaseBlendWeight>                InWaterHitReactRagdoll;                                    // 0x0EE8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitReactBlendoutTime;                                      // 0x0EF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1IWO[0x4];                                     // 0x0EFC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FBoneBaseBlendWeight>                OnLandPartialRagdoll;                                      // 0x0F00(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UTGM[0x20];                                    // 0x0F10(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    SetMeshRotation;                                           // 0x0F30(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              BlendSpeed;                                                // 0x0F3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrailAlphaMultiplier;                                      // 0x0F40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WhipshotPhysics;                                           // 0x0F44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowNormalLungePopup;                                     // 0x0F48(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowApexLungePopup;                                       // 0x0F49(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MI3X[0x2];                                     // 0x0F4A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LungePopupCount;                                           // 0x0F4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimalCharacter");
		return ptr;
	}



	void UseKnockbackRagdoll();
	void UpdatePartialRagdoll(float DeltaSeconds);
	void UpdateJointBlendWeight(class USkeletalMeshComponent* SKM, const struct FName& BoneName, float PartialPhysicsBase, float AnimBlendMultiplier, float SpeedPercent);
	bool TryUseEvadeAbility(TEnumAsByte<Maneater_EComboDirection> InputDirection, bool bReversed);
	void StopThrashing();
	void SetThreatLevel(TEnumAsByte<Maneater_EAIThreatAlertState> NewAlertState, class AActor* InstigatingActor);
	void OnConsumedGrabPoint(const struct FThrashGrabPoint& ConsumedGrabPoint);
	void OnAbilityActivated(Maneater_EME_CharacterAbility Ability);
	void ModifyStamina(float Change);
	bool IsTransitioning();
	bool IsThrashing();
	bool IsLunging();
	bool IsEvading();
	bool HasAnyStamina();
	float GetThrashDecayPct();
	float GetThrashDamagePool();
	struct FVector GetTailLocation();
	float GetTailControlStrength();
	struct FName GetPreyAttachBoneName();
	float GetMaxMoveSpeed();
	struct FVector GetJawsLocation();
	float GetJawSize();
	float GetDrownSpeedModifier();
	float GetDrownSpeedBase();
	float GetCurrentSpeedPct();
	float GetBaseThrashDamage();
	float GetBaseTailwhipDamage();
	float GetBaseStrugglePower();
	float GetBaseStrikeDamage();
	float GetBaseBiteDamage();
	void EndKnockbackRagdoll();
	bool ConsumePreyWhole(class AActor* ThrashablePrey);
	bool CanGrabPrey(class AActor* ThrashablePrey);
	bool CanEnterCombatMovement();
};

// Class Maneater.ME_CharacterMovementComponent
// 0x0140 (FullSize[0x0750] - InheritedSize[0x0610])
class UME_CharacterMovementComponent : public UCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_05T1[0x30];                                    // 0x0610(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMomentumForce>                      ActiveForces;                                              // 0x0640(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     MercunaAcceleration;                                       // 0x0650(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     OverrideMercunaAcceleration;                               // 0x065C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    MercunaRotation;                                           // 0x0668(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     AngularVelocity;                                           // 0x0674(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxYawRate;                                                // 0x0680(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxPitchRate;                                              // 0x0684(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxRollRate;                                               // 0x0688(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAngularAcceleration;                                    // 0x068C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bPositionCorrected : 1;                                    // 0x0690(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7Z8L[0x3];                                     // 0x0691(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FallingHeightScalar;                                       // 0x0694(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallVelocityMax;                                           // 0x0698(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallVelocityScale;                                         // 0x069C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OJOV[0xB0];                                    // 0x06A0(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CharacterMovementComponent");
		return ptr;
	}



	void UpdateMercunaMovementProperties();
	void SetOverrideMercunaAcceleration(const struct FVector& OverrideAcceleration);
	struct FVector GetMercunaAcceleration();
	struct FVector GetLocalVelocity();
	bool AtSeaLevel();
};

// Class Maneater.ME_AnimalMovementComponent
// 0x009C (FullSize[0x07EC] - InheritedSize[0x0750])
class UME_AnimalMovementComponent : public UME_CharacterMovementComponent
{
public:
	bool                                               bCombatVelocityBased;                                      // 0x0750(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W2TG[0x3];                                     // 0x0751(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMercunaNavigationConfiguration             CombatMovementConfiguration;                               // 0x0754(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FMercunaNavigationConfiguration             AtEaseMovementConfiguration;                               // 0x0770(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                              SpeedModifier;                                             // 0x078C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMercuna3DMovementAccelerations             AccelerationModifiers;                                     // 0x0790(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MaxCombatPitchRate;                                        // 0x079C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCombatYawRate;                                          // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCombatRollRate;                                         // 0x07A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCombatAngAccel;                                         // 0x07A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SGHQ[0x14];                                    // 0x07AC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_AnimalCharacter*                         AnimalCharacter;                                           // 0x07C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMercunaNavigationConfiguration             InitialNavigationConfiguration;                            // 0x07C8(0x001C) (NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RD7O[0x8];                                     // 0x07E4(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimalMovementComponent");
		return ptr;
	}



};

// Class Maneater.ME_AnimInst_MenuShark
// 0x0058 (FullSize[0x02C0] - InheritedSize[0x0268])
class UME_AnimInst_MenuShark : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_EHYJ[0x8];                                     // 0x0268(0x0008) Fix Super Size
	struct FEvolutionAnimations                        JawAnimations;                                             // 0x0270(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEvolutionAnimations                        FinsAnimations;                                            // 0x0280(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEvolutionAnimations                        HeadAnimations;                                            // 0x0290(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEvolutionAnimations                        TailAnimations;                                            // 0x02A0(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEvolutionAnimations                        BodyAnimations;                                            // 0x02B0(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimInst_MenuShark");
		return ptr;
	}



};

// Class Maneater.ME_AnimInstance_Base
// 0x0224 (FullSize[0x048C] - InheritedSize[0x0268])
class UME_AnimInstance_Base : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_GXDK[0x8];                                     // 0x0268(0x0008) Fix Super Size
	TArray<class UAnimMontage*>                        HardLandingMontage;                                        // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        OnWaterSurfaceDeathAnimation;                              // 0x0280(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        DrowningDeathAnimation;                                    // 0x0290(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        DrowningSwimmingDeathAnimation;                            // 0x02A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        OnLandDeathAnimation;                                      // 0x02B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeathBlendingOut;                                         // 0x02C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EPlayerSharkTailDirection                 TailDirection;                                             // 0x02C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EPlayerSharkTailDirection                 OutroTailDirection;                                        // 0x02C2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q3IK[0x5];                                     // 0x02C3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimSequence*>                       HitFromLeft;                                               // 0x02C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       HitFromRight;                                              // 0x02D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       HitFromAbove;                                              // 0x02E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       HitFromBelow;                                              // 0x02F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       BitFromLeft;                                               // 0x0308(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       BitFromRight;                                              // 0x0318(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       BitFromAbove;                                              // 0x0328(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       BitFromBelow;                                              // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       VulnerableHitFromLeft;                                     // 0x0348(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       VulnerableHitFromRight;                                    // 0x0358(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitReactStruct                             HitReactA;                                                 // 0x0368(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FHitReactStruct                             HitReactB;                                                 // 0x0378(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FHitReactStruct                             HitReactC;                                                 // 0x0388(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     ActorVelocity;                                             // 0x0398(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     UnRotatedVelocity;                                         // 0x03A4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     NormUnRotatedVelocity;                                     // 0x03B0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActorSpeed;                                                // 0x03BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsMoving;                                                 // 0x03C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsOnLand;                                                 // 0x03C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasSwimmingLastFrame;                                     // 0x03C2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSwimming;                                               // 0x03C3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInWater;                                                // 0x03C4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFalling;                                                // 0x03C5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bNeedsToSurface;                                           // 0x03C6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsUnderWater;                                             // 0x03C7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCannotBreath;                                             // 0x03C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDrowning;                                               // 0x03C9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YT8Y[0x2];                                     // 0x03CA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PercentBreathRemaining;                                    // 0x03CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Healthpct;                                                 // 0x03D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthPercentPlayback;                                     // 0x03D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDead;                                                   // 0x03D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsPawnDead;                                               // 0x03D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OKHW[0x2];                                     // 0x03DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsDead;                                                    // 0x03DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IsAlive;                                                   // 0x03E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBleedingOut;                                            // 0x03E4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasGrabbedActor;                                          // 0x03E5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHadActorLastFrame;                                        // 0x03E6(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsGrabbedActor;                                           // 0x03E7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_ESkeletonGrabbableJoints                  GrabbedJoint;                                              // 0x03E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_ESkeletonGrabDirection                    GrabbedDirection;                                          // 0x03E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WD16[0x2];                                     // 0x03EA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TargetDistance;                                            // 0x03EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWhipshotPreThrow;                                         // 0x03F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsWhipshotThrown;                                         // 0x03F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z30N[0x2];                                     // 0x03F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WhipshotRagdollMultiplier;                                 // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PreThrowAlpha;                                             // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBeingThrashed;                                          // 0x03FC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_ECharacterInjuryState>        InjuryState;                                               // 0x03FD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NLQK[0x1];                                     // 0x03FE(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_ESkeletonGrabbableJoints                  LastLostJoint;                                             // 0x03FF(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<Maneater_ESkeletonGrabbableJoints>          AllLostJoints;                                             // 0x0400(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInRagdoll;                                              // 0x0410(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLockJawWidth;                                             // 0x0411(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLockBitePlacement;                                        // 0x0412(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AY53[0x1];                                     // 0x0413(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     BitePlacementLocation;                                     // 0x0414(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LockJawAnimValue;                                          // 0x0420(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OOIA[0x8];                                     // 0x0424(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    DeltaRotation;                                             // 0x042C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VJLU[0xC];                                     // 0x0438(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    MeshDeltaRotation;                                         // 0x0444(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              AbsActorPitch;                                             // 0x0450(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WMY0[0xC];                                     // 0x0454(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    ThrashersDeltaRotation;                                    // 0x0460(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    ActualMeshOffset;                                          // 0x046C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        WhipshotRecoveryAnimations;                                // 0x0478(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0T6V[0x4];                                     // 0x0488(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimInstance_Base");
		return ptr;
	}



	void PlayLostLimbAnimation(Maneater_ESkeletonGrabbableJoints LostJoint);
	class UAnimMontage* PlayDeathAnimation();
	void K2_Reset();
	class UAnimMontage* GetWhipshotRecoveryAnimation();
	class AME_Character* GetOwningCharacter();
	bool GetIsMoving();
};

// Class Maneater.ME_AnimInstance_NPC
// 0x00B4 (FullSize[0x0540] - InheritedSize[0x048C])
class UME_AnimInstance_NPC : public UME_AnimInstance_Base
{
public:
	unsigned char                                      UnknownData_Y0N0[0x4];                                     // 0x048C(0x0004) Fix Super Size
	bool                                               bTargetIsKnifing;                                          // 0x0490(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9MN5[0x3];                                     // 0x0491(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FlatSquareTargetDistance;                                  // 0x0494(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PlayerLocation;                                            // 0x0498(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PlayerBodyMainLocation;                                    // 0x04A4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EAIThreatAlertState>          ThreatLevel;                                               // 0x04B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6KWX[0x7];                                     // 0x04B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      ThreatInstigator;                                          // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThreatInstigatorAlpha;                                     // 0x04C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ThreatInstigatorLocation;                                  // 0x04C4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAimLookat;                                             // 0x04D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseAimLookat;                                             // 0x04D1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5UQ7[0x2];                                     // 0x04D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UseAimLookatAlpha;                                         // 0x04D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MontageAddMultiplier;                                      // 0x04D8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThreatLookatYaw;                                           // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThreatLookatPitch;                                         // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bThreatInLookatDOT;                                        // 0x04E4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsThreatened;                                             // 0x04E5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsThreatInFront;                                          // 0x04E6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasMercunaAccelerationThisFrame;                          // 0x04E7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHadMercunaAccelerationLastFrame;                          // 0x04E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JGHX[0x3];                                     // 0x04E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ActorLookatFwdDOT;                                         // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActorLookatRightDOT;                                       // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActorLookatUpDOT;                                          // 0x04F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshCompLookatFwdDOT;                                      // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshCompLookatRightDOT;                                    // 0x04FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshCompLookatUpDOT;                                       // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRightSideOfMesh;                                          // 0x0504(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFrontSideOfMesh;                                          // 0x0505(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CYC3[0xA];                                     // 0x0506(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bMissingHead;                                              // 0x0510(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingLeftArm;                                           // 0x0511(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingRightArm;                                          // 0x0512(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingLeftLeg;                                           // 0x0513(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingRightLeg;                                          // 0x0514(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsMissingAnyLimbs;                                        // 0x0515(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QLC0[0x2];                                     // 0x0516(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IntroSpikeRate;                                            // 0x0518(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntroSpikeDuration;                                        // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntroSpikeBlendInRate;                                     // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntroSpikeBlendOutRate;                                    // 0x0524(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DP29[0x18];                                    // 0x0528(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimInstance_NPC");
		return ptr;
	}



};

// Class Maneater.ME_AnimInstance_HumanNPC
// 0x0540 (FullSize[0x0A80] - InheritedSize[0x0540])
class UME_AnimInstance_HumanNPC : public UME_AnimInstance_NPC
{
public:
	unsigned char                                      SoftScaredAnimationPtr[0x10];                              // 0x0540(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_RXH0[0x8];                                     // 0x0550(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               SelectedScaredAnimation;                                   // 0x0558(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScaredAnimationStartTime;                                  // 0x0560(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHoldingAttachment;                                      // 0x0564(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B4X6[0x3];                                     // 0x0565(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsHoldingAttachmentAlpha;                                  // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EWeaponType                               AttachmentType;                                            // 0x056C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsWithinWeaponRange;                                      // 0x056D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStartFiringMontage;                                       // 0x056E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayingFiringMontage;                                     // 0x056F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseLeftHandIK;                                            // 0x0570(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCarriedWeaponUsesIK;                                      // 0x0571(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBoatIsMoving;                                             // 0x0572(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EVehicleType                              VehicleType;                                               // 0x0573(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsePassengerBranch;                                       // 0x0574(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BHCX[0x3];                                     // 0x0575(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               PassengerIdleAnimation;                                    // 0x0578(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PassengerIdleStartTime;                                    // 0x0580(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TXL4[0x54];                                    // 0x0584(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpace*                                 PassengerAimBlendspaceAnimation;                           // 0x05D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GVA9[0x28];                                    // 0x05E0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               PassengerTurnRightAnimation;                               // 0x0608(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NHB3[0x28];                                    // 0x0610(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               PassengerTurnLeftAnimation;                                // 0x0638(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               PassengerSuspiciousAnimation;                              // 0x0640(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4BYX[0x28];                                    // 0x0648(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               PassengerAlertAnimation;                                   // 0x0670(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HQZ7[0x28];                                    // 0x0678(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               PassengerMovingAnimation;                                  // 0x06A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WY64[0x28];                                    // 0x06A8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        PassengerFiringAnimations;                                 // 0x06D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OOP5[0x10];                                    // 0x06E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        PassengerHitFromForwradsAnimations;                        // 0x06F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QGU0[0x10];                                    // 0x0700(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        PassengerHitFromBehindAnimations;                          // 0x0710(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UX7J[0x10];                                    // 0x0720(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        PassengerHitFromLeftAnimations;                            // 0x0730(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JLSZ[0x10];                                    // 0x0740(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        PassengerHitFromRightAnimations;                           // 0x0750(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X2DJ[0x10];                                    // 0x0760(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpace*                                 UnderStarboardBlendspace;                                  // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    StarboardRotationOffset;                                   // 0x0778(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     StarboardLocationOffset;                                   // 0x0784(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 UnderPortBlendspace;                                       // 0x0790(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    PortRotationOffset;                                        // 0x0798(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     PortLocationOffset;                                        // 0x07A4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimOverEdgePitchValue;                                     // 0x07B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimOverWaterDepthValue;                                    // 0x07B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VO59[0x8];                                     // 0x07B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bForceLookatFalse;                                         // 0x07C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverwriteTurningAnimations;                               // 0x07C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bJetskiHasHunterPassenger;                                 // 0x07C2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsPilot;                                                  // 0x07C3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanTrackTarget;                                           // 0x07C4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLaserActivated;                                           // 0x07C5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAimOverEdge;                                              // 0x07C6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseStarboardBlendspace;                                   // 0x07C7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GAYU[0x10];                                    // 0x07C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               DiverIdleAnimation;                                        // 0x07D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               DiverSuspiciousAnimation;                                  // 0x07E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               DiverAlertAnimation;                                       // 0x07E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               DiverMovingAnimation;                                      // 0x07F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 DiverMovingAlertAnimation;                                 // 0x07F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        DiverFiringAnimations;                                     // 0x0800(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingHeadAnimation;                                      // 0x0810(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingLeftArmAnimation;                                   // 0x0820(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingRightArmAnimation;                                  // 0x0830(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingLeftLegAnimation;                                   // 0x0840(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingRightLegAnimation;                                  // 0x0850(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingTorsoAnimation;                                     // 0x0860(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingLegsAnimation;                                      // 0x0870(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingBothLegs;                                          // 0x0880(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SEA5[0x17];                                    // 0x0881(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        BumpGoingForwards;                                         // 0x0898(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        BumpGoingBackwards;                                        // 0x08A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        BumpGoingRight;                                            // 0x08B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        BumpGoingLeft;                                             // 0x08C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CapsuleWaterHeight;                                        // 0x08D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseRagdollPose;                                           // 0x08DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseWaterRagdollPose;                                      // 0x08DD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1QP1[0x2];                                     // 0x08DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       RagdollPoseName;                                           // 0x08E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        UninjuredGetupChestUp;                                     // 0x08E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingLegGetupChestUp;                                    // 0x08F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        UninjuredGetupChestDown;                                   // 0x0908(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        MissingLegGetupChestDown;                                  // 0x0918(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomElectrocuteStartTime;                                // 0x0928(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PassengerElectrocute;                                      // 0x092C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GETH[0x3];                                     // 0x092D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SwimSpeed;                                                 // 0x0930(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimPlaybackRate;                                          // 0x0934(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BumpedValue;                                               // 0x0938(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MercunaBasedActorSpeed;                                    // 0x093C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFlailingInTheAir;                                         // 0x0940(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsSmash;                                                  // 0x0941(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XKIH[0x2];                                     // 0x0942(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DiverWeaponPlacementAlpha;                                 // 0x0944(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLookatTarget;                                             // 0x0948(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EOO5[0x3];                                     // 0x0949(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     TargetLocation;                                            // 0x094C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPassengerRootLookat;                                      // 0x0958(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPassengerPlayerLookat;                                    // 0x0959(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPassengerAbandonLookat;                                   // 0x095A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_89K4[0x1];                                     // 0x095B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerToSpineUpDot;                                        // 0x095C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerToSpineRightDot;                                     // 0x0960(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldJetskiPilotPoint;                                   // 0x0964(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPointAtTarget;                                            // 0x0965(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bJetskiPilotDuck;                                          // 0x0966(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseStandingJetski;                                        // 0x0967(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VXJA[0x8];                                     // 0x0968(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPassengerLeaveIdleState;                                  // 0x0970(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPassengerGoToAlerted;                                     // 0x0971(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPassengerLeaveAlerted;                                    // 0x0972(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPassengerGoToSuspicious;                                  // 0x0973(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPassengerLeaveMovingVehicle;                              // 0x0974(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A734[0x3];                                     // 0x0975(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PassengerSpineLookatAlpha;                                 // 0x0978(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ForcedHipsLoc;                                             // 0x097C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ForcedHipsRot;                                             // 0x0988(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ForcedHipsAlpha;                                           // 0x0994(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HumanSpineFwdDot;                                          // 0x0998(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HumanSpineRightDot;                                        // 0x099C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HumanSpineUpDot;                                           // 0x09A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NewSpineLookat;                                            // 0x09A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RootFwdDot;                                                // 0x09A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RootFwdASinD;                                              // 0x09AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTrackingRootLeft;                                         // 0x09B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U84Y[0x3];                                     // 0x09B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RootRightDot;                                              // 0x09B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RootUpDot;                                                 // 0x09B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     NPCIKElbowOffset;                                          // 0x09BC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    NPCSpineLookat;                                            // 0x09C8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    AimingElbowRotator;                                        // 0x09D4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              PointingDistance;                                          // 0x09E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsedSwimmingBallAlphaValue;                                // 0x09E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBeachGoerFakeStumble;                                     // 0x09E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasValidTargetingAimOffset;                               // 0x09E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasValidStandingTurnAnimations;                           // 0x09EA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NZVQ[0x1];                                     // 0x09EB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ActiveRootTargetingLocation;                               // 0x09EC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUpdateRootLookatVector;                                   // 0x09F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1OVR[0x7];                                     // 0x09F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UBlendSpace*>                         PossibleAlertBlendspaces;                                  // 0x0A00(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 SelectedAlertBlendspace;                                   // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                         PossibleEaseBlendspaces;                                   // 0x0A18(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 SelectedEaseBlendspace;                                    // 0x0A28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                         PossibleInjuredBlendspaces;                                // 0x0A30(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 SelectedInjuredBlendspace;                                 // 0x0A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                         PossibleMaimedBlendspaces;                                 // 0x0A48(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 SelectedMaimedBlendspace;                                  // 0x0A58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                         PossibleSuspiciousBlendspaces;                             // 0x0A60(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 SelectedSuspiciuosBlendspace;                              // 0x0A70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T2DF[0x8];                                     // 0x0A78(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimInstance_HumanNPC");
		return ptr;
	}



	void SetForcedHipsLocation();
	void SaveSoftWeaponReferences(bool* ValidSoft);
	void SaveSoftWeaponArrayReferences(bool* ValidSoft);
	void SaveSoftBlendSpaceReferences(bool* ValidSoft);
	void SaveHardWeaponReferences();
	void SaveHardWeaponBlendspace(class UBlendSpace** HardRef);
	void SaveHardWeaponAnimationArray(TArray<class UAnimMontage*>* HardArray);
	void SaveHardWeaponAnimation(class UAnimSequence** HardRef);
	void PlayPassengerHitReaction(const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& HitImpulse);
	void PlayGetupAnimation(bool ChestUp);
	class UAnimMontage* PlayFiringMontage();
	void PassengerHitReactionDelay(class UAnimMontage* MontageToPlay);
	void LoadSoftWeaponAnimations();
	void GetupAnimationBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	class UAnimMontage* GetUninjuredChestUpGetupAnimation();
	class UAnimMontage* GetUninjuredChestDownGetupAnimation();
	class UAnimMontage* GetInjuredChestUpGetupAnimation();
	class UAnimMontage* GetInjuredChestDownGetupAnimation();
	void FiringMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	bool CarryingWeaponRequiresAiming();
	void AddSoftWeaponAnimationArray(TArray<struct FSoftObjectPath>* ArrayToLoad);
};

// Class Maneater.ME_AnimInstance_PlayerShark
// 0x0414 (FullSize[0x08A0] - InheritedSize[0x048C])
class UME_AnimInstance_PlayerShark : public UME_AnimInstance_Base
{
public:
	float                                              BaseAnimationPlaybackRate;                                 // 0x048C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxKnifingAlphaSpeed;                                      // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTriggerIntroAnimation;                                    // 0x0494(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z0UF[0x3];                                     // 0x0495(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnderwaterStationaryYaw;                                   // 0x0498(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnderwaterStationaryPitch;                                 // 0x049C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CapsuleHalfHeight;                                         // 0x04A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseVulnerableGrab;                                        // 0x04A4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IR7N[0x3];                                     // 0x04A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxMeshAngle;                                              // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationSpeed;                                             // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshYawOffsetForFullRoll;                                  // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshYawRollRotationSpeed;                                  // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StationaryYawCounterRotation;                              // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StationaryPitchCounterRotation;                            // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCounterTailYawAngle;                                    // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeadYawRot;                                             // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeadRollRot;                                            // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeadPitchRot;                                           // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDorsalFinBend;                                          // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxVentralFinPitch;                                        // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxVentralFinYaw;                                          // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralThumbInterpSpeed;                                // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxVentralFinInAirPitchAngle;                              // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxVentralFinInAirRollAngle;                               // 0x04E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnderwaterCamYawValue;                                     // 0x04E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnderwaterCamPitchValue;                                   // 0x04EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftThumbYValue;                                           // 0x04F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftThumbXValue;                                           // 0x04F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHardlockForwards;                                         // 0x04F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IU2L[0x3];                                     // 0x04F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StrafeValue;                                               // 0x04FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InterpStrafeValue;                                         // 0x0500(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsedInterpStrafeValue;                                     // 0x0504(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMovementInputPressed;                                     // 0x0508(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMouthAutoClosedWithBite;                                  // 0x0509(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMouthOpenPressed;                                         // 0x050A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EKYM[0x1];                                     // 0x050B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProceduralTrailControllerAlpha;                            // 0x050C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHardLocked;                                             // 0x0510(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCruisingWaterLine;                                      // 0x0511(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWasCruisingWaterLineLastFrame;                            // 0x0512(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableKnifingIK;                                          // 0x0513(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralKnifingRootAlpha;                                // 0x0514(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFreemoveEnabled;                                        // 0x0518(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPlayerGrowthStage>           CurrentEvolutionStage;                                     // 0x0519(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KMSX[0x2];                                     // 0x051A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxIntroSpeedChange;                                       // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxIntroSpeedInterp;                                       // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntroSpeedBurstTime;                                       // 0x0524(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurningSpikePlaybackIncrease;                              // 0x0528(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurningSpikeDuration;                                      // 0x052C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurningSpikeFalloffRate;                                   // 0x0530(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurningSpikeCameraDegree;                                  // 0x0534(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurningSpikeRollDegree;                                    // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurningSpikeMinSpeed;                                      // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnifingTurningSideOffset;                                  // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnifingHeadRollMax;                                        // 0x0544(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnifingHeadYawMax;                                         // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnifingInputRotationRange;                                 // 0x054C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnifingInputRotationValue;                                 // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsedKnifingAlphaValue;                                     // 0x0554(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsedKnifingTailTrailAlpha;                                 // 0x0558(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnifingCameraRollMaximum;                                  // 0x055C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EWUX[0x10];                                    // 0x0560(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimSequence*>                       BumpToTheRight;                                            // 0x0570(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       BumpToTheLeft;                                             // 0x0580(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdditiveAnimStruct                         BumpAdditiveA;                                             // 0x0590(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FAdditiveAnimStruct                         BumpAdditiveB;                                             // 0x05A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              OnLandHeightOffset;                                        // 0x05B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     UsedOnLandHeightOffset;                                    // 0x05B4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreyThrowSetup;                                           // 0x05C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B6A5[0x3];                                     // 0x05C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InAirPitchAngle;                                           // 0x05C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InAirPitchSpeed;                                           // 0x05C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InAirPitchInterpValue;                                     // 0x05CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InAirRollAngle;                                            // 0x05D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InAirRollSpeed;                                            // 0x05D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InAirRollInterpValue;                                      // 0x05D8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InAirYawAngle;                                             // 0x05DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InAirYawSpeed;                                             // 0x05E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InAirYawInterpValue;                                       // 0x05E4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    InAirBodySpin;                                             // 0x05E8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    InAirLeftVentralFin;                                       // 0x05F4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    InAirRightVentralFin;                                      // 0x0600(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4382[0x8];                                     // 0x060C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnderwaterCamYawInterp;                                    // 0x0614(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UnderwaterCamPitchInterp;                                  // 0x0618(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeshYawInterp;                                             // 0x061C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeshPitchInterp;                                           // 0x0620(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasPlayerInputtingMovementLastFrame;                      // 0x0624(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPlayerInputtingMovement;                                // 0x0625(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LQY3[0x2];                                     // 0x0626(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsPlayerInputtingMovementInterp;                           // 0x0628(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProceduralHeadAlpha;                                       // 0x062C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProceduralIKTailAlpha;                                     // 0x0630(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    ProceduralRootRotation;                                    // 0x0634(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    ProceduralTailCounterRootRotation;                         // 0x0640(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    DorsalFinRot;                                              // 0x064C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              DorsalFinAlpha;                                            // 0x0658(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    LeftVentralFinRot;                                         // 0x065C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    RightVentralFinRot;                                        // 0x0668(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              VentralFinAlpha;                                           // 0x0674(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UsedVentralFinInAirPitchAngle;                             // 0x0678(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UsedVentralFinInAirRollAngle;                              // 0x067C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    HeadRot;                                                   // 0x0680(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              UsedBaseAnimationPlaybackRate;                             // 0x068C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_COKI[0x1C];                                    // 0x0690(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    ProceduralKnifingRootRotation;                             // 0x06AC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    ProceduralKnifingTailRotation;                             // 0x06B8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     ProceduralKnifingRootTranslation;                          // 0x06C4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    ProceduralKnifingHeadRotation;                             // 0x06D0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bTriggerOutro;                                             // 0x06DC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLockSpeeds;                                               // 0x06DD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K2RN[0x2];                                     // 0x06DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UsedForwardValue;                                          // 0x06E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UsedStrafingValue;                                         // 0x06E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SOGV[0x10];                                    // 0x06E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseForcedBitePlacement;                                   // 0x06F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForcedBitePlacement;                                      // 0x06F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NH7E[0x6];                                     // 0x06FA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  ForcedBiteTransform;                                       // 0x0700(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bPreWhipShot;                                              // 0x0730(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AA2L[0x3];                                     // 0x0731(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     WhipshotImpactLocation;                                    // 0x0734(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PreWhipshotHoldLoc;                                        // 0x0740(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    PreWhipshotHoldRot;                                        // 0x074C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    PreWhipshotHoldRotSpin;                                    // 0x0758(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              GrabbedPlaybackValue;                                      // 0x0764(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsedGrabbedPlaybackRate;                                   // 0x0768(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RZCU[0x8];                                     // 0x076C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ABSTotalDegDif;                                            // 0x0774(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     UsedSpinningSharkOffset;                                   // 0x0778(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumTurningHorizontalOffset;                            // 0x0784(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCameraRotation;                                        // 0x0788(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IGBF[0x3];                                     // 0x0789(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UsedVentralFinPlayrateValue;                               // 0x078C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsedInterpForwardValue;                                    // 0x0790(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsedCameraChangeAlpha;                                     // 0x0794(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowTransitionIntoBiteIntro;                             // 0x0798(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowTransitionIntoEmptyBite;                             // 0x0799(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowTransitionIntoBiteVictim;                            // 0x079A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHoldBiteEmptyState;                                       // 0x079B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHoldBiteIntroState;                                       // 0x079C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5HGG[0x3];                                     // 0x079D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FullCameraYawChange;                                       // 0x07A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumRootRollViaCameraYaw;                               // 0x07A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumRootYawViaCameraYaw;                                // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumTailCounterYawViaCameraYaw;                         // 0x07AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TailYawInterpSpeed;                                        // 0x07B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   MappedCameraAlphaValues;                                   // 0x07B4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMutagenScales;                                         // 0x07BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R6LM[0x3];                                     // 0x07BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     MutagenHead02;                                             // 0x07C0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenHead01;                                             // 0x07CC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBodyMain;                                           // 0x07D8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBody01;                                             // 0x07E4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBody02;                                             // 0x07F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBody03;                                             // 0x07FC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBody04;                                             // 0x0808(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBody05;                                             // 0x0814(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBody06;                                             // 0x0820(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBody07;                                             // 0x082C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MutagenBody08;                                             // 0x0838(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnifingMeshYawOffsetForFullRoll;                           // 0x0844(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KifingMeshYawRollRotationSpeed;                            // 0x0848(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxKnifingMeshAngle;                                       // 0x084C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumRootKnifingRollViaCameraYaw;                        // 0x0850(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumRootKnifingYawViaCameraYaw;                         // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumKnifingTailCounterYawViaCameraYaw;                  // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ProceduralRootOffset;                                      // 0x085C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnifingRootOffsetInterpSpeed;                              // 0x0868(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RootOffsetInterpSpeed;                                     // 0x086C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        VulnerableMontages;                                        // 0x0870(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MZ9D[0x10];                                    // 0x0880(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsJumping;                                                // 0x0890(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1LRL[0x3];                                     // 0x0891(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UsedPitchInterpValue;                                      // 0x0894(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I92X[0x8];                                     // 0x0898(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimInstance_PlayerShark");
		return ptr;
	}



	void UpdateKnifingRotation(const struct FRotator& MeshRotation, const struct FRotator& ActorRotation);
	void SetCruisingWaterLine(bool SetTo);
	class AME_PlayerSharkCharacter* GetOwningShark();
	void FloppingTakeOff();
	void FloppingLanding();
};

// Class Maneater.ME_AnimInstance_WildlifeNPC
// 0x0130 (FullSize[0x0670] - InheritedSize[0x0540])
class UME_AnimInstance_WildlifeNPC : public UME_AnimInstance_NPC
{
public:
	Maneater_EWildlifeSpecies                          SpeciesType;                                               // 0x0540(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAlligator;                                              // 0x0541(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E9AA[0x2];                                     // 0x0542(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CustomHeightOffset;                                        // 0x0544(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     OnLandVectorOffset;                                        // 0x0548(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovingPlaybackRate;                                        // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumSwimSpeed;                                          // 0x0558(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsedSwimmingPlaybackRate;                                  // 0x055C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntroYawAngle;                                             // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntroPitchAngle;                                           // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BodyMainOffset;                                            // 0x0568(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    BodyMainRotation;                                          // 0x0574(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    TailCoutnerRotation;                                       // 0x0580(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MAVU[0x4];                                     // 0x058C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        IntroTailMidGoingLeft;                                     // 0x0590(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        IntroTailExtremeLeft;                                      // 0x05A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        IntroTailMidGoingRight;                                    // 0x05B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        IntroTailExtremeRight;                                     // 0x05C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        OutroTailMidGoingLeft;                                     // 0x05D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        OutroTailExtremeLeft;                                      // 0x05E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        OutroTailMidGoingRight;                                    // 0x05F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        OutroTailExtremeRight;                                     // 0x0600(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ThrashAttackerWorldRotation;                               // 0x0610(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    ThrashAttackerWorldRotationLastFrame;                      // 0x061C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseGrabbedBranch;                                         // 0x0628(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_39CU[0x3];                                     // 0x0629(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              lockedMovementSpeed;                                       // 0x062C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H19O[0x4];                                     // 0x0630(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     IdleHeadLookat;                                            // 0x0634(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrailAlpha;                                                // 0x0640(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayCloseMouth;                                           // 0x0644(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TYFD[0x3];                                     // 0x0645(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    GrabbedDirectionRootOffset;                                // 0x0648(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bMissingBody04;                                            // 0x0654(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingTail;                                              // 0x0655(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingDorsalFin;                                         // 0x0656(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingRVentralFin;                                       // 0x0657(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMissingLVentralFin;                                       // 0x0658(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3VK6[0x3];                                     // 0x0659(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ThreatLevelTrailAlpha;                                     // 0x065C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombatMovementTrailAlpha;                                  // 0x0660(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TailWhipForcedLocation;                                    // 0x0664(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VPYN[0x8];                                     // 0x0668(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimInstance_WildlifeNPC");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_ApplyEffect
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UME_AnimNotify_ApplyEffect : public UAnimNotify
{
public:
	Maneater_EEffectTarget                             EffectTarget;                                              // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6JK0[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              GameplayEffects;                                           // 0x0040(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRemoveEffects;                                            // 0x0050(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BPNZ[0x7];                                     // 0x0051(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_ApplyEffect");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_BroadcastAttack
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UME_AnimNotify_BroadcastAttack : public UAnimNotify
{
public:
	float                                              BroadcastNotificationDistance;                             // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsBite;                                                   // 0x003C(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5M1T[0x3];                                     // 0x003D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_BroadcastAttack");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_ChunkVictim
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UME_AnimNotify_ChunkVictim : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_ChunkVictim");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_DataTableAkEvent
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UME_AnimNotify_DataTableAkEvent : public UAnimNotify
{
public:
	struct FName                                       EventName;                                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bFollow : 1;                                               // 0x0040(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZDP7[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AttachName;                                                // 0x0044(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LIUN[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_DataTableAkEvent");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_DialogueAkEvent
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UME_AnimNotify_DialogueAkEvent : public UAnimNotify
{
public:
	struct FDataTableRowHandle                         DialogueRowHandle;                                         // 0x0038(0x0010) (Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               Event;                                                     // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_DialogueAkEvent");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_DialogueFile
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_AnimNotify_DialogueFile : public UAnimNotify
{
public:
	struct FDataTableRowHandle                         DialogueRowHandle;                                         // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_DialogueFile");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_DynamicDialogueEvent
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UME_AnimNotify_DynamicDialogueEvent : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_DynamicDialogueEvent");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_FireWeapon
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UME_AnimNotify_FireWeapon : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_FireWeapon");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_GibVictim
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UME_AnimNotify_GibVictim : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_GibVictim");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_PlayCameraAnimation
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UME_AnimNotify_PlayCameraAnimation : public UAnimNotify
{
public:
	class UCameraAnim*                                 CamAnim;                                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CamRate;                                                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CamBlendInTime;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CamBlendOutTime;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CamScale;                                                  // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_PlayCameraAnimation");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_ReleaseDamage
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UME_AnimNotify_ReleaseDamage : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_ReleaseDamage");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_SetAIMoveRotation
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UME_AnimNotify_SetAIMoveRotation : public UAnimNotify
{
public:
	Maneater_EThreeStateSwitch                         MovementState;                                             // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EThreeStateSwitch                         RotationState;                                             // 0x0039(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BGRA[0x6];                                     // 0x003A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_SetAIMoveRotation");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_SpawnChunkParticles
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UME_AnimNotify_SpawnChunkParticles : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_SpawnChunkParticles");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_SpawnLargeChunkParticle
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UME_AnimNotify_SpawnLargeChunkParticle : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_SpawnLargeChunkParticle");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_ThrashDamage
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_AnimNotify_ThrashDamage : public UAnimNotify
{
public:
	TArray<class UClass*>                              HitEffects;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_ThrashDamage");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_ThrowPrey
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UME_AnimNotify_ThrowPrey : public UAnimNotify
{
public:
	float                                              MinimumKnifingPitch;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XCHG[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      EffectToApply;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ImpactEffectToApply;                                       // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_ThrowPrey");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_TwAkEvent
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_AnimNotify_TwAkEvent : public UAnimNotify
{
public:
	class UDataTable*                                  SearchTable;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AkEvent;                                                   // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_TwAkEvent");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_TwNarratorEvent
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UME_AnimNotify_TwNarratorEvent : public UAnimNotify
{
public:
	struct FName                                       EventName;                                                 // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_TwNarratorEvent");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_UpdateAIFocus
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_AnimNotify_UpdateAIFocus : public UAnimNotify
{
public:
	bool                                               bClearFocus;                                               // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A1OT[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       BlackboardKeyName;                                         // 0x003C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EAIFocus                                  Focus;                                                     // 0x0044(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CCR3[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_UpdateAIFocus");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyFootstep
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UME_AnimNotifyFootstep : public UAnimNotify
{
public:
	class UAkAudioEvent*                               PreviewEvent;                                              // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyFootstep");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyState_DangerSense
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UME_AnimNotifyState_DangerSense : public UAnimNotifyState
{
public:
	float                                              DangerSenseBonus;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZUID[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyState_DangerSense");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyState_DeadPhysBlend
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UME_AnimNotifyState_DeadPhysBlend : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyState_DeadPhysBlend");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyState_ForceStopIK
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UME_AnimNotifyState_ForceStopIK : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyState_ForceStopIK");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyState_HideWeapon
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UME_AnimNotifyState_HideWeapon : public UAnimNotifyState
{
public:
	class UStaticMeshComponent*                        WeaponComponent;                                           // 0x0030(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2RO6[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyState_HideWeapon");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotify_ManageGameplayTag
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UME_AnimNotify_ManageGameplayTag : public UAnimNotifyState
{
public:
	struct FGameplayTagContainer                       ActivateAbilitiesWithTags;                                 // 0x0030(0x0020) (Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       ManagedTags;                                               // 0x0050(0x0020) (Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UClass*                                      ManagedGameplayEffect;                                     // 0x0070(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JNOO[0x8];                                     // 0x0078(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotify_ManageGameplayTag");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyState_MeleeAttack
// 0x0138 (FullSize[0x0168] - InheritedSize[0x0030])
class UME_AnimNotifyState_MeleeAttack : public UAnimNotifyState
{
public:
	Maneater_EAttackShape                              AttackCollisionShape;                                      // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O46G[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AttackZOffset;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AttackLocalOffset;                                         // 0x0038(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AttackLocalRotation;                                       // 0x0044(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackLength;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackRadius;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BoxCollisionShape;                                         // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDataTableOverride;                                     // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WLEA[0x3];                                     // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDataTableRowHandle                         AttackShapeTableRow;                                       // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                              AttackMomentum;                                            // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseHitNormalMomentumDirection;                            // 0x007C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MU99[0x3];                                     // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     MomentumLocalRotation;                                     // 0x0080(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EBYS[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGameplayAttribute>                  AttackMomentumModifiers;                                   // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>                  DefenseMomentumModifiers;                                  // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttackShouldRagdoll;                                      // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyRagdollIfVulnerable;                                  // 0x00B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMultiHitAttack;                                           // 0x00B2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bExcludeHeldTarget;                                        // 0x00B3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AttackIndex;                                               // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceDropGrabVictim;                                      // 0x00B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSoftLockMagnetism;                                     // 0x00B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugAttacks;                                             // 0x00BA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2JZI[0x1];                                     // 0x00BB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DebugDrawTime;                                             // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              GameplayEffects;                                           // 0x00C0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              VulnerableNoGrabGameplayEffects;                           // 0x00D0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              SizeLevelDependentGameplayEffects;                         // 0x00E0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanApplyDamage;                                           // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAlwaysApplyMomentum;                                      // 0x00F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAlwaysApplyGameplayEffects;                               // 0x00F2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bGrabbingAttack;                                           // 0x00F3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPlayerBite;                                             // 0x00F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReleasePreyAtEnd;                                         // 0x00F5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRegisterGeometryHits;                                     // 0x00F6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y2YG[0x1];                                     // 0x00F7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumAttackDelayTime;                                    // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCommandeerCamera;                                         // 0x00FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLoseAIFocusOnHit;                                         // 0x00FD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStopRootMotionOnHit;                                      // 0x00FE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bScaleCapsuleOnGrab;                                       // 0x00FF(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaleCapsuleRadius;                                        // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaleCapsuleHalfHeight;                                    // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AttackUpscale;                                             // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1IUH[0x5C];                                    // 0x010C(0x005C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyState_MeleeAttack");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyState_MeleeAttackSimple
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UME_AnimNotifyState_MeleeAttackSimple : public UAnimNotifyState
{
public:
	float                                              AttackMomentum;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BZLK[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              GameplayEffects;                                           // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeAttackRadius;                                         // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KickImpulseMagnitudeXY;                                    // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KickImpulseMagnitudeZ;                                     // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bUseNearestPointOnShark : 1;                               // 0x0054(0x0001) BIT_FIELD (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M8WW[0x3];                                     // 0x0055(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyState_MeleeAttackSimple");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyState_ScalePrey
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UME_AnimNotifyState_ScalePrey : public UAnimNotifyState
{
public:
	float                                              UnifromScaleSize;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GZOO[0x1C];                                    // 0x0034(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyState_ScalePrey");
		return ptr;
	}



};

// Class Maneater.ME_AnimNotifyState_TemporaryProp
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UME_AnimNotifyState_TemporaryProp : public UAnimNotifyState
{
public:
	class UStaticMesh*                                 PropAsset;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_ESkeletonAttachJoints                     AttachJoint;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C405[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PostNotifyLifespan;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPhysicsAfterNotify;                                       // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bImpulseAfterNotify;                                       // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7MKU[0x2];                                     // 0x0042(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ImpulseMultiplier;                                         // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AStaticMeshActor*                            PropActor;                                                 // 0x0048(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IJP8[0x10];                                    // 0x0050(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AnimNotifyState_TemporaryProp");
		return ptr;
	}



};

// Class Maneater.ME_AssetLoader
// 0x00D0 (FullSize[0x02F0] - InheritedSize[0x0220])
class AME_AssetLoader : public AActor
{
public:
	TArray<class UDataTable*>                          DefaultDataTables;                                         // 0x0220(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                          EvolutionDataTables;                                       // 0x0230(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AssetLoadingFinishedDelegate;                              // 0x0240(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FLoadedAssets>           SavedAssets;                                               // 0x0250(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XKG4[0x50];                                    // 0x02A0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AssetLoader");
		return ptr;
	}



	class USkeletalMesh* GetSkeletalMesh(const struct FName& sEventName);
	TArray<class UParticleSystem*> GetParticleSystemList(TArray<struct FName> EventNames, TEnumAsByte<Maneater_ECharacterActionMode> eActionMode);
	class UParticleSystem* GetParticleSystem(const struct FName& sEventName, TEnumAsByte<Maneater_ECharacterActionMode> eActionMode);
	class UMaterialInterface* GetMaterial(const struct FName& sEventName);
	struct FImpactEffect GetImpactEffect(const struct FName& sNameBase, TEnumAsByte<Engine_EPhysicalSurface> eSurfaceType);
	struct FString GetEquippedEvolutionRowName(Maneater_EEvolutionSlot SlotType);
	class UAkAudioEvent* GetAudioEventWithSurface(const struct FName& sEventName, TEnumAsByte<Engine_EPhysicalSurface> eSurfaceType);
	class UAkAudioEvent* GetAudioEvent(const struct FName& sEventName, TEnumAsByte<Maneater_ECharacterActionMode> eActionMode);
	class UAnimMontage* GetAnimMontage(const struct FName& sEventName, TEnumAsByte<Maneater_ECharacterActionMode> eActionMode);
};

// Class Maneater.ME_AttachmentAnimSet
// 0x00F0 (FullSize[0x0120] - InheritedSize[0x0030])
class UME_AttachmentAnimSet : public UDataAsset
{
public:
	unsigned char                                      SoftIdleAnimations[0x10];                                  // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftSuspiciousAnimations[0x10];                            // 0x0040(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftAlertAimingBlendspace[0x28];                           // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SoftAlertAnimations[0x10];                                 // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftMovingAnimations[0x10];                                // 0x0088(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftHitFromForwradsAnimations[0x10];                       // 0x0098(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftHitFromBehindAnimations[0x10];                         // 0x00A8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftHitFromLeftAnimations[0x10];                           // 0x00B8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftHitFromRightAnimations[0x10];                          // 0x00C8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftFiringAnimations[0x10];                                // 0x00D8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftTurnRightAnimations[0x10];                             // 0x00E8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SoftTurnLeftAnimations[0x10];                              // 0x00F8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FVector                                     IKElbowOffset;                                             // 0x0108(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    AimingElbowRotation;                                       // 0x0114(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AttachmentAnimSet");
		return ptr;
	}



};

// Class Maneater.ME_GameplayEffect
// 0x00B8 (FullSize[0x0870] - InheritedSize[0x07B8])
class UME_GameplayEffect : public UGameplayEffect
{
public:
	class UPhysicalMaterial*                           PhysicalMaterialOverride;                                  // 0x07B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsPrimaryEffect;                                          // 0x07C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YCCY[0x7];                                     // 0x07C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMEGameplayEffectAudioEvent>         ActivationAudioEvents;                                     // 0x07C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectAudioEvent>         DeactivationAudioEvents;                                   // 0x07D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectParticleSystem>     ActivationParticleSystems;                                 // 0x07E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectParticleSystem>     PersistentParticleSystems;                                 // 0x07F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectParticleSystem>     DeactivationParticleSystems;                               // 0x0808(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectMaterialEffect>     PersistentMaterialEffects;                                 // 0x0818(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements                    SourceTagRequirements;                                     // 0x0828(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Montage;                                                   // 0x0868(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayEffect");
		return ptr;
	}



};

// Class Maneater.ME_GameplayEffectUIData
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UME_GameplayEffectUIData : public UGameplayEffectUIData
{
public:
	struct FText                                       Description;                                               // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	Maneater_EEvolutionProcType                        ProcType;                                                  // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RY6L[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayEffectUIData");
		return ptr;
	}



};

// Class Maneater.ME_AttributeSet
// 0x0200 (FullSize[0x0230] - InheritedSize[0x0030])
class UME_AttributeSet : public UAttributeSet
{
public:
	unsigned char                                      UnknownData_U91R[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMEGameplayAttributeData                    Damage;                                                    // 0x0040(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    Health;                                                    // 0x0060(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    AdditionalMaxHealth;                                       // 0x0080(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    Stamina;                                                   // 0x00A0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    StaminaRegenRate;                                          // 0x00C0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SwimMovementSpeed;                                         // 0x00E0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    AdditionalMaxSwimSpeed;                                    // 0x0100(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    WalkMovementSpeed;                                         // 0x0120(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MaxAcceleration;                                           // 0x0140(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SlamDamageDefense;                                         // 0x0160(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SizeLevel;                                                 // 0x0180(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SizeDelta;                                                 // 0x01A0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    WhipshotExplosionDamageReduction;                          // 0x01C0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CWAV[0x50];                                    // 0x01E0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AttributeSet");
		return ptr;
	}



};

// Class Maneater.ME_AudioEventManager
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UME_AudioEventManager : public UObject
{
public:
	TArray<struct FME_AudioEvent>                      EventProperties;                                           // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlobalCooldownSeconds;                                     // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EP5W[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     WWiseJukeboxName;                                          // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimAttenuationRollOnSeconds;                              // 0x0050(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimAttenuationRollOffSeconds;                             // 0x0054(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BountyMaxSuspicionLevel;                                   // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWhizzbyRange;                                           // 0x005C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttenuationValue;                                          // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              NextGlobalFireTime;                                        // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               JukeboxStarted;                                            // 0x0068(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BankLoaded;                                                // 0x0069(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I3XE[0x26];                                    // 0x006A(0x0026) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AudioEventManager");
		return ptr;
	}



	void STATIC_Trigger(const struct FName& EventName, class UObject* WorldContextObject, int ForceMode);
	float STATIC_TickSwimAttenuation(bool InCombat, float DeltaTime);
	void STATIC_PostWhizzbyIfInRange(class UAkAudioEvent* Event, class AActor* Projectile, class UObject* WorldContextObject);
	bool IsBankLoaded();
	class UME_AudioEventManager* STATIC_GetAudioEventManager(class UObject* WorldContextObject);
	void DelayStartEx();
	void BankWaitCheckEx(class UWorld* World);
};

// Class Maneater.ME_ThrashableActor
// 0x00C0 (FullSize[0x02E0] - InheritedSize[0x0220])
class AME_ThrashableActor : public AActor
{
public:
	unsigned char                                      UnknownData_UZE0[0x38];                                    // 0x0220(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       FriendlyName;                                              // 0x0258(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  IconTexture;                                               // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_AnimalCharacter*                         ThrashAttacker;                                            // 0x0278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                              ThrashableMesh;                                            // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_AbilitySystemComponent*                  AbilitySystemComponent;                                    // 0x0288(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QZZG[0x8];                                     // 0x0290(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FThrashGrabPoint>                    ThrashGrabPoints;                                          // 0x0298(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         NutritionTableRow;                                         // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AttachedSound;                                             // 0x02B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               GrabbedSound;                                              // 0x02C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DeathSound;                                                // 0x02C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             WhipShotTrailParticle;                                     // 0x02D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LBEY[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ThrashableActor");
		return ptr;
	}



	void OnDied(class AController* Killer);
	float GetCurrentHealth_Implementation();
	class UME_AbilitySystemComponent* GetAbilitySystemComponent();
};

// Class Maneater.ME_AuraDamageActor
// 0x0120 (FullSize[0x0400] - InheritedSize[0x02E0])
class AME_AuraDamageActor : public AME_ThrashableActor
{
public:
	float                                              AuraRadius;                                                // 0x02E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B1MT[0x4];                                     // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              GameplayEffectClasses;                                     // 0x02E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCannotDamageBreachingShark;                               // 0x02F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOnlyDamageWalkingSharkIfStandingOnOwner;                  // 0x02F9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BVQ3[0x6];                                     // 0x02FA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FExplosionDamageEffects                     AuraFX;                                                    // 0x0300(0x0028) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bDebugAura;                                                // 0x0328(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UI08[0x7];                                     // 0x0329(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 StaticMeshVisualizer;                                      // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        VisualizerComponent;                                       // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             AuraParticle;                                              // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             AuraAboveWaterParticle;                                    // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AuraParticleDrawDistance;                                  // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AuraParticleSecondsBeforeInactive;                         // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSyncDamageToWaterline;                                    // 0x0358(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAffectsHumans;                                            // 0x0359(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAffectsAnimals;                                           // 0x035A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAffectsBoats;                                             // 0x035B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAffectsPlayerShark;                                       // 0x035C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ESQG[0x3];                                     // 0x035D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AuraParticleSocket;                                        // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       AuraAboveWaterParticleSocket;                              // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             DamagedParticleSystem;                                     // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               DamagedSound;                                              // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             DestroyedParticleSystem;                                   // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               DestroyedSound;                                            // 0x0388(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>            ParticleVisualizerComponents;                              // 0x0390(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YDOB[0x10];                                    // 0x03A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TWeakObjectPtr<class APawn>, struct FAuraStatus> AuraPawnMap;                                               // 0x03B0(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AuraDamageActor");
		return ptr;
	}



};

// Class Maneater.ME_BeachgoerEscapePlotter
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class AME_BeachgoerEscapePlotter : public ATwAIPatrolPlotter
{
public:
	unsigned char                                      EscapeVolume[0x28];                                        // 0x0230(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BeachgoerEscapePlotter");
		return ptr;
	}



};

// Class Maneater.ME_SpawnPointActor
// 0x00F8 (FullSize[0x0318] - InheritedSize[0x0220])
class AME_SpawnPointActor : public AActor
{
public:
	TArray<struct FVector>                             PristineSpawnPoints;                                       // 0x0220(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAISpawned;                                               // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpawnerRemoved;                                          // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bAlwaysPriority;                                           // 0x0250(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRegisterWithManager;                                      // 0x0251(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q97D[0x2];                                     // 0x0252(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AIDensity;                                                 // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpawnListEntry>                     SpawnLists;                                                // 0x0258(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRandomlySelectSpawnGroup;                                 // 0x0268(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_ESpawnRotationType>           SpawnRotation;                                             // 0x0269(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ORJX[0x2];                                     // 0x026A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FilterDelay;                                               // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_510L[0x4];                                     // 0x0270(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<Maneater_ESpawnGenerationType>         GenerationType;                                            // 0x0274(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_ESpawnProjectionType>         ProjectionType;                                            // 0x0275(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_29HE[0x2];                                     // 0x0276(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HalfExtentX;                                               // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HalfExtentY;                                               // 0x027C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpaceBetween;                                              // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumLayers;                                                 // 0x0284(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LayerSpace;                                                // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumRings;                                                  // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDiscardFailedProjections;                                 // 0x0290(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RM0G[0x3];                                     // 0x0291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProjectionOffsetZ;                                         // 0x0294(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TraceExtent;                                               // 0x0298(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V3VB[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      NavigationFilter;                                          // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             FilteredSpawnPoints;                                       // 0x02A8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2CN2[0x10];                                    // 0x02B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           CapsuleComponent;                                          // 0x02C8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EE7D[0x30];                                    // 0x02D0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      ActiveAlerts;                                              // 0x0300(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VWCT[0x8];                                     // 0x0310(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnPointActor");
		return ptr;
	}



	void TriggerSpawn(bool bForce);
	class UCapsuleComponent* GetCapsuleComponent();
	bool CanSpawnAI();
};

// Class Maneater.ME_BeachSpawner
// 0x0050 (FullSize[0x0368] - InheritedSize[0x0318])
class AME_BeachSpawner : public AME_SpawnPointActor
{
public:
	TArray<struct FBeachActivityEntry>                 ValidActivities;                                           // 0x0318(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBeachActivityEntry>                 ShuffledActivities;                                        // 0x0328(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T1KY[0x8];                                     // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PercentChanceOfFleeing;                                    // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7OFL[0x4];                                     // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ForcedEscapeVolumes[0x10];                                 // 0x0344(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      ExcludedEscapeVolumes[0x10];                               // 0x0358(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BeachSpawner");
		return ptr;
	}



};

// Class Maneater.ME_BlueprintFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_BlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BlueprintFunctionLibrary");
		return ptr;
	}



	void STATIC_SetPrimitiveMinDrawDistance(class UPrimitiveComponent* PrimitiveComponent, float MinDrawDistance);
	void STATIC_SetManeaterDefaultMinLOD(class UStaticMesh* StaticMesh);
	int STATIC_GetTriangleCount(class UStaticMesh* StaticMesh, int LODIndex);
	void STATIC_EnableOutlineRendering();
	void STATIC_DisableOutlineRendering(float InDuration);
};

// Class Maneater.ME_VehicleAIController
// 0x0038 (FullSize[0x0780] - InheritedSize[0x0748])
class AME_VehicleAIController : public AME_AIController
{
public:
	class AME_VehiclePawn*                             VehiclePawn;                                               // 0x0748(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RYYH[0x10];                                    // 0x0750(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMinMaxRange                                PassengerTargetingDelay;                                   // 0x0760(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L8PN[0x18];                                    // 0x0768(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_VehicleAIController");
		return ptr;
	}



	bool IsThreatUnderVehicle();
};

// Class Maneater.ME_BoatAIController
// 0x0068 (FullSize[0x07E8] - InheritedSize[0x0780])
class AME_BoatAIController : public AME_VehicleAIController
{
public:
	class AME_BoatPawn*                                BoatPawn;                                                  // 0x0780(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YIYR[0x8];                                     // 0x0788(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    AISpawnComplete;                                           // 0x0790(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7444[0x28];                                    // 0x07A0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxAI;                                                     // 0x07C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O7TA[0x4];                                     // 0x07CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               SpawnDiversBark;                                           // 0x07D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_56ZM[0x10];                                    // 0x07D8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BoatAIController");
		return ptr;
	}



	void OnTrackedAIDied(class AME_AIController* KilledAIC);
};

// Class Maneater.ME_VehicleCollisionComponent
// 0x0020 (FullSize[0x04C0] - InheritedSize[0x04A0])
class UME_VehicleCollisionComponent : public UStaticMeshComponent
{
public:
	float                                              LinearVelocitySoftCap;                                     // 0x04A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxImpulseSize;                                            // 0x04A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_VehiclePawn*                             VehicleOwner;                                              // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AME_OceanPhysicsVolume*                      TheWaterVolume;                                            // 0x04B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4IHC[0x8];                                     // 0x04B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_VehicleCollisionComponent");
		return ptr;
	}



};

// Class Maneater.ME_BoatCollisionComponent
// 0x0000 (FullSize[0x04C0] - InheritedSize[0x04C0])
class UME_BoatCollisionComponent : public UME_VehicleCollisionComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BoatCollisionComponent");
		return ptr;
	}



};

// Class Maneater.ME_BoatNameComponent
// 0x0070 (FullSize[0x02A0] - InheritedSize[0x0230])
class UME_BoatNameComponent : public UDecalComponent
{
public:
	struct FBoatNameData                               BoatName;                                                  // 0x0230(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCanvasRenderTarget2D*                       CanvasRT;                                                  // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    DecalMID;                                                  // 0x0288(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RWIX[0x10];                                    // 0x0290(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BoatNameComponent");
		return ptr;
	}



};

// Class Maneater.ME_VehiclePawn
// 0x0898 (FullSize[0x0B18] - InheritedSize[0x0280])
class AME_VehiclePawn : public APawn
{
public:
	unsigned char                                      UnknownData_GOA7[0x60];                                    // 0x0280(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_EVehicleType                              VehicleType;                                               // 0x02E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AE0B[0x3];                                     // 0x02E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     UnderBoatBoxExtent;                                        // 0x02E4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     UnderBoatBoxOffset;                                        // 0x02F0(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZT4M[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_VehicleCollisionComponent*               MeshComponent;                                             // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_BuoyancyForceComponent*                  BuoyancyComponent;                                         // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasDamageParticleEffect;                                  // 0x0310(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7RRU[0x7];                                     // 0x0311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    DamageParticleComponent;                                   // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                HitMaskResolution;                                         // 0x0320(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YJYW[0x4];                                     // 0x0324(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             MajorDamageParticleSystem;                                 // 0x0328(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MajorDamageSoundStart;                                     // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MajorDamageSoundStop;                                      // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             MinorDamageParticleSystem;                                 // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MinorDamageSoundStart;                                     // 0x0348(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MinorDamageSoundStop;                                      // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiredMassToInterruptCombat;                             // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiredMassToBreakApart;                                  // 0x035C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiredImpulseToInterruptCombat;                          // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombatInterruptCooldownTime;                               // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BeachedCheckCooldownTime;                                  // 0x0368(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BeachedCheckZScale;                                        // 0x036C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombatInterruptDuration;                                   // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2IHN[0xC];                                     // 0x0374(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HitImpulseLinearScale;                                     // 0x0380(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitImpulseMinAngle;                                        // 0x0384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitImpulseAngularDrag;                                     // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitImpulseCooldownTime;                                    // 0x038C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                                EngineSoundComponent;                                      // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     EngineSoundRTPC;                                           // 0x0398(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SinkingSoundRTPC;                                          // 0x03A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SinkingTimerRTPC;                                          // 0x03B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     TurningSoundRTPC;                                          // 0x03C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSideProtection;                                           // 0x03D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSinkWhenBeached;                                          // 0x03D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4ZBO[0x2];                                     // 0x03DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RideHeightZTolerance;                                      // 0x03DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SinkingMassScale;                                          // 0x03E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_965X[0x4];                                     // 0x03E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               SinkingSound;                                              // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SinkingLandSound;                                          // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SinkingCompleteSound;                                      // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CapsizeSound;                                              // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MBLT[0x8];                                     // 0x0408(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             SinkingVFX;                                                // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SinkingLandVFX;                                            // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SinkingWaterSurfaceVFX;                                    // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SinkingParticleZThreshold;                                 // 0x0428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MTBK[0x14];                                    // 0x042C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_VehicleAIController*                     VehicleAIController;                                       // 0x0440(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       FriendlyName;                                              // 0x0448(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                VehicleLevel;                                              // 0x0460(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OX5Y[0x4];                                     // 0x0464(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPassengerData>                      DefaultPassengers;                                         // 0x0468(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVehicleSeat>                        Seats;                                                     // 0x0478(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPassengers;                                             // 0x0488(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   PassengerEjectImpulse;                                     // 0x048C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OW6Q[0x4];                                     // 0x0494(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FThrashGrabPoint>                    ThrashGrabPoints;                                          // 0x0498(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         NutritionTableRow;                                         // 0x04A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TMap<struct FName, class UClass*>                  VehicleDebris;                                             // 0x04B8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FName, class UParticleSystem*>         VehicleDestructionVFX;                                     // 0x0508(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, class UParticleSystem*>         OnLandVehicleDestructionVFX;                               // 0x0558(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               VehicleDestructionSFX;                                     // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               OnLandVehicleDestructionSFX;                               // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GXCK[0x8];                                     // 0x05B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UShapeComponent*                             ShapeRootComponent;                                        // 0x05C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSharkRamRotation>                   SharkRamLocations;                                         // 0x05C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSharkRamRotation>                   UpwardSharkRamLocations;                                   // 0x05D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSharkRamRotation>                   LandOnBoatLocations;                                       // 0x05E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCurveVectorInfo>                    WaterLineThresholds;                                       // 0x05F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCurveVectorInfo>                    UnderwaterThresholds;                                      // 0x0608(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCurveVectorInfo>                    BoatLandingThresholds;                                     // 0x0618(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpwardForceDotProductThreshold;                            // 0x0628(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DLB3[0x14];                                    // 0x062C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRammed;                                                  // 0x0640(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnMeshSwapped;                                             // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                              SeatChangeRate;                                            // 0x0660(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XHA6[0x4];                                     // 0x0664(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPassengerData>                      Passengers;                                                // 0x0668(0x0010) (BlueprintVisible, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraAnim*                                 CinematicCameraAnimation;                                  // 0x0678(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G8HE[0x4];                                     // 0x0680(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HullWaterDepth;                                            // 0x0684(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasSunk;                                                  // 0x0688(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasBrokenApart;                                           // 0x0689(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HNIF[0x6];                                     // 0x068A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             SlamBreakApartVFX;                                         // 0x0690(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BreakApartSound;                                           // 0x0698(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BoatIsDeadSound;                                           // 0x06A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_VehiclePawn*                             DefaultVehicle;                                            // 0x06A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPilotEjected;                                            // 0x06B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MT8H[0x18];                                    // 0x06C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterial*                                   BaseMasterMaterial;                                        // 0x06D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVehicleDamageMaterialPoint>         MaterialDamagePoints;                                      // 0x06E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageToHitMaxImpactSize;                                  // 0x06F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxMaterialDamageSize;                                     // 0x06F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSizePerDamage;                                          // 0x06F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSizePerDamage;                                          // 0x06FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombinationDistance;                                       // 0x0700(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3UNH[0x4];                                     // 0x0704(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVehicleDamageMaterialPoint>         MaterialBloodPoints;                                       // 0x0708(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxMaterialBloodSize;                                      // 0x0718(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SizePerKill;                                               // 0x071C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BloodCombinationDistance;                                  // 0x0720(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B5CZ[0x4];                                     // 0x0724(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveVector*                                SinkCurve;                                                 // 0x0728(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SinkSpeed;                                                 // 0x0730(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SinkRotationModifier;                                      // 0x0738(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SinkMovementModifier;                                      // 0x0740(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSinkResistance;                                         // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DMNZ[0x4];                                     // 0x074C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxSinkTime;                                               // 0x0750(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q1HC[0x4];                                     // 0x0754(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SinkThreshold;                                             // 0x0758(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SinkWaterlineFudgeFactor;                                  // 0x075C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SinkingBoatCracks;                                         // 0x0760(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SinkingBoatJets;                                           // 0x0768(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SunkBoatWaterRear;                                         // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SunkBoatWaterFull;                                         // 0x0778(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystemComponent*>            SinkingParticleSystemComponents;                           // 0x0780(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    SunkBoatWaterPSCRear;                                      // 0x0790(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    SunkBoatWaterPSCFull;                                      // 0x0798(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SinkFXSocketName;                                          // 0x07A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SinkEjectInterval;                                         // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SinkEjectStartTime;                                        // 0x07AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PartiallySunkDepth;                                        // 0x07B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FullySunkDepth;                                            // 0x07B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DamageFireParamName;                                       // 0x07B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O2VX[0x1C];                                    // 0x07C0(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       EngineEffectMinorDamageSocketName;                         // 0x07DC(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EngineEffectMajorDamageSocketName;                         // 0x07E4(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y5RT[0x4];                                     // 0x07EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_VehicleMovementComponent*                VehicleMovement;                                           // 0x07F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>            DynamicDamageMaterials;                                    // 0x07F8(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8311[0x30];                                    // 0x0808(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVehicleDestructionLocation                 DestructionMeshSwap;                                       // 0x0838(0x00B8) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVehicleDestructionLocation                 DestructionMeshSwapSecondary;                              // 0x08F0(0x00B8) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UStaticMesh*                                 AllPointsDestroyedSwapoutMesh;                             // 0x09A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EK33[0x18];                                    // 0x09B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_MercunaObstacleComponent*                MercunaObstacle;                                           // 0x09C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UME_VehicleNavigationComponent*              MercunaNavigation;                                         // 0x09D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VRXQ[0x10];                                    // 0x09D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_AbilitySystemComponent*                  AbilitySystemComponent;                                    // 0x09E8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      AttributeSetClass;                                         // 0x09F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UME_AttributeSet>             CharacterAttributeSet;                                     // 0x09F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  AttributeDefaults;                                         // 0x0A00(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAbilityInfoStruct>                  CharacterAbilities;                                        // 0x0A08(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GGTK[0x8];                                     // 0x0A18(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TerrorizeAmount;                                           // 0x0A20(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R0V3[0x24];                                    // 0x0A24(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AIPatrolPlotter[0x28];                                     // 0x0A24(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	Maneater_EHunterRank                               HunterRank;                                                // 0x0A70(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KLWL[0x7];                                     // 0x0A71(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               DamageSoundStop;                                           // 0x0A78(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               DamageAudio;                                               // 0x0A80(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              FiringRandomTime;                                          // 0x0A88(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsBossVehicle;                                            // 0x0A8C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D5LL[0x3];                                     // 0x0A8D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FBossPhaseInfo>                      BossPhaseInfo;                                             // 0x0A90(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1ZBV[0x18];                                    // 0x0AA0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentBossPhase;                                          // 0x0AB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ElapsedBossPhaseTime;                                      // 0x0ABC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KYD2[0x8];                                     // 0x0AC0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AME_AIController*>                    ActiveBossHunters;                                         // 0x0AC8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_AIController*>                    ActiveBossHunterVehicles;                                  // 0x0AD8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SoftLockNarratorEventName;                                 // 0x0AE8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LJCM[0x8];                                     // 0x0AF0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               LivingDespawnEvent;                                        // 0x0AF8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GQQD[0x18];                                    // 0x0B00(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_VehiclePawn");
		return ptr;
	}



	void WallHit(class UPrimitiveComponent* MyComp, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation);
	void Timer_EjectPassenger(int PassengerIndex, class AController* EjectInstigator, bool bEjectingAllPassengers);
	void Timer_AbandonPassenger();
	bool Sink(class AController* SinkInstigator);
	void SetPassengerWeapon(int PassengerNum, class UClass* NewWeapon);
	void SetPassengerThreatLevel(TEnumAsByte<Maneater_EAIThreatAlertState> NewAlertState, class AActor* InstigatingActor);
	void SetBossPhase(int NewPhaseNumber);
	void SetAIPatrolPlotter(class ATwAIPatrolPlotter* InPatrolPlotter);
	bool RockBoat(int NewRamVerticalIndex, float RamForce, float RotationOfRam, const struct FVector& ForceNormal);
	bool RammedByAnimal(class AME_PlayerSharkCharacter* RammingAnimal, float RamForce);
	void OnVehicleEmptied();
	void OnSink(class AController* SinkInstigator);
	void OnPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OnMeshComponentHit(class UPrimitiveComponent* SelfActor, class AActor* OtherActor, class UPrimitiveComponent* OtherPrimitive, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnKilledBySlamAttack(class AME_PlayerSharkCharacter* PlayerShark);
	void OnGameplayEffectRemoved(const struct FActiveGameplayEffect& RemovedGameplayEffect);
	void OnGameplayEffectApplied(class UAbilitySystemComponent* Source, const struct FGameplayEffectSpec& SpecApplied, const struct FActiveGameplayEffectHandle& ActiveHandle);
	void OnDamageParticleEffectFinished(class UParticleSystemComponent* PSystem);
	void OnBreakApart(class AController* BreakInstigator);
	void K2_InitEntity();
	bool IsBossVehicle();
	bool IsAbilitySystemComponentSetUp();
	bool HasPilot();
	bool HasAnyWeapons();
	float GetRotationOfLocationAroundBoat(const struct FVector& PointLocation);
	class USkeletalMeshComponent* GetPassengerMesh(int PassengerIndex);
	class UME_MercunaObstacleComponent* GetMercunaObstacle();
	class UME_MercunaNavigationComponent* GetMercunaNavigation();
	Maneater_EHunterRank GetHunterRank();
	class ATwAIPatrolPlotter* GetAIPatrolPlotter();
	class UME_AbilitySystemComponent* GetAbilitySystemComponent();
	void FinishBreakApart();
	void EnableBossPhaseTimer(bool bEnabled);
	bool EjectPassenger(int PassengerIndex, class AController* EjectInstigator, class AME_HumanCharacter** EjectedPassenger, const struct FVector& EjectImpulse, bool bShouldRagdoll, bool bJumpOff, bool bSpawnController, bool bEjectingAllPassengers);
	void EjectAllPassengers(class AController* EjectInstigator);
	bool BreakApart(class AController* BreakInstigator);
	void BossPhaseChanged(int NewPhaseNumber, float PassengerRespawnDelay);
	bool BoardPassenger(class AME_HumanCharacter* NewPassenger);
};

// Class Maneater.ME_BoatPawn
// 0x00C0 (FullSize[0x0BD8] - InheritedSize[0x0B18])
class AME_BoatPawn : public AME_VehiclePawn
{
public:
	TArray<struct FBoatPropeller>                      Propellers;                                                // 0x0B18(0x0010) (Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_BoatAIController*                        BoatAIController;                                          // 0x0B28(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBeached;                                                  // 0x0B30(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5DCP[0x3];                                     // 0x0B31(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PSCDeactivationSpeed;                                      // 0x0B34(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxThrottlePitchDegrees;                                   // 0x0B38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThrottlePitchInterpSpeed;                                  // 0x0B3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxThrottleRollDegrees;                                    // 0x0B40(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThrottleRollInterpSpeed;                                   // 0x0B44(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SurfaceSkimHeightScale;                                    // 0x0B48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeshZInterpSpeed;                                          // 0x0B4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StationaryRockingMagnitude;                                // 0x0B50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StationaryRockingSpeed;                                    // 0x0B54(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSinkWhenFlipped;                                          // 0x0B58(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UDLW[0x27];                                    // 0x0B59(0x0027) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             PropellerPSTemplate;                                       // 0x0B80(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PRU5[0x8];                                     // 0x0B88(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_OceanSurfaceParticleSystemComponent*     SurfacePSCFront;                                           // 0x0B90(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanSurfaceParticleSystemComponent*     SurfacePSCRear;                                            // 0x0B98(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanSurfaceParticleSystemComponent*     SurfacePSCRight;                                           // 0x0BA0(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanSurfaceParticleSystemComponent*     SurfacePSCLeft;                                            // 0x0BA8(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             FrontPSCTemplate;                                          // 0x0BB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             RearPSCTemplate;                                           // 0x0BB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             RightPSCTemplate;                                          // 0x0BC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             LeftPSCTemplate;                                           // 0x0BC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinBroadsideFXVelocity;                                    // 0x0BD0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W3NY[0x4];                                     // 0x0BD4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BoatPawn");
		return ptr;
	}



	void OnBossCinematicStarted();
};

// Class Maneater.ME_BoatPawnNoNav
// 0x0020 (FullSize[0x0BF8] - InheritedSize[0x0BD8])
class AME_BoatPawnNoNav : public AME_BoatPawn
{
public:
	class UParticleSystem*                             IdleVFX;                                                   // 0x0BD8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IdleVFXVelocityThreshold;                                  // 0x0BE0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NVXB[0x14];                                    // 0x0BE4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BoatPawnNoNav");
		return ptr;
	}



};

// Class Maneater.ME_BodyTypeInformation
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UME_BodyTypeInformation : public UDataAsset
{
public:
	TArray<struct FThrashPointThickness>               ThrashJointThickness;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BodyTypeInformation");
		return ptr;
	}



};

// Class Maneater.ME_WorldLandmarkActor
// 0x00F8 (FullSize[0x0318] - InheritedSize[0x0220])
class AME_WorldLandmarkActor : public AActor
{
public:
	unsigned char                                      UnknownData_8T2A[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<Maneater_ELandmarkType>                LandmarkType;                                              // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_ELandmarkDiscoveryState>      DiscoveryState;                                            // 0x0231(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KB64[0x3E];                                    // 0x0232(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       FriendlyName;                                              // 0x0270(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       LandmarkDescription;                                       // 0x0288(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                                  LandmarkIcon;                                              // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  UndiscoveredIcon;                                          // 0x02A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SYSO[0x30];                                    // 0x02B0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               DiscoveredSound;                                           // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      DiscoveryBounds[0x28];                                     // 0x02E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_9C6K[0x8];                                     // 0x0310(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WorldLandmarkActor");
		return ptr;
	}



	void SetDiscoveryState(TEnumAsByte<Maneater_ELandmarkDiscoveryState> NewDiscoveryState);
	void ReceivePostInitializeComponents();
	void OnDiscoveryStateChanged(TEnumAsByte<Maneater_ELandmarkDiscoveryState> NewState);
};

// Class Maneater.ME_BossBattleInfo
// 0x0090 (FullSize[0x03A8] - InheritedSize[0x0318])
class AME_BossBattleInfo : public AME_WorldLandmarkActor
{
public:
	unsigned char                                      BossArenaVolume[0x28];                                     // 0x0318(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UAkAudioEvent*                               BossMusicStartEvent;                                       // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BossMusicStopEvent;                                        // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                              BossIntroCinematic;                                        // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBountyHunter;                                           // 0x0358(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_398O[0x3];                                     // 0x0359(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BountyActivationLevel;                                     // 0x035C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBattleFinished;                                           // 0x0360(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EBossBattleState>             CurrentBattleState;                                        // 0x0361(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayedIntroCinematic;                                     // 0x0362(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K6KP[0x5];                                     // 0x0363(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AME_AIController*>                    ActiveBosses;                                              // 0x0368(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              BattleSpawnedActors;                                       // 0x0378(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBossBattleEvent;                                         // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FQDF[0x10];                                    // 0x0398(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BossBattleInfo");
		return ptr;
	}



	void SetBattleState(TEnumAsByte<Maneater_EBossBattleState> NewBattleState);
	void OnIntroCinematicEnd();
	void OnBountyChanged(unsigned char NewBountyLevel, class AActor* BountyChangeInstigator);
	void BossBattleEventInternal(class AME_AIController* Boss, TEnumAsByte<Maneater_EBossBattleEvent> EventType);
};

// Class Maneater.ME_BossInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_BossInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BossInterface");
		return ptr;
	}



	struct FText GetBossName();
	float GetBossHealthPct();
	void GetBossBattleInfo();
};

// Class Maneater.ME_BountySpawner
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class AME_BountySpawner : public AActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BountySpawner");
		return ptr;
	}



};

// Class Maneater.ME_BossHunterSpawner
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AME_BossHunterSpawner : public AME_BountySpawner
{
public:
	class UClass*                                      PreferredBossClass;                                        // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BossHunterSpawner");
		return ptr;
	}



};

// Class Maneater.ME_BountyManager
// 0x03A8 (FullSize[0x05C8] - InheritedSize[0x0220])
class AME_BountyManager : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnBossHunterBoatDied;                                      // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBountyBeginning;                                         // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBountyEnding;                                            // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnThreatAdded;                                             // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInfamyRankUp;                                            // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBountyBossSpawnedDelegate;                               // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_92PJ[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UME_BountyTier*>                      ME_BountyTiers;                                            // 0x0288(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                InfamyPointsEarnedPerKill;                                 // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxInfamyTier;                                             // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BountySpawnDistanceMultiple;                               // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxNumActiveDivers;                                        // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSharkWitnessDistance;                                   // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeUntilThreatDegrades;                                   // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThreatDegradationInterval;                                 // 0x02B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TimeRecentKillStaysActive;                                 // 0x02B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinDistanceForCinematic;                                   // 0x02B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BountyActiveTime;                                          // 0x02BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReturnToSearchDelay;                                       // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReinforcementTime;                                         // 0x02C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RetreatTimeoutTime;                                        // 0x02C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceForDespawning;                                     // 0x02CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BossKillSlomoRatio;                                        // 0x02D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BossKillSlomoDuration;                                     // 0x02D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMinMaxRange                                BountySearchingPulsePeriod;                                // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FString                                     RadioStartName;                                            // 0x02E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     RadioReinforcementsName;                                   // 0x02F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     RadioEndEvadeName;                                         // 0x0300(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     RadioEndDeathName;                                         // 0x0310(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     RadioSearchingStartName;                                   // 0x0320(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     RadioFoundBoatName;                                        // 0x0330(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     RadioSearchingPulseName;                                   // 0x0340(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FleeTriggerDistance;                                       // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FleeBroadcastRadius;                                       // 0x0354(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpdateFleeTime;                                            // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpdateFleeTimeDeviation;                                   // 0x035C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumHumansKilled;                                           // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PlayerInfamyLevel;                                         // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_90H1[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                InfamyPointsEarned;                                        // 0x0370(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                LastBossLevelDefeated;                                     // 0x0374(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QB0I[0x220];                                   // 0x0378(0x0220) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     DebugDaveLocation;                                         // 0x0598(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PM35[0x24];                                    // 0x05A4(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BountyManager");
		return ptr;
	}



	void SetBountyState(Maneater_EBountyState NewBountyState);
	void OnBossIntroFinished();
	bool IsBountyActive();
	bool IsBossActive();
	class AME_VehiclePawn* GetPendingBossVehicle();
	int GetNumActiveDivers();
	int GetMaxNumActiveDivers();
	struct FVector GetLastKillLocation();
	TArray<class AME_AIController*> GetHunterControllers();
	struct FVector GetClosestBoatLocation(const struct FVector& SourceLocation, float* out_DistanceSqr);
	Maneater_EBountyState GetBountyState();
	struct FVector GetBountyCenter();
	class AME_VehiclePawn* GetBossVehicle();
	void GetActiveBossName(struct FText* BossFirstName, struct FText* BossLastName);
	void DialogueCallback(AkAudio_EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void CleanUpAndDisable();
};

// Class Maneater.ME_BountyTier
// 0x0110 (FullSize[0x0138] - InheritedSize[0x0028])
class UME_BountyTier : public UObject
{
public:
	class UClass*                                      BossBoat;                                                  // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              SlaveBoatList;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxNumActiveSlaveBoats;                                    // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumBoatsPerWave;                                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NumKillsToTrigger;                                         // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumInfamyPointsRequiredForBoss;                            // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         NutritionTableRow;                                         // 0x0050(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBountyViewData                             BountyViewData;                                            // 0x0060(0x00C0) (Edit, NativeAccessSpecifierPublic)
	struct FName                                       StartNarratorEventName;                                    // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FinishNarratorEventName;                                   // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RankUpNarratorEventName;                                   // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BountyTier");
		return ptr;
	}



};

// Class Maneater.HunterSupportEntry
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
class UHunterSupportEntry : public UObject
{
public:
	struct FText                                       SupportName;                                               // 0x0028(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      SupportIcon[0x28];                                         // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.HunterSupportEntry");
		return ptr;
	}



};

// Class Maneater.ME_BTDecorator_HasValidActivity
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UME_BTDecorator_HasValidActivity : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BTDecorator_HasValidActivity");
		return ptr;
	}



};

// Class Maneater.ME_BTTask_PerformAmbientActivity
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UME_BTTask_PerformAmbientActivity : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BTTask_PerformAmbientActivity");
		return ptr;
	}



};

// Class Maneater.ME_BuoyancyForceComponent
// 0x00C8 (FullSize[0x0178] - InheritedSize[0x00B0])
class UME_BuoyancyForceComponent : public UActorComponent
{
public:
	class AME_OceanManager*                            OceanManager;                                              // 0x00B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshDensity;                                               // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FluidDensity;                                              // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FluidLinearDamping;                                        // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FluidAngularDamping;                                       // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VelocityDamper;                                            // 0x00C8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ClampMaxVelocity;                                          // 0x00D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AZ43[0x3];                                     // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxUnderwaterVelocity;                                     // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestPointRadius;                                           // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             TestPoints;                                                // 0x00E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ApplyForceToBones;                                         // 0x00F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SnapToSurfaceIfNoPhysics;                                  // 0x00F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TwoGerstnerIterations;                                     // 0x00F2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XDQX[0x5];                                     // 0x00F3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      PointDensityOverride;                                      // 0x00F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStructBoneOverride>                 BoneOverride;                                              // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DrawDebugPoints;                                           // 0x0118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableStayUprightConstraint;                               // 0x0119(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CVDX[0x2];                                     // 0x011A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StayUprightStiffness;                                      // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StayUprightDamping;                                        // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    StayUprightDesiredRotation;                                // 0x0124(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                               EnableWaveForces;                                          // 0x0130(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_761J[0x3];                                     // 0x0131(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WaveForceMultiplier;                                       // 0x0134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ETickingGroup>                  TickGroup;                                                 // 0x0138(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EW7F[0x37];                                    // 0x0139(0x0037) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicsConstraintComponent*                 ActiveConstraint;                                          // 0x0170(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BuoyancyForceComponent");
		return ptr;
	}



	void SetBasePrimitiveComp(class UPrimitiveComponent* PrimComp);
	class UPrimitiveComponent* GetBasePrimitiveComp();
};

// Class Maneater.ME_BuoyantDecoration
// 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
class AME_BuoyantDecoration : public AStaticMeshActor
{
public:
	class UME_BuoyancyForceComponent*                  BuoyancyComponent;                                         // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N1S7[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_BuoyantDecoration");
		return ptr;
	}



};

// Class Maneater.ME_CalculationBoatStun
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationBoatStun : public UGameplayEffectExecutionCalculation
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationBoatStun");
		return ptr;
	}



};

// Class Maneater.ME_CalculationGenericDamage
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationGenericDamage : public UGameplayEffectExecutionCalculation
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationGenericDamage");
		return ptr;
	}



};

// Class Maneater.ME_CalculationElectricDamage
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationElectricDamage : public UME_CalculationGenericDamage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationElectricDamage");
		return ptr;
	}



};

// Class Maneater.ME_CalculationExplosiveDamage
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationExplosiveDamage : public UME_CalculationGenericDamage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationExplosiveDamage");
		return ptr;
	}



};

// Class Maneater.ME_CalculationHealthCondition
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationHealthCondition : public UGameplayEffectExecutionCalculation
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationHealthCondition");
		return ptr;
	}



};

// Class Maneater.ME_CalculationSlamDamage
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationSlamDamage : public UME_CalculationGenericDamage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationSlamDamage");
		return ptr;
	}



};

// Class Maneater.ME_CalculationStrikeDamage
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationStrikeDamage : public UME_CalculationGenericDamage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationStrikeDamage");
		return ptr;
	}



};

// Class Maneater.ME_CalculationTailwhipDamage
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationTailwhipDamage : public UME_CalculationGenericDamage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationTailwhipDamage");
		return ptr;
	}



};

// Class Maneater.ME_CalculationThrashDamage
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationThrashDamage : public UME_CalculationGenericDamage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationThrashDamage");
		return ptr;
	}



};

// Class Maneater.ME_CalculationThrashStruggle
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UME_CalculationThrashStruggle : public UME_CalculationGenericDamage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CalculationThrashStruggle");
		return ptr;
	}



};

// Class Maneater.ME_CameraAnimInst
// 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
class UME_CameraAnimInst : public UCameraAnimInst
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CameraAnimInst");
		return ptr;
	}



};

// Class Maneater.ME_CameraComponent
// 0x0000 (FullSize[0x07B0] - InheritedSize[0x07B0])
class UME_CameraComponent : public UCameraComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CameraComponent");
		return ptr;
	}



};

// Class Maneater.ME_CameraSpringArmComponent
// 0x0030 (FullSize[0x02B0] - InheritedSize[0x0280])
class UME_CameraSpringArmComponent : public USpringArmComponent
{
public:
	float                                              ArmLengthBlendInSpeed;                                     // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmLengthBlendOutSpeed;                                    // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnderwaterMaxZ;                                            // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AboveWaterMinZ;                                            // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerSharkCharacter>     SharkOwner;                                                // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 CameraLagCurve;                                            // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnforceMinLagBoomLength;                                  // 0x02A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QWW2[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SavedProbeSize;                                            // 0x02A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ES67[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CameraSpringArmComponent");
		return ptr;
	}



};

// Class Maneater.ME_CharacterAbilityHelper
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UME_CharacterAbilityHelper : public UObject
{
public:
	unsigned char                                      UnknownData_FXJ0[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ACharacter>                   OwningCharacter;                                           // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UGameplayAbility>             CachedDeathCDO;                                            // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CharacterAbilityHelper");
		return ptr;
	}



	bool TryActivateAbilityForTag(const struct FGameplayTag& GameplayTag, bool bActionModeDependent);
	bool TryActivateAbilityForHandle(const struct FGameplayAbilitySpecHandle& Handle);
	bool IsStumbled();
	int GetAbilityIndexFromEnum(Maneater_EME_CharacterAbility AbilitySlot);
	struct FGameplayAbilitySpecHandle GetAbilityHandleFromEnum(Maneater_EME_CharacterAbility AbilitySlot);
	void CancelAbilityForHandle(const struct FGameplayAbilitySpecHandle& Handle);
	void CancelAbilityForEnum(Maneater_EME_CharacterAbility CharacterAbilityEnum);
	bool CanActivateAbilities();
};

// Class Maneater.ME_CharacterAttributeSet
// 0x08E0 (FullSize[0x0B10] - InheritedSize[0x0230])
class UME_CharacterAttributeSet : public UME_AttributeSet
{
public:
	unsigned char                                      UnknownData_CVT4[0x40];                                    // 0x0230(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMEGameplayAttributeData                    Stunned;                                                   // 0x0270(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BiteDamageScale;                                           // 0x0290(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BoatBiteDamageScale;                                       // 0x02B0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ThrashStruggleScale;                                       // 0x02D0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SlamDamageScale;                                           // 0x02F0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ThrashDamageScale;                                         // 0x0310(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    CriticalDamageScale;                                       // 0x0330(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ThrashDamagePool;                                          // 0x0350(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ThrashRegenerationRate;                                    // 0x0370(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ThrashHoldPool;                                            // 0x0390(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BaseThrashHoldPool;                                        // 0x03B0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    TailWhipDamageScale;                                       // 0x03D0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    GravityScale;                                              // 0x03F0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    WhipShotVelocity;                                          // 0x0410(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    WhipShotRange;                                             // 0x0430(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    WorldTimeDilationScale;                                    // 0x0450(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    StunArmor;                                                 // 0x0470(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    AirLungeForceScale;                                        // 0x0490(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BaseMoveSpeed;                                             // 0x04B0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    LungeSpeed;                                                // 0x04D0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MaxSpeedLungeT1;                                           // 0x04F0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MaxSpeedLungeT2;                                           // 0x0510(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MaxSpeedLungeT3;                                           // 0x0530(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MaxSpeedSprintT1;                                          // 0x0550(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MaxSpeedSprintT2;                                          // 0x0570(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MaxSpeedSprintT3;                                          // 0x0590(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    EvadeSpeed;                                                // 0x05B0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MaxSwimSpeedScale;                                         // 0x05D0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    FatNutrientModifier;                                       // 0x05F0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ProteinNutrientModifier;                                   // 0x0610(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MineralNutrientModifier;                                   // 0x0630(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MutagenNutrientModifier;                                   // 0x0650(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    HealthNutrientModifier;                                    // 0x0670(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    DrownSpeedBase;                                            // 0x0690(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    DrownSpeedModifier;                                        // 0x06B0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    GenericDamageResistance;                                   // 0x06D0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    GenericDamageReduction;                                    // 0x06F0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BoatDamageBonusModifier;                                   // 0x0710(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    OnLandSpeedModifier;                                       // 0x0730(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    MassScale;                                                 // 0x0750(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    EvolutionAbilityResource;                                  // 0x0770(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SmashAoEMultiplier;                                        // 0x0790(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    HighestBreachPosition;                                     // 0x07B0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    TailwhipImpulseMultiplier;                                 // 0x07D0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    TailwhipDefenseImpulseMultiplier;                          // 0x07F0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    RamImpulseMultiplier;                                      // 0x0810(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SlamEjectChancePct;                                        // 0x0830(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    LungeCameraBoomMultiplierTier1;                            // 0x0850(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    LungeCameraBoomMultiplierTier2;                            // 0x0870(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    LungeCameraBoomMultiplierTier3;                            // 0x0890(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BioElectricDamageMultiplier;                               // 0x08B0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ProjectileDamageResistance;                                // 0x08D0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ElectricDamageResistance;                                  // 0x08F0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BoatMovementDisable;                                       // 0x0910(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    ManeuverabilityMultiplier;                                 // 0x0930(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    DamageRating;                                              // 0x0950(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    DefenseRating;                                             // 0x0970(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SpeedRating;                                               // 0x0990(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    AITimeDilationScale;                                       // 0x09B0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SonarDuration;                                             // 0x09D0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SonarRadius;                                               // 0x09F0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    KnifingMinPitch;                                           // 0x0A10(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    KnifingMaxPitch;                                           // 0x0A30(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BiteLungeSpeed;                                            // 0x0A50(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BiteLungeSpeedNoTarget;                                    // 0x0A70(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    BiteLungeSpeedOnClose;                                     // 0x0A90(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    SoftLockTargetRange;                                       // 0x0AB0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    DangerSense;                                               // 0x0AD0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData                    VulnerabilityThreshold;                                    // 0x0AF0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CharacterAttributeSet");
		return ptr;
	}



};

// Class Maneater.ME_CharacterCollisionComponent
// 0x0030 (FullSize[0x0460] - InheritedSize[0x0430])
class UME_CharacterCollisionComponent : public UCapsuleComponent
{
public:
	bool                                               bSimulatePhysicsInWater;                                   // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M050[0x3];                                     // 0x0431(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InWaterCapsuleHeightModifier;                              // 0x0434(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InWaterCapsuleRadiusModifier;                              // 0x0438(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1HLC[0x4];                                     // 0x043C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_Character*                               CharacterOwner;                                            // 0x0440(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AME_OceanPhysicsVolume*                      TheWaterVolume;                                            // 0x0448(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W6FK[0x10];                                    // 0x0450(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CharacterCollisionComponent");
		return ptr;
	}



};

// Class Maneater.ME_CharacterFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_CharacterFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CharacterFunctionLibrary");
		return ptr;
	}



	void STATIC_SetHealthToPercentage(class AME_Character* TwChar, float Percent);
	float STATIC_GetWalkMoveSpeed(class AME_Character* TwChar);
	float STATIC_GetSwimMoveSpeed(class AME_Character* TwChar);
	float STATIC_GetStaminaRegen(class AME_Character* TwChar);
	float STATIC_GetStaminaMax(class AME_Character* TwChar);
	float STATIC_GetStamina(class AME_Character* TwChar);
	float STATIC_GetSizeRatio(class AME_Character* Character1, class AME_Character* Character2);
	Maneater_ESizeDiff STATIC_GetSizeDifferential(class AME_Character* Character1, class AME_Character* Character2, float SizeDiffThresholdUp, float SizeDifferentialDown);
	float STATIC_GetSizeDelta(class AME_Character* TwChar);
	float STATIC_GetSize(class AME_Character* TwChar);
	float STATIC_GetMaxAcceleration(class AME_Character* TwChar);
	float STATIC_GetHealthPercentage(class AME_Character* TwChar);
	float STATIC_GetHealthMax(class AME_Character* TwChar);
	float STATIC_GetHealth(class AME_Character* TwChar);
	TEnumAsByte<Maneater_ECharacterActionMode> STATIC_GetCharacterActionMode(class AME_Character* TwChar);
	class UME_AttributeSet* STATIC_GetActorDamagableAttributeSet(class AActor* Actor);
};

// Class Maneater.ME_CharacterVoiceData
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UME_CharacterVoiceData : public UDataAsset
{
public:
	TMap<TEnumAsByte<Maneater_ECharacterVoiceEventType>, struct FCharacterVoiceGender> VoiceBindings;                                             // 0x0030(0x0050) (Edit, EditFixedSize, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CharacterVoiceData");
		return ptr;
	}



};

// Class Maneater.ME_CheatManager
// 0x0028 (FullSize[0x00A0] - InheritedSize[0x0078])
class UME_CheatManager : public UCheatManager
{
public:
	struct FActiveGameplayEffectHandle                 GodEffectHandle;                                           // 0x0078(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle                 DemiGodEffectHandle;                                       // 0x0080(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle                 OnePunchEffectHandle;                                      // 0x0088(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle                 GottaGoFastEffectHandle;                                   // 0x0090(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADebugCameraController*                      DetachedCameraControllerRef;                               // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CheatManager");
		return ptr;
	}



	void ToggleCameraAttached();
	void Debug_DumpAI();
	void STATIC_Debug_DrawProgressBar(class UWorld* World, class AActor* ProgressReferenceActor, float ProgressPercent);
	void Cheat_UnlockAchievement(const struct FName& AchievementName);
	void Cheat_TutorialSkipAhead(int Index);
	void Cheat_TutorialNextStep();
	void Cheat_TutorialAutoComplete();
	void Cheat_ToggleTODPause();
	void Cheat_ToggleKnifing();
	void Cheat_ToggleAI(Maneater_EThreeStateSwitch bEnableAI);
	void Cheat_Suicide();
	void Cheat_StoryAdvanceTo(int Index);
	void Cheat_SpawnAI(const struct FString& AIName, float SpawnOffset);
	void Cheat_SlamDamageEnabled(bool bTurnOn);
	void Cheat_ShowStoryCompleteWidget();
	void Cheat_SetWalkMoveSpeed(float NewWalkSpeed);
	void Cheat_SetTOD(float HourOfDay);
	void Cheat_SetSwimMoveSpeed(float NewSwimSpeed);
	void Cheat_SetSharkMesh(int SharkMesh);
	void Cheat_SetMaxAcceleration(float NewMaxAcceleration);
	void Cheat_SetLevel(int Level);
	void Cheat_SetKnifingZOffset(float Value);
	void Cheat_SetEvolutionCharge(float ChargeAmount);
	void Cheat_SetCameraZOffset(float Value);
	void Cheat_SetCameraProbeSize(float Value);
	void Cheat_SetCameraComplex(bool bCollideComplex);
	void Cheat_SetCameraArmLength(float Value);
	void Cheat_SetBossPhase(int NewPhaseNum);
	void Cheat_ScareAI();
	void Cheat_ResetSpeedCheats();
	void Cheat_ResetObjective(const struct FName& ObjName);
	void Cheat_ProgressObjective(const struct FName& ObjName, int Increment);
	void Cheat_PlayStoryCinematic(int Index);
	void Cheat_PauseAndSetTOD(float HourOfDay);
	void Cheat_OverrideBoatTurnSound(float Value);
	void Cheat_OnePunch();
	void Cheat_ObjectivesCompleteTickedObjectives();
	void Cheat_ObjectivesCompleteTerrorizeObjectives();
	void Cheat_ObjectivesCompletePopControlObjectives();
	void Cheat_ObjectivesCompleteLandmarkObjectives();
	void Cheat_NextBossPhase();
	void Cheat_LogSpawnEntityStates();
	void Cheat_LogObjectives(Maneater_EObjectiveType Type, Maneater_EWorldRegion Region);
	void Cheat_LogAIManagementStates();
	void Cheat_KillSchools();
	void Cheat_KillHumans();
	void Cheat_KillDivers();
	void Cheat_KillBoats();
	void Cheat_KillAnimals();
	void Cheat_KillAll();
	void Cheat_HideFromAI();
	void Cheat_HandleLoadError();
	void Cheat_Grow(int GrowthChange);
	void Cheat_GrottosUnlock();
	void Cheat_GottaGoFast();
	void Cheat_GiveNutrients(int Nutrients, TEnumAsByte<Maneater_ENutrientType> NutrientType);
	void Cheat_GiveEvolutions(int Rarity);
	void Cheat_ForceSaveGame();
	void Cheat_ForceReleasePrey();
	void Cheat_FindAllObjectives();
	bool Cheat_FastTravel(int RegionIndex);
	void Cheat_EnableTargetLasers(bool bTurnOn);
	void STATIC_Cheat_EnableAIDebuggingStuff();
	void Cheat_Eject();
	void Cheat_Dismember(int GrabPointIdx);
	void Cheat_DiscoverObjectives(Maneater_EObjectiveType Type, Maneater_EWorldRegion Region);
	void Cheat_DiscoverAllObjectives();
	void Cheat_DisableTutorial();
	void Cheat_DemiGod();
	void Cheat_DebugGTWaves(int GridCount);
	void Cheat_CompleteRegionObjectives(const struct FString& RegionName);
	void Cheat_CompleteObjective(const struct FName& ObjName);
	void Cheat_BreakBoats();
	void Cheat_BountyTriggerBounty();
	void Cheat_BountyTriggerBoss(int BossIndex);
	void Cheat_BountySetInfamyLevel(int InfamyLevel);
	void Cheat_BountyEndBounty();
	void Cheat_BountyEnableBountySystem();
	void Cheat_BountyDisableBountySystem();
	void Cheat_ApplyTag();
	void Cheat_ApplyNutrientMultiplier(float Multiplier);
	void Cheat_AlertAI(float AlertRadius);
	void Cheat_AIVision(bool bTurnOn);
	void Cheat_AITargeting(bool bTurnOn);
	void Cheat_AdvanceStoryEvent(int Amount);
	void Cheat_AdjustWalkMoveSpeed(float WalkMultiplier);
	void Cheat_AdjustSwimMoveSpeed(float SwimMultiplier);
	void Cheat_AdjustMaxAcceleration(float MaxAccelerationMultiplier);
	void Cheat_AbandonVehicle();
	void AudioTrigger(const struct FString& Event, int ForceMode);
};

// Class Maneater.ME_ChopperAIController
// 0x0008 (FullSize[0x0788] - InheritedSize[0x0780])
class AME_ChopperAIController : public AME_VehicleAIController
{
public:
	class AME_ChopperPawn*                             ChopperPawn;                                               // 0x0780(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ChopperAIController");
		return ptr;
	}



};

// Class Maneater.ME_ChopperPawn
// 0x0008 (FullSize[0x0B20] - InheritedSize[0x0B18])
class AME_ChopperPawn : public AME_VehiclePawn
{
public:
	class AME_ChopperAIController*                     ChopperAIController;                                       // 0x0B18(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ChopperPawn");
		return ptr;
	}



};

// Class Maneater.ME_CollectableActor
// 0x0010 (FullSize[0x02F0] - InheritedSize[0x02E0])
class AME_CollectableActor : public AME_ThrashableActor
{
public:
	bool                                               bAlreadyDestroyed;                                         // 0x02E0(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EGQB[0xF];                                     // 0x02E1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CollectableActor");
		return ptr;
	}



};

// Class Maneater.ME_CombatManager
// 0x0080 (FullSize[0x0130] - InheritedSize[0x00B0])
class UME_CombatManager : public UActorComponent
{
public:
	int                                                MaxAttackingHunters;                                       // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D6HX[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    AICombatStatusChanged;                                     // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bScareCombatWildlife;                                      // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K1K1[0x3];                                     // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AME_AIController>             CombatLockAI;                                              // 0x00CC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QU38[0x14];                                    // 0x00D4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FWildlifeQueueEntry>                 CombatQueue;                                               // 0x00E8(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AME_AIController>>     HunterCombatLockAI;                                        // 0x00F8(0x0010) (ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AME_AIController>>     HunterCombatQueue;                                         // 0x0108(0x0010) (ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CBL0[0x18];                                    // 0x0118(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CombatManager");
		return ptr;
	}



	bool IsInCombat();
};

// Class Maneater.MEControlSchemes
// 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
class UMEControlSchemes : public UDeveloperSettings
{
public:
	struct FMEControlSchemeSaveData                    ControlSchemes;                                            // 0x0038(0x0010) (Edit, Config, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YH9I[0x38];                                    // 0x0048(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEControlSchemes");
		return ptr;
	}



	TArray<struct FText> GetControlSchemes();
	class UMEControlSchemes* STATIC_GetControlSchemeDefault();
	struct FMEControlScheme GetControlSchemeAtIndex(int idx);
	TArray<struct FAxisBindingSaveData> GetAxisForScheme(const struct FMEControlScheme& Scheme);
	TArray<struct FActionBindingSaveData> GetActionsForScheme(const struct FMEControlScheme& Scheme);
	void ApplyControlScheme(int idx);
};

// Class Maneater.ME_CreatureSchoolAIController
// 0x0008 (FullSize[0x0750] - InheritedSize[0x0748])
class AME_CreatureSchoolAIController : public AME_AIController
{
public:
	class AME_CreatureSchoolPawn*                      SchoolPawn;                                                // 0x0748(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CreatureSchoolAIController");
		return ptr;
	}



};

// Class Maneater.ME_CreatureSchoolMeshComponent
// 0x0000 (FullSize[0x0AE0] - InheritedSize[0x0AE0])
class UME_CreatureSchoolMeshComponent : public USkeletalMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CreatureSchoolMeshComponent");
		return ptr;
	}



};

// Class Maneater.ME_CreatureSchoolMoveComponent
// 0x0018 (FullSize[0x0168] - InheritedSize[0x0150])
class UME_CreatureSchoolMoveComponent : public UFloatingPawnMovement
{
public:
	int                                                CurrentFrameSkip;                                          // 0x0150(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K98R[0x4];                                     // 0x0154(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_CreatureSchoolPawn*                      OwningSchool;                                              // 0x0158(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                            SchoolCollision;                                           // 0x0160(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CreatureSchoolMoveComponent");
		return ptr;
	}



};

// Class Maneater.ME_CreatureSchoolPawn
// 0x0320 (FullSize[0x05A0] - InheritedSize[0x0280])
class AME_CreatureSchoolPawn : public APawn
{
public:
	unsigned char                                      UnknownData_9KAH[0x48];                                    // 0x0280(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBillboardComponent*                         SpriteComponent;                                           // 0x02C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DelayedDestroyTime;                                        // 0x02D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M22P[0xC];                                     // 0x02D4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            SphereCollision;                                           // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_CreatureSchoolMoveComponent*             SchoolMovement;                                            // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SchoolCount;                                               // 0x02F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentSchoolCount;                                        // 0x02F4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SchoolCountReductionPerBucket;                             // 0x02F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentSchoolCountPercentage;                              // 0x02FC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealthPerFish;                                             // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1S0F[0x4];                                     // 0x0304(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_CreatureSchoolAIController*              SchoolAIController;                                        // 0x0308(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         NutritionTableRow;                                         // 0x0310(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FThrashGrabPoint>                    ThrashGrabPoints;                                          // 0x0320(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSwimSpeed;                                              // 0x0330(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSchoolSize;                                             // 0x0334(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinSchoolSize;                                             // 0x0338(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GrowthRate;                                                // 0x033C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ShrinkRate;                                                // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CautiousStateTime;                                         // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZWZT[0x18];                                    // 0x0348(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      BaitBallPS[0x28];                                          // 0x0348(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UParticleSystemComponent*                    BaitBallPSC;                                               // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      DispersePS[0x28];                                          // 0x0390(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UParticleSystem*                             DispersePSLoaded;                                          // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              OrbitUpdateRate;                                           // 0x03C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QSVI[0x4];                                     // 0x03C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LocationSizeScalar[0x2];                                   // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     FishOrbitRange[0x2];                                       // 0x03D0(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     BaseAlertedOrbitSize;                                      // 0x03E8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              IntensityScale[0x2];                                       // 0x03F4(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SwimSpeedScale[0x2];                                       // 0x03FC(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     AlertedStateOrbitScale[0x2];                               // 0x0404(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     FishOrbitRateRange[0x2];                                   // 0x041C(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     AlertedStateOrbitRateScale[0x2];                           // 0x0434(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DispersionRate;                                            // 0x044C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QTCJ[0x8];                                     // 0x0450(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LoopingSchoolEvent[0x28];                                  // 0x0450(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      LoopingStopEvent[0x28];                                    // 0x0480(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UAkAudioEvent*                               LoopingStopEventLoaded;                                    // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      DisperseSoundEvent[0x28];                                  // 0x04B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UAkAudioEvent*                               DisperseSoundEventLoaded;                                  // 0x04D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                LoopingAmbientSound;                                       // 0x04E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      OverlapEvent[0x28];                                        // 0x04E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UAkAudioEvent*                               OverlapEventLoaded;                                        // 0x0510(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                OverlapBeginSound;                                         // 0x0518(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UVYD[0x10];                                    // 0x0520(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_AbilitySystemComponent*                  AbilitySystemComponent;                                    // 0x0530(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      AttributeSetClass;                                         // 0x0538(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UME_AttributeSet>             CharacterAttributeSet;                                     // 0x0540(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RU0Y[0x20];                                    // 0x0548(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AIPatrolPlotter[0x28];                                     // 0x0548(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_U04A[0x10];                                    // 0x0590(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_CreatureSchoolPawn");
		return ptr;
	}



	void SetAIPatrolPlotter(class ATwAIPatrolPlotter* InPatrolPlotter);
	void OnGameplayEffectRemoved(const struct FActiveGameplayEffect& RemovedGameplayEffect);
	bool IsAbilitySystemComponentSetUp();
	class ATwAIPatrolPlotter* GetAIPatrolPlotter();
	class UME_AbilitySystemComponent* GetAbilitySystemComponent();
};

// Class Maneater.ME_DamageType
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UME_DamageType : public UDamageType
{
public:
	TEnumAsByte<Engine_EPhysicalSurface>               DamageSurfaceType;                                         // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAppliesTag;                                               // 0x0041(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAffectsHitMask;                                           // 0x0042(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J68G[0x1];                                     // 0x0043(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HitMaskSize;                                               // 0x0044(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_DamageType");
		return ptr;
	}



};

// Class Maneater.ME_DebugCameraController
// 0x0000 (FullSize[0x0678] - InheritedSize[0x0678])
class AME_DebugCameraController : public ADebugCameraController
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_DebugCameraController");
		return ptr;
	}



};

// Class Maneater.ME_DestructibleActor
// 0x0170 (FullSize[0x03A8] - InheritedSize[0x0238])
class AME_DestructibleActor : public ADestructibleActor
{
public:
	unsigned char                                      UnknownData_YMHX[0x10];                                    // 0x0238(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsActive;                                                 // 0x0248(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UR30[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FHitDeformation>                     ActiveHitDeformations;                                     // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxHitDeformations;                                        // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9CXC[0x4];                                     // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               DamagedSound;                                              // 0x0268(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DamagedInvincibleParticle;                                 // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DamagedInvincibleSound;                                    // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BrokenSound;                                               // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                HitMaskResolution;                                         // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EBreakableStrength>           Strength;                                                  // 0x028C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPlayerGrowthStage>           RequiredSizeToDamage;                                      // 0x028D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DJ2B[0x2];                                     // 0x028E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_AbilitySystemComponent*                  AbilitySystemComponent;                                    // 0x0290(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FChunkBreakEffect                           ChunkBreakEffects;                                         // 0x0298(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FChunkBreakEffect                           DestructionEffects;                                        // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ChunkScaleWhenFractured;                                   // 0x02B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyImpulseOnBreak;                                      // 0x02BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRadialImpulse;                                            // 0x02BD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8VZL[0x2];                                     // 0x02BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FractureImpulseRadius;                                     // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FractureImpulseScalar;                                     // 0x02C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bExplosionImmunity;                                        // 0x02C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EP60[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinHitImpulse;                                             // 0x02CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         NutritionTableRow;                                         // 0x02D0(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	Maneater_EObjectiveType                            RelatedObjectiveType;                                      // 0x02E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FB2Y[0x7];                                     // 0x02E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_DistanceSignificanceComponent*           DistanceSignificanceComponent;                             // 0x02E8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GameplayEffectOnDestroyed;                                 // 0x02F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       FriendlyName;                                              // 0x02F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bAlreadyDestroyed;                                         // 0x0310(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDestroyedPermanently;                                     // 0x0311(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ODAY[0xE];                                     // 0x0312(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TEnumAsByte<Maneater_EBreakableStrength>, struct FStartingAttributes> AttributeDefaults;                                         // 0x0320(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              DistanceVisible;                                           // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L5QK[0x4];                                     // 0x0374(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAffectsOctreePathing;                                     // 0x0378(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EUpdateOctreeType                         UpdateOctreeType;                                          // 0x0379(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_961O[0x6];                                     // 0x037A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ModifierVolume[0x28];                                      // 0x037A(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_DestructibleActor");
		return ptr;
	}



	void UpdateOctree(bool bAffectsNavigation);
	void PostRenderForBP();
	void PlayerDamagedBreakable(float DamageAmount);
	void OnComponentFractured(const struct FVector& HitPoint, const struct FVector& HitDirection);
	bool IsDestroyed();
	float GetCurrentHealth_Implementation();
	bool CanDamageBreakable(class AActor* DamageCauser);
};

// Class Maneater.ME_DestructibleComponent
// 0x0074 (FullSize[0x07A0] - InheritedSize[0x072C])
class UME_DestructibleComponent : public UDestructibleComponent
{
public:
	float                                              FluidDensity;                                              // 0x072C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FluidLinearDamping;                                        // 0x0730(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FluidAngularDamping;                                       // 0x0734(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     VelocityDamper;                                            // 0x0738(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ClampMaxVelocity;                                          // 0x0744(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L6TC[0x3];                                     // 0x0745(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxUnderwaterVelocity;                                     // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestPointRadius;                                           // 0x074C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DrawDebugPoints;                                           // 0x0750(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableWaveForces;                                          // 0x0751(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2TZJ[0x2];                                     // 0x0752(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WaveForceMultiplier;                                       // 0x0754(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChunkSleepThreshold;                                       // 0x0758(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChunkStabilizationThreshold;                               // 0x075C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TargetingOffset;                                           // 0x0760(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SPUS[0xC];                                     // 0x076C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_OceanManager*                            OceanManager;                                              // 0x0778(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SJXI[0x20];                                    // 0x0780(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_DestructibleComponent");
		return ptr;
	}



};

// Class Maneater.ME_DialogueFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_DialogueFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_DialogueFunctionLibrary");
		return ptr;
	}



	int STATIC_TwPlaySubtitledAkEvent(struct FString* EventName, class AActor* Actor, class UDataTable* SearchTable);
	bool STATIC_TwPlayDialogueAkEvent(class UDataTable* SearchTable, class UAkAudioEvent* AkEvent, class AActor* Actor);
	bool STATIC_PlayDialogueFile(const struct FDataTableRowHandle& DialogueToPlay, class AActor* WorldContext);
	bool STATIC_PlayDialogueAkEvent(const struct FDataTableRowHandle& DialogueToPlay, class UAkAudioEvent* AkEvent, class AActor* Actor);
};

// Class Maneater.ME_DialogueSystem
// 0x0128 (FullSize[0x0150] - InheritedSize[0x0028])
class UME_DialogueSystem : public UObject
{
public:
	unsigned char                                      UnknownData_QRSS[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptDelegate                             OnDialogueAkEvent;                                         // 0x0030(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnDynamicDialogueAkEvent;                                  // 0x0040(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnSequencerAkEvent;                                        // 0x0050(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioBank*                                ExternalSoundBank;                                         // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YEL5[0x78];                                    // 0x0068(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAudioDialogueMapping>               AudioDialogueRowMappings;                                  // 0x00E0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B91H[0x60];                                    // 0x00F0(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_DialogueSystem");
		return ptr;
	}



	int ShowSubtitle(const struct FText& DialogueText, float Duration, float TimeSeconds);
	void SequencerDialogueCallback(AkAudio_EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void PostDynamicDialogue(struct FName* DialogueEventName, class AActor* Speaker, TArray<struct FString>* ArgumentValueNames);
	void PlayExternalDialogueFile(struct FName* EventName, struct FString* Filename, class AActor* WorldContext, bool ShowSubtitle, const struct FText& DialogueText);
	void InitDialogueSystem(class AME_GameMode* OwningGameMode);
	struct FScriptMulticastDelegate GetOnDialogueSystemCallbackDelegate();
	void EndStateCooldown(const struct FName& StateName);
	void DynamicDialogueCallback(AkAudio_EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void DialogueCallback(AkAudio_EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void AddAudioDialogueMapping(int AkPlayingId, const struct FText& DialogueText, float TimeSeconds);
};

// Class Maneater.ME_SignificanceHandlerInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_SignificanceHandlerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SignificanceHandlerInterface");
		return ptr;
	}



	void HandleSignificanceChange(bool bIsSignificant);
};

// Class Maneater.ME_DistanceSignificanceComponent
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UME_DistanceSignificanceComponent : public UActorComponent
{
public:
	float                                              SignificantDistance;                                       // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2SCC[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_DistanceSignificanceComponent");
		return ptr;
	}



	void HandleSignificanceChange(bool bIsSignificant);
};

// Class Maneater.ME_DiverAttachmentAnimSet
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UME_DiverAttachmentAnimSet : public UDataAsset
{
public:
	TArray<class UAnimSequence*>                       IdleAnimations;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       SuspiciousAnimations;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       AlertAnimations;                                           // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                       MovingAnimations;                                          // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                         MovingAlertAnimations;                                     // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                        FiringAnimations;                                          // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_DiverAttachmentAnimSet");
		return ptr;
	}



};

// Class Maneater.ME_EnvQueryContext_PlayerSharkActor
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_EnvQueryContext_PlayerSharkActor : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_EnvQueryContext_PlayerSharkActor");
		return ptr;
	}



};

// Class Maneater.ME_EnvQueryGenerator_ActivityPoints
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UME_EnvQueryGenerator_ActivityPoints : public UEnvQueryGenerator
{
public:
	class UClass*                                      QueryContext;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_EnvQueryGenerator_ActivityPoints");
		return ptr;
	}



};

// Class Maneater.ME_ExplodingBarrelBase
// 0x00A0 (FullSize[0x0380] - InheritedSize[0x02E0])
class AME_ExplodingBarrelBase : public AME_ThrashableActor
{
public:
	unsigned char                                      UnknownData_2SR9[0x8];                                     // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBarrelExplodedEvent;                                     // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCountDownDelegate;                                       // 0x02F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              ExplodeOnImpactMinVelocity;                                // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionCountdownTime;                                    // 0x030C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BittenExplosionCountdownTime;                              // 0x0310(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T6GE[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ExplosionActorClass;                                       // 0x0318(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_BuoyancyForceComponent*                  BuoyancyComponent;                                         // 0x0320(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCauseFluidDisturbance;                                    // 0x0328(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8MLT[0x3];                                     // 0x0329(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WaterSplashMinSpeed;                                       // 0x032C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             WaterSplashParticle;                                       // 0x0330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               WaterSplashAudio;                                          // 0x0338(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               WhipshotImpactSound;                                       // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3Z9U[0x30];                                    // 0x0348(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RotationSpeed;                                             // 0x0378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YUYT[0x4];                                     // 0x037C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ExplodingBarrelBase");
		return ptr;
	}



};

// Class Maneater.ME_ExplosionActor
// 0x00B0 (FullSize[0x02D0] - InheritedSize[0x0220])
class AME_ExplosionActor : public AActor
{
public:
	TArray<class AActor*>                              IgnoreActors;                                              // 0x0220(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bExplosionParticlesSpawnAttached;                          // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceWaterlineFX;                                         // 0x0231(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CVII[0x6];                                     // 0x0232(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             ExplosionParticle_AboveWater;                              // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             ExplosionParticle_AtWaterline;                             // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             ExplosionParticle_Shallow;                                 // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             ExplosionParticle_Deep;                                    // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MRAC[0x10];                                    // 0x0258(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               SoundEffectStart;                                          // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               SoundEffectStop;                                           // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectItem>                 GameplayEffectItems;                                       // 0x0278(0x0010) (Edit, ExportObject, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAttribute>                  ExplosionRadiusModifiers;                                  // 0x0288(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ImpactMomentum;                                            // 0x0298(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T6L2[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGameplayAttribute>                  ImpactMomentumModifiers;                                   // 0x02A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                                AkAudioComponent;                                          // 0x02B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNavModifierComponent*                       NavModifier;                                               // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CanOnlyHitOneHuman;                                        // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3FVS[0x3];                                     // 0x02C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExplosionRadius;                                           // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2E3P[0x8];                                     // 0x02C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ExplosionActor");
		return ptr;
	}



	float GetExplosionRadius();
};

// Class Maneater.ME_FogOverrideVolume
// 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
class AME_FogOverrideVolume : public ATriggerVolume
{
public:
	unsigned char                                      UnknownData_E1KF[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<Maneater_EFogState>                    FogStateOverride;                                          // 0x0260(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_43HY[0x7];                                     // 0x0261(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_FogOverrideVolume");
		return ptr;
	}



	void ActorOverlapped(class AActor* OverlappedActor, class AActor* OtherActor);
	void ActorEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
};

// Class Maneater.MEGameEngine
// 0x0000 (FullSize[0x0E30] - InheritedSize[0x0E30])
class UMEGameEngine : public UGameEngine
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEGameEngine");
		return ptr;
	}



};

// Class Maneater.ME_GameInstance
// 0x0268 (FullSize[0x0400] - InheritedSize[0x0198])
class UME_GameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData_NIA1[0x40];                                    // 0x0198(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  NarratorCueTable;                                          // 0x01D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MTOZ[0x60];                                    // 0x01E0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_SaveGameObject*                          SaveGameInstance;                                          // 0x0240(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SRSB[0xC];                                     // 0x0248(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ActiveLocalUserIdx;                                        // 0x0254(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1FDN[0x10];                                    // 0x0258(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_SaveProfileObject*                       ProfileSaveInstance;                                       // 0x0268(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I4HW[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      LoadingScreenWidget;                                       // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XV8O[0x50];                                    // 0x0280(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     maneaterBaseGameProductId;                                 // 0x02D0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     maneaterTigerSharkSkinProductId;                           // 0x02E0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JSKL[0x10];                                    // 0x02F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             LoadingMovies;                                             // 0x0300(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C766[0x88];                                    // 0x0310(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FReconcileAchievementParams>         ReconcileAchievementsParams;                               // 0x0398(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DBRZ[0x58];                                    // 0x03A8(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameInstance");
		return ptr;
	}



	void UpdateFoliageShadowMaterialParametersCallback();
	void TriggerNarratorEventEx();
	int STATIC_TriggerNarratorEvent(const struct FName& Name, class UObject* WorldContextObject);
	void StreamContentAtLocationForCinematic(const struct FVector& Location, float Duration);
	void SetSelectedSaveSlot(int LocalUserIdx, int Slot);
	int GetSelectedSaveSlot(int LocalUserIdx);
	void FlushPendingSaveObjects();
};

// Class Maneater.ME_GameMode
// 0x03A8 (FullSize[0x06B0] - InheritedSize[0x0308])
class AME_GameMode : public AGameMode
{
public:
	unsigned char                                      UnknownData_TTFG[0x8];                                     // 0x0308(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FStoryCinematicDataRow                      StoryCinematicData;                                        // 0x0310(0x0090) (NativeAccessSpecifierPublic)
	class ALevelSequenceActor*                         CurrentCinematicSequenceActor;                             // 0x03A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3FV4[0x8];                                     // 0x03A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  StoryCinematicsDataTable;                                  // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCinematicLoaded;                                         // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCinematicStarted;                                        // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCinematicFinished;                                       // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCinematicCleanedUp;                                      // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VEKP[0x40];                                    // 0x03F8(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLoadingScreenStateChanged;                               // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPostLoadingScreenShowing;                                // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPreLoadingScreenRemoving;                                // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AME_BossBattleInfo*                          CurrentBossFight;                                          // 0x0468(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerPawnStatusChanged;                                 // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBountyLevelIncrease;                                     // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBountyIncrease;                                          // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAnyCharacterDied;                                        // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrottoLocationEntered;                                   // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrottoLocationExited;                                    // 0x04C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              BountyAmount;                                              // 0x04D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxBountyDollarValue;                                      // 0x04D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPlay;                                                // 0x04D8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDesiresPrologue;                                          // 0x04D9(0x0001) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OPOA[0x6];                                     // 0x04DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStoryUpdated;                                            // 0x04E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FWorldRegionState>                   RegionStates;                                              // 0x04F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      BountyLevel;                                               // 0x0500(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3ID3[0x7];                                     // 0x0501(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 BountyLevelCurve;                                          // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_NutrientCache*>                   AllNutrientCaches;                                         // 0x0510(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldLandmarkActor*>              AllLandmarks;                                              // 0x0520(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldLandmarkActor*>              AllGrottos;                                                // 0x0530(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_DestructibleActor*>               AllBreakables;                                             // 0x0540(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldLandmarkActor*>              AllBeaches;                                                // 0x0550(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldLandmarkActor*>              AllWhales;                                                 // 0x0560(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldRegionVolume*>               AllRegionVolumes;                                          // 0x0570(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnedAIThisFrame;                                       // 0x0580(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFastTraveling;                                          // 0x0581(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FTCH[0x2];                                     // 0x0582(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastFastTravelTime;                                        // 0x0584(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULevelStreamingTwDistance*>           SubLevelsForFastTravel;                                    // 0x0588(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  DefaultSubtitleDialogTable;                                // 0x0598(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y2Y5[0x20];                                    // 0x05A0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_SpawnPool*                               SpawnPool;                                                 // 0x05C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      SpawnManagerClass;                                         // 0x05C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ME_BountyManagerClass;                                     // 0x05D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_BountyManager*                           ME_BountyManager;                                          // 0x05D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      Grottos[0x10];                                             // 0x05E0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<TWeakObjectPtr<class AME_Grotto>>           GameRunTimeGrottos;                                        // 0x05F0(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnHumanEscaped;                                            // 0x0600(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      ME_PlayerObjectiveManagerClass;                            // 0x0610(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_PlayerObjectiveManager*                  ME_PlayerObjectiveManager;                                 // 0x0618(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ME_TutorialManagerClass;                                   // 0x0620(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_TutorialManager*                         ME_TutorialManager;                                        // 0x0628(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      AIDirectorClass;                                           // 0x0630(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_AIDirector*                              AIDirector;                                                // 0x0638(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ME_AssetLoaderClass;                                       // 0x0640(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_AssetLoader*                             ME_AssetLoader;                                            // 0x0648(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ME_SonarManagerClass;                                      // 0x0650(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_SonarManager*                            ME_SonarManager;                                           // 0x0658(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsWaterPoisoned;                                          // 0x0660(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7QYJ[0x7];                                     // 0x0661(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_TimeofDayInfo*                           TimeOfDayTracker;                                          // 0x0668(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTimeOfDayTrackerCreated;                                 // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      TimeOfDayInfoClass;                                        // 0x0680(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_DialogueSystem*                          ME_DialogueSystem;                                         // 0x0688(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioBank*                                ExternalSourcesBank;                                       // 0x0690(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioBank*                                DynamicDialogueSoundBank;                                  // 0x0698(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BZWN[0x10];                                    // 0x06A0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameMode");
		return ptr;
	}



	void STATIC_SuppressNextAudioPause(class UObject* WorldContextObject);
	void StartStoryCinematicSequence(const struct FName& CinematicsDataTableRowName);
	void StartCinematic();
	void ShowLoadingScreen(const struct FVector& DistanceStreamLocation, const struct FName& RequiredLevelName);
	void SetWaterPoisoned(bool bPoisoned);
	void SetNoCameraFadeIn(bool SetTo);
	void SetAutoReEnableControls(bool UseAutoReEnable);
	void SetAutoFadeIn(bool UseAutoFadeIn, const struct FLinearColor& CameraStartingColor, float BlendTime, float BlendDelay);
	void RespawnPlayer();
	void RequestTravelToLocation(const struct FVector& Location, const struct FRotator& Rotation, class AME_PlayerSharkCharacter* PlayerSharkCharacter, bool bSkipLoadScreen, bool bSetCameraRotation);
	void RemoveLoadingScreen();
	void PlayCinematicPauseAllEvent();
	void PauseSunPosition(bool bPause);
	void OnHuntCommanderEjected(class AController* EjectInstigator, class AME_HumanCharacter* Pilot);
	void OnCinematicCameraCut(class UCameraComponent* CameraComponent);
	void OnActorSpawned(class AActor* InActor);
	void LoadCinematic();
	bool IsWaterPoisoned();
	class AME_TutorialManager* GetTutorialManager();
	class AME_SonarManager* GetSonarManager();
	TArray<struct FWorldRegionState> GetRegionStates();
	bool GetRegionState(int RegionIndex, struct FWorldRegionState* State);
	int GetRegionPopulation(int RegionIndex);
	class AME_PlayerObjectiveManager* GetPlayerObjectiveManager();
	class UME_DialogueSystem* GetDialogueSystem();
	class AME_BountyManager* GetBountyManager();
	class AME_AssetLoader* GetAssetLoader();
	class AME_AIDirector* GetAIDirector();
	void EnableCinematicMode();
	void DisableCinematicMode();
	void CleanupCinematic();
	void CinematicLoaded();
	void CinematicFinishedStartPlaying();
	void CinematicFinished();
};

// Class Maneater.ME_GameplayAbility
// 0x0038 (FullSize[0x0438] - InheritedSize[0x0400])
class UME_GameplayAbility : public UGameplayAbility
{
public:
	float                                              CombatPriority;                                            // 0x0400(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ERL0[0x4];                                     // 0x0404(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              AbilitiesCancelOnActivate;                                 // 0x0408(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bClearAbilityTagsOnEnd : 1;                                // 0x0418(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MSFW[0x3];                                     // 0x0419(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AME_Character>                OwningCharacter;                                           // 0x041C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEvolutionAbility;                                         // 0x0424(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EEvolutionSetType                         EvolutionSetType;                                          // 0x0425(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5SEZ[0x2];                                     // 0x0426(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       EvolutionAbilityChargedAudioEventName;                     // 0x0428(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSonarAbility;                                             // 0x0430(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceReleasePrey;                                         // 0x0431(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MO3D[0x6];                                     // 0x0432(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_Montage
// 0x01A8 (FullSize[0x05E0] - InheritedSize[0x0438])
class UME_GameplayAbility_Montage : public UME_GameplayAbility
{
public:
	unsigned char                                      UnknownData_5HD1[0x8];                                     // 0x0438(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                MontageToPlay;                                             // 0x0440(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayRate;                                                  // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SectionName;                                               // 0x044C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bShouldStopMovement : 1;                                   // 0x0454(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6D87[0x3];                                     // 0x0455(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEndAbilityOnInputRelease;                                 // 0x0458(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M1NY[0x3];                                     // 0x0459(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bShouldStopRotation : 1;                                   // 0x045C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M7SB[0x3];                                     // 0x045D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DisableInputTime;                                          // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMomentumForce                              MomentumToApply;                                           // 0x0464(0x0030) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMomentumForce                              MomentumToApplyWhileAnimating;                             // 0x0494(0x0030) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     RootMotionScale;                                           // 0x04C4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              HitEffectClasses;                                          // 0x04D0(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_45MO[0x1];                                     // 0x04E0(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bSimulateInputPress;                                       // 0x04E1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I43P[0x6];                                     // 0x04E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              GameplayEffectClassesWhileAnimating;                       // 0x04E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              GameplayEffectClassesAppliedOnActivation;                  // 0x04F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TOOV[0x8];                                     // 0x0508(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShouldForceStopMontage;                                   // 0x0510(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ADSC[0x3];                                     // 0x0511(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bTakesPriorityOverOtherMontages : 1;                       // 0x0514(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FY9N[0x3];                                     // 0x0515(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bStopMontageOnExitWater;                                   // 0x0518(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSwitchToFlying;                                           // 0x0519(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X6CQ[0x6];                                     // 0x051A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                PlayingMontage;                                            // 0x0520(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O9QR[0x8];                                     // 0x0528(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAttachedAudioEvent                         AbilityActivationSound;                                    // 0x0530(0x0010) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttachedAudioEvent                         AbilityEndedSound;                                         // 0x0540(0x0010) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ECA5[0x30];                                    // 0x0550(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCameraAnim*                                 CamAnim;                                                   // 0x0580(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FStageSpecificCamera>                GrowthStageCameraAnims;                                    // 0x0588(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DDSJ[0x10];                                    // 0x0598(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CamRate;                                                   // 0x05A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CamBlendInTime;                                            // 0x05AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CamBlendOutTime;                                           // 0x05B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CamScale;                                                  // 0x05B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldTimeoutMontage;                                     // 0x05B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStopMovementWhenUsed;                                     // 0x05B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FPJM[0x26];                                    // 0x05BA(0x0026) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_Montage");
		return ptr;
	}



	void MontageStarted(class UAnimMontage* Montage);
	void MontageEnded(class UAnimMontage* Montage, bool bInterrupted);
};

// Class Maneater.ME_GameplayAbility_DirectionalMontage
// 0x00C8 (FullSize[0x06A8] - InheritedSize[0x05E0])
class UME_GameplayAbility_DirectionalMontage : public UME_GameplayAbility_Montage
{
public:
	unsigned char                                      bUseEightDirectionalAnims : 1;                             // 0x05E0(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ISC0[0x7];                                     // 0x05E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDirectionalAnimData                        Anim_FORWARD;                                              // 0x05E8(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                        Anim_BACKWARD;                                             // 0x0600(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                        Anim_LEFT;                                                 // 0x0618(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                        Anim_RIGHT;                                                // 0x0630(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                        Anim_FORWARD_LEFT;                                         // 0x0648(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                        Anim_FORWARD_RIGHT;                                        // 0x0660(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                        Anim_BACKWARD_LEFT;                                        // 0x0678(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                        Anim_BACKWARD_RIGHT;                                       // 0x0690(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_DirectionalMontage");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_KillSequence
// 0x0058 (FullSize[0x0638] - InheritedSize[0x05E0])
class UME_GameplayAbility_KillSequence : public UME_GameplayAbility_Montage
{
public:
	unsigned char                                      UnknownData_NKDR[0x8];                                     // 0x05E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TEnumAsByte<Maneater_EPlayerGrowthStage>, struct FGrowthStageSequences> GrowthInfo;                                                // 0x05E8(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_KillSequence");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbilitySharkMontage
// 0x0040 (FullSize[0x0620] - InheritedSize[0x05E0])
class UME_GameplayAbilitySharkMontage : public UME_GameplayAbility_Montage
{
public:
	bool                                               AsyncLoadComplete;                                         // 0x05E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PRJM[0x7];                                     // 0x05E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGrowthStageContainer                       MontageData;                                               // 0x05E8(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M2NW[0x8];                                     // 0x0600(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGrowthStageContainer                       CurrentData;                                               // 0x0608(0x0018) (Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbilitySharkMontage");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_LandLunge
// 0x0018 (FullSize[0x0638] - InheritedSize[0x0620])
class UME_GameplayAbility_LandLunge : public UME_GameplayAbilitySharkMontage
{
public:
	float                                              DefaultZVelocity;                                          // 0x0620(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A337[0x4];                                     // 0x0624(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCustomGrowthStage>                  CustomStageSettings;                                       // 0x0628(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_LandLunge");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_Loop
// 0x0028 (FullSize[0x0608] - InheritedSize[0x05E0])
class UME_GameplayAbility_Loop : public UME_GameplayAbility_Montage
{
public:
	float                                              LoopDuration;                                              // 0x05E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WakeUpSectionName;                                         // 0x05E4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DW8H[0x1C];                                    // 0x05EC(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_Loop");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_MontageSequence
// 0x00A0 (FullSize[0x04D8] - InheritedSize[0x0438])
class UME_GameplayAbility_MontageSequence : public UME_GameplayAbility
{
public:
	unsigned char                                      UnknownData_IGF0[0x8];                                     // 0x0438(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMontageInstance*>                    MontageSequence;                                           // 0x0440(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              GameplayEffectClassesAppliedOnActivation;                  // 0x0450(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldForceStopMontage;                                   // 0x0460(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PWFE[0x3];                                     // 0x0461(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bTakesPriorityOverOtherMontages : 1;                       // 0x0464(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4LCE[0x3];                                     // 0x0465(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                PlayingMontage;                                            // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttachedAudioEvent                         AbilityActivationSound;                                    // 0x0470(0x0010) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttachedAudioEvent                         AbilityEndedSound;                                         // 0x0480(0x0010) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_69BW[0x8];                                     // 0x0490(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShouldTimeoutMontage;                                     // 0x0498(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3YSL[0xB];                                     // 0x0499(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDefaultStopMovement;                                      // 0x04A4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bDefaultStopRotation;                                      // 0x04A5(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_057H[0x2];                                     // 0x04A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMontageInstance*>                    DefaultMontageSequence;                                    // 0x04A8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IELO[0x20];                                    // 0x04B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_MontageSequence");
		return ptr;
	}



	void MontageStarted(class UAnimMontage* Montage);
	void MontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	class UMontageInstance* GetMontageInstanceByIndex(int Index);
	int GetCurrentMontageInstance(class UMontageInstance** out_MontageInstance);
	int GetCurrentMontageIndex();
};

// Class Maneater.ME_GameplayAbility_Projectiles
// 0x0020 (FullSize[0x0458] - InheritedSize[0x0438])
class UME_GameplayAbility_Projectiles : public UME_GameplayAbility
{
public:
	class UClass*                                      ProjectileType;                                            // 0x0438(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumProjectiles;                                            // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Spread;                                                    // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SocketSpawn;                                               // 0x0448(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoAimProjectile;                                        // 0x0450(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZEX1[0x3];                                     // 0x0451(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AutoAimDOT;                                                // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_Projectiles");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_SharkAirLunge
// 0x0018 (FullSize[0x0638] - InheritedSize[0x0620])
class UME_GameplayAbility_SharkAirLunge : public UME_GameplayAbilitySharkMontage
{
public:
	float                                              LungeSpeed;                                                // 0x0620(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MT70[0x4];                                     // 0x0624(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      NoGravityEffect;                                           // 0x0628(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bApplyLungeSpeedToZ;                                       // 0x0630(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XI2A[0x7];                                     // 0x0631(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_SharkAirLunge");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_SharkEvade
// 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
class UME_GameplayAbility_SharkEvade : public UME_GameplayAbilitySharkMontage
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_SharkEvade");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_SlowWorld
// 0x0010 (FullSize[0x0448] - InheritedSize[0x0438])
class UME_GameplayAbility_SlowWorld : public UME_GameplayAbility
{
public:
	float                                              TimeDilation;                                              // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeDilationDuration;                                      // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAffectsShark;                                             // 0x0440(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAffectsCamera;                                            // 0x0441(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5CIA[0x6];                                     // 0x0442(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_SlowWorld");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_Sonar
// 0x0000 (FullSize[0x0438] - InheritedSize[0x0438])
class UME_GameplayAbility_Sonar : public UME_GameplayAbility
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_Sonar");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_ThrashEscape
// 0x0010 (FullSize[0x0448] - InheritedSize[0x0438])
class UME_GameplayAbility_ThrashEscape : public UME_GameplayAbility
{
public:
	TWeakObjectPtr<class AME_AnimalCharacter>          OwningAnimalCharacter;                                     // 0x0438(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      GameplayEffect;                                            // 0x0440(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_ThrashEscape");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbility_WildlifeDirectionalLunge
// 0x0148 (FullSize[0x0580] - InheritedSize[0x0438])
class UME_GameplayAbility_WildlifeDirectionalLunge : public UME_GameplayAbility
{
public:
	unsigned char                                      UnknownData_02JJ[0x38];                                    // 0x0438(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDirectionalLunges                          DirectionalLunges;                                         // 0x0470(0x0040) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              PlayRate;                                                  // 0x04B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       SectionName;                                               // 0x04B4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bShouldStopMovement : 1;                                   // 0x04BC(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bShouldStopRotation : 1;                                   // 0x04BC(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_12XR[0x3];                                     // 0x04BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RootMotionScale;                                           // 0x04C0(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D7LG[0x4];                                     // 0x04CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              HitEffectClasses;                                          // 0x04D0(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              GameplayEffectClassesWhileAnimating;                       // 0x04E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              GameplayEffectClassesAppliedOnActivation;                  // 0x04F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldForceStopMontage;                                   // 0x0500(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6KWS[0x3];                                     // 0x0501(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bTakesPriorityOverOtherMontages : 1;                       // 0x0504(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9IYZ[0x3];                                     // 0x0505(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bSwitchToFlying;                                           // 0x0508(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N6AO[0xB];                                     // 0x0509(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMomentumForce                              MomentumToApply;                                           // 0x0514(0x0030) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FMomentumForce                              MomentumToApplyWhileAnimating;                             // 0x0544(0x0030) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CWP6[0x4];                                     // 0x0574(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                PlayingMontage;                                            // 0x0578(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_WildlifeDirectionalLunge");
		return ptr;
	}



	void MontageStarted(class UAnimMontage* Montage);
	void MontageEnded(class UAnimMontage* Montage, bool bInterrupted);
};

// Class Maneater.ME_GameplayAbility_WildlifeLunge
// 0x0038 (FullSize[0x0510] - InheritedSize[0x04D8])
class UME_GameplayAbility_WildlifeLunge : public UME_GameplayAbility_MontageSequence
{
public:
	class UAkAudioEvent*                               LungeMissAudioEvent;                                       // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      IntendedActorTarget;                                       // 0x04E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialDirectionDot;                                       // 0x04E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_65XK[0x24];                                    // 0x04EC(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbility_WildlifeLunge");
		return ptr;
	}



	void CheckOwnerPosition(const struct FGameplayAbilityActorInfo& ActorInfo, float DropFocusRange);
};

// Class Maneater.ME_GameplayAbilityMontageInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_GameplayAbilityMontageInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbilityMontageInterface");
		return ptr;
	}



};

// Class Maneater.ME_GameplayAbilityTargetActor_Radius
// 0x0000 (FullSize[0x0340] - InheritedSize[0x0340])
class AME_GameplayAbilityTargetActor_Radius : public AGameplayAbilityTargetActor_Radius
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayAbilityTargetActor_Radius");
		return ptr;
	}



};

// Class Maneater.ME_GameplaySettings
// 0x00A8 (FullSize[0x00E0] - InheritedSize[0x0038])
class UME_GameplaySettings : public UDeveloperSettings
{
public:
	TMap<struct FName, struct FGameplayVocabulary>     GameplayVocabulary;                                        // 0x0038(0x0050) (Edit, Config, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FPlayerTutorialPopup>    Tutorials;                                                 // 0x0088(0x0050) (Edit, Config, NativeAccessSpecifierPublic)
	bool                                               bCruiseEnabled;                                            // 0x00D8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QSCN[0x3];                                     // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TurnSoundOverride;                                         // 0x00DC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplaySettings");
		return ptr;
	}



};

// Class Maneater.ME_GameplayStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_GameplayStatics : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameplayStatics");
		return ptr;
	}



	void STATIC_ToggleWorldRendering(class UObject* Context, bool bEnableRendering);
	bool STATIC_TestPreyAttachment(class AME_AnimalCharacter* GrabbingAnimal, class AActor* PreyActor);
	class AME_AIController* STATIC_SpawnAIAtLocation(class AActor* WorldContextActor, class UClass* SpawnClass, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, bool bPersistent, Engine_ESpawnActorCollisionHandlingMethod PawnCollision);
	class AME_AIController* STATIC_SpawnAIAtActor(class AActor* WorldContextActor, class UClass* SpawnClass, class AActor* Actor, bool bUseActorRotation, bool bPersistent, Engine_ESpawnActorCollisionHandlingMethod PawnCollision);
	bool STATIC_ShowTutorialPopup(const struct FName& TutorialLabel, class UObject* WorldContext);
	void STATIC_SetTimeOfDaySpeedScale(float NewScale, class AActor* ContextActor);
	void STATIC_SetTimeOfDay(float TimeOfDay, class AActor* ContextActor);
	void STATIC_SetKeyForAxis(const struct FName& ActionName, const struct FKey& Binding, float AxisScale, bool bGamepad, class UObject* Context);
	void STATIC_SetKeyForAction(const struct FName& ActionName, const struct FKey& Binding, int BindIndex, class UObject* Context, bool Rebuild);
	class UObject* STATIC_ResolveAsset(class UObject* WorldContext);
	void STATIC_ReadPixelsFromRenderTarget(class UTextureRenderTarget2D* RT, TArray<struct FColor>* OutPixelBuffer);
	bool STATIC_ProjectPointToSurface(class UObject* Context, struct FVector* ProjectionPoint);
	struct FImpactResponseInstance STATIC_ProcessImpactResponse(class UPhysicalMaterial* InstigatorPM, class USceneComponent* Instigator, class UPrimitiveComponent* Receiver, const struct FVector& HitLocation, const struct FVector& HitNormal, bool bAttachToReceiver, const struct FName& AttachPoint, TEnumAsByte<Engine_EPhysicalSurface> ReceivingSurfaceOverride, bool ForceWorldRotation);
	bool STATIC_KeyIsValid(const struct FKey& InKey);
	bool STATIC_IsWaypointed(class AActor* InActor);
	bool STATIC_IsWatchingCinematic(class UObject* WorldContext);
	bool STATIC_IsPlayingPrologue(class UObject* WorldContextObject);
	bool STATIC_IsPlayerOnLand(class UObject* WorldContextObject);
	bool STATIC_IsPlayerLookingAtLocation(class UObject* WorldContextObject, const struct FVector& TestLocation, float TestAngle);
	bool STATIC_IsPlayerInRangeOfLocation(class UObject* WorldContextObject, const struct FVector& TestLocation, float RangeVal);
	bool STATIC_IsPlayerInGrotto(class UObject* WorldContextObject);
	bool STATIC_IsPlayerCameraUnderwater(class AActor* InActor);
	bool STATIC_IsPlatformWinGDK();
	bool STATIC_IsPlatformWindows();
	bool STATIC_IsInWorldMap(class UObject* WorldContext);
	void STATIC_IntPointToFVector2D(TArray<struct FIntPoint> Input, TArray<struct FVector2D>* Output);
	float STATIC_GetWorldUnitScale();
	class AME_WorldSettings* STATIC_GetWorldSettings(class AActor* WorldContextActor);
	void STATIC_GetWorldRegionStates(class UObject* WorldContextObject, TArray<struct FWorldRegionState>* RegionStates);
	void STATIC_GetWorldRegionStateFromObjective(class UObject* WorldContextObject, class UME_PlayerObjective* Obj, struct FWorldRegionState* RegionState);
	void STATIC_GetWorldRegionState(class UObject* WorldContextObject, int InRegionIndex, struct FWorldRegionState* RegionState);
	class UME_WorldRegionData* STATIC_GetWorldRegionData(class UObject* WorldContextObject);
	struct FVector STATIC_GetWorldLocationAtUVCoord(class AActor* Bounds, const struct FVector2D& UVCoord);
	class AActor* STATIC_GetWorldBoundsActor(class AActor* WorldContext);
	float STATIC_GetWaterDepthAtLocation(const struct FVector& InLocation, class AActor* WorldContextActor);
	float STATIC_GetWaterDepth(class AActor* InActor);
	struct FVector2D STATIC_GetUVsAtWorldLocation(class AActor* Bounds, const struct FVector& Location, class UTexture* Texture);
	class AME_TutorialManager* STATIC_GetTutorialManager(class UObject* WorldContextObject);
	float STATIC_GetTimeofDaySpeedScale(class AActor* ContextActor);
	float STATIC_GetTimeofDayNoContext(class AActor* ContextActor);
	float STATIC_GetTimeofDay(class AActor* ContextActor);
	class UME_SpawnPool* STATIC_GetSpawnPool(class UObject* WorldContextObject);
	class AME_SpawnManager* STATIC_GetSpawnManager(class UObject* WorldContextObject);
	class AME_SonarManager* STATIC_GetSonarManager(class UObject* WorldContext);
	Maneater_EOutlineColor STATIC_GetSilhouetteColor(class AActor* SilhouetteActor);
	struct FText STATIC_GetRegionName(Maneater_EWorldRegion Region, bool bIgnoreLocalization);
	int STATIC_GetRegionIndexforVolume(class AME_WorldRegionVolume* RegionVolume);
	Maneater_EWorldRegion STATIC_GetRegionFromName(const struct FText& RegionName);
	class UPhysicalMaterial* STATIC_GetPMFromComponent(class USceneComponent* InComponent);
	class AME_PlayerSharkState* STATIC_GetPlayerSharkState(class UObject* WorldContextObject);
	class AME_PlayerSharkCharacter* STATIC_GetPlayerSharkPawn(class UObject* WorldContextObject);
	float STATIC_GetPlayerBounty(class UObject* WorldContextObject, bool bAsDollars);
	class ULevel* STATIC_GetPersistentLevel(class UObject* Context);
	class AME_OceanPhysicsVolume* STATIC_GetOceanPhysicsVolume(class AActor* InActor);
	class AME_OceanManager* STATIC_GetOceanManager(class UObject* Context);
	class AME_ObjectiveSpawnManager* STATIC_GetObjectiveSpawnManager(class UObject* WorldContextObject);
	class AME_PlayerObjectiveManager* STATIC_GetObjectiveManager(class UObject* WorldContextObject);
	class AME_GameMode* STATIC_GetManeaterGameMode(class UObject* WorldContextObject);
	struct FVector STATIC_GetLocalViewPosition(class AActor* ContextActor);
	struct FText STATIC_GetLocalizedGrowthName(TEnumAsByte<Maneater_EPlayerGrowthStage> GrowthStage);
	float STATIC_GetLastRenderTime(class UPrimitiveComponent* InComponent);
	struct FVector2D STATIC_GetLandscapeResolution(class ALandscape* Landscape);
	class ALandscape* STATIC_GetLandscape(class UObject* Context);
	void STATIC_GetKeysForAction(const struct FName& ActionName, float AxisScale, TArray<struct FKey>* Bindings);
	struct FText STATIC_GetKeyFriendlyName(const struct FKey& InKey);
	class UME_DialogueSystem* STATIC_GetDialogueSystem(class UObject* WorldContextObject);
	class UObject* STATIC_GetDefaultObject(class UObject* InObject);
	struct FString STATIC_GetCurrentMapName(class UObject* Context);
	class AME_BossBattleInfo* STATIC_GetCurrentBossFight(class AActor* WorldContextActor);
	class UObject* STATIC_GetClassDefaultObject(class UClass* InClass);
	float STATIC_GetCameraWaterDepth(class AActor* InActor);
	class AME_BountyManager* STATIC_GetBountyManager(class UObject* WorldContext);
	struct FString STATIC_GetAssetName(bool bIncludePath);
	struct FString STATIC_GetAssetMapName();
	class AME_AssetLoader* STATIC_GetAssetLoader(class UObject* WorldContext);
	void STATIC_GetAllThrashablePawns(class AActor* WorldContextActor, TArray<class APawn*>* ThrashableList);
	void STATIC_GetAllThrashableActors(class UObject* WorldContext, TArray<class AActor*>* ThrashableList);
	void STATIC_GetAllPingableActors(class UObject* WorldContext, TArray<class AActor*>* PingableList);
	void STATIC_GetAllLivingHumans(class AActor* WorldContextObject, TArray<class AME_HumanCharacter*>* HumanList);
	void STATIC_GetAllLivingCharacters(class AActor* WorldContextActor, TArray<class AME_Character*>* CharacterList);
	void STATIC_GetAllLivingAnimals(class AActor* WorldContextActor, TArray<class AME_AnimalCharacter*>* AnimalList);
	void STATIC_GetAllChildrenOfClass(class UClass* InParent, TArray<struct FName> IgnoredClasses);
	void STATIC_GetAllAxisInputs(TArray<struct FInputAxisKeyMapping>* AxisInputs);
	void STATIC_GetAllAIControllers(class AActor* WorldContextActor, TArray<class AME_AIController*>* ControllerList, bool bSortByDistance);
	void STATIC_GetAllActionInputs(TArray<struct FInputActionKeyMapping>* ActionInputs);
	class AME_AIDirector* STATIC_GetAIDirector(class UObject* WorldContext);
	void STATIC_GetActionsForKey(const struct FKey& InKey, TArray<struct FInputAxisKeyMapping>* OutAxisMappings, TArray<struct FInputActionKeyMapping>* OutActionMappings);
	void STATIC_FVector2DToIntPoint(TArray<struct FVector2D> Input, TArray<struct FIntPoint>* Output);
	struct FText STATIC_FormatGameplayText(const struct FText& TextToFormat, TArray<struct FRichTextActionMapping> ActionBinds);
	void STATIC_ForceDespawnAllProxBombs(class UObject* WorldContextObject);
	void STATIC_ForceDespawnAI(class AME_AIController* AIC);
	struct FRotator STATIC_FindSlopeRotation(const struct FVector& FloorNormal, const struct FRotator& CurrentRotation);
	struct FVector2D STATIC_FFloatIntervalToFVector2D(const struct FFloatIntervalBP& Input);
	void STATIC_DrawArrowOnActor(class AActor* Actor, const struct FRotator& Direction, const struct FColor& Color, float ArrowLength);
	class UTextureRenderTarget2D* STATIC_CreateRenderTarget2DNoHDR(class UObject* WorldContextObject, int Width, int Height);
	void STATIC_AttachCinematicEvolutionMeshes(class ASkeletalMeshActor* SkeletalMeshActor);
};

// Class Maneater.MEGameSingleton
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEGameSingleton : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEGameSingleton");
		return ptr;
	}



};

// Class Maneater.ME_GameUserSettings
// 0x0030 (FullSize[0x0150] - InheritedSize[0x0120])
class UME_GameUserSettings : public UGameUserSettings
{
public:
	int                                                GlobalQualityLevel;                                        // 0x0120(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                VSyncType;                                                 // 0x0124(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OceanQualityLevel;                                         // 0x0128(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowFrameRate;                                            // 0x012C(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AHPL[0x3];                                     // 0x012D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DefaultFOV;                                                // 0x0130(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Brightness;                                                // 0x0134(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A69E[0x4];                                     // 0x0138(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShadowsOn;                                                // 0x013C(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EA9D[0x3];                                     // 0x013D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     LastActiveUserId;                                          // 0x0140(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GameUserSettings");
		return ptr;
	}



	void SetVSyncType(class UWorld* OwnerWorld, int Val);
	void SetShowFrameRate(bool bNewShowFrameRate);
	void SetShadowsOn(class UWorld* OwnerWorld, int Val);
	void SetOceanQualityLevel(int QualityLevel);
	void SetLastActiveUserId(const struct FString& userId);
	void SetGlobalQuality(int Val);
	void SetDefaultFOV(float InFOV);
	void SetBrightness(class UWorld* OwnerWorld, int Val);
	void SetAntiAliasingType(class UWorld* OwnerWorld, int Value);
	int GetVSyncType();
	bool GetShowFrameRate();
	bool GetShadowsOn();
	int GetOceanQualityLevel();
	class UME_GameUserSettings* STATIC_GetManeaterUserSettings();
	struct FString GetLastActiveUserId();
	int GetGlobalQuality();
	float GetDefaultFOV();
	int GetBrightness();
	int GetAntiAliasingType();
};

// Class Maneater.ME_GateLever
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AME_GateLever : public AActor
{
public:
	class AME_InWorldWidgetCreator*                    WidgetCreator;                                             // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GateLever");
		return ptr;
	}



};

// Class Maneater.ME_GoreChunk
// 0x0000 (FullSize[0x02E0] - InheritedSize[0x02E0])
class AME_GoreChunk : public AME_ThrashableActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GoreChunk");
		return ptr;
	}



};

// Class Maneater.ME_GraphicsSettings
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UME_GraphicsSettings : public UDeveloperSettings
{
public:
	struct FName                                       FoliageShadowParameterName;                                // 0x0038(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ContentLink;                                               // 0x0040(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFoliageShadowStrengthChanged;                            // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JXVB[0x8];                                     // 0x0058(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GraphicsSettings");
		return ptr;
	}



};

// Class Maneater.ME_GraphicsSettingsContentLink
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UME_GraphicsSettingsContentLink : public UObject
{
public:
	TArray<class UMaterialParameterCollection*>        Maneater_MPCs;                                             // 0x0028(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_GraphicsSettingsContentLink");
		return ptr;
	}



};

// Class Maneater.ME_Grotto
// 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
class AME_Grotto : public AActor
{
public:
	unsigned char                                      UnknownData_FQ6X[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       LevelName;                                                 // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EWorldRegion                              Region;                                                    // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLocked;                                                 // 0x0231(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LP7G[0x6];                                     // 0x0232(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GrottoVolume[0x28];                                        // 0x0232(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               bHasBeenDiscovered;                                        // 0x0260(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8WSO[0x7];                                     // 0x0261(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_Grotto");
		return ptr;
	}



	void StreamingLevelLoaded();
	void SetInactive(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnGrottSpaceExited();
	void OnGrottSpaceEntered();
	void Activate(class AActor* OverlappedActor, class AActor* OtherActor);
};

// Class Maneater.ME_HitComponent
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_HitComponent : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HitComponent");
		return ptr;
	}



};

// Class Maneater.ME_HitComponentAOE
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UME_HitComponentAOE : public UME_HitComponent
{
public:
	float                                              Radius;                                                    // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3BSV[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HitComponentAOE");
		return ptr;
	}



};

// Class Maneater.ME_HumanAIController
// 0x0038 (FullSize[0x07B8] - InheritedSize[0x0780])
class AME_HumanAIController : public AME_CharacterAIController
{
public:
	class AME_HumanCharacter*                          HumanPawn;                                                 // 0x0780(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanLookForBoats;                                          // 0x0788(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NM02[0x7];                                     // 0x0789(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_BoatPawn*                                NearestBoat;                                               // 0x0790(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BB_NearestBoatKey;                                         // 0x0798(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BB_NearestBoatBoardLocKey;                                 // 0x07A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FE9D[0x10];                                    // 0x07A8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HumanAIController");
		return ptr;
	}



	void GetStateAsDialogueString(struct FString* State);
};

// Class Maneater.ME_HumanCharacter
// 0x0238 (FullSize[0x0E58] - InheritedSize[0x0C20])
class AME_HumanCharacter : public AME_Character
{
public:
	bool                                               bHasRandomizedAppearance;                                  // 0x0C20(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0YHD[0x7];                                     // 0x0C21(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMaterialInterface*>                  RegionMaterials;                                           // 0x0C28(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpecificCharacter;                                         // 0x0C38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7KK9[0x4];                                     // 0x0C3C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  ConfigTable;                                               // 0x0C40(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHumanNPCAppearanceConfig                   LoadedConfig;                                              // 0x0C48(0x0068) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHumanNPCTextureSet_Body                    BodyConfig;                                                // 0x0CB0(0x0030) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHumanNPCTextureSet_Hair                    HairConfig;                                                // 0x0CE0(0x0038) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHumanNPCTextureSet_Clothing                ClothingConfig;                                            // 0x0D18(0x0040) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UME_BodyTypeInformation*                     FitSizeInformation;                                        // 0x0D58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_BodyTypeInformation*                     PlusSizeInformation;                                       // 0x0D60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               ArmBoneNames;                                              // 0x0D68(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               LegBonesNames;                                             // 0x0D78(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBountyBoss;                                             // 0x0D88(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0R62[0x7];                                     // 0x0D89(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnVehicleReceivedHit;                                      // 0x0D90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FString                                     DynamicDialoguePathModelName;                              // 0x0DA0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChatterUpdateFrequencyMin;                                 // 0x0DB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChatterUpdateFrequencyMax;                                 // 0x0DB4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChatterSpamCooldown;                                       // 0x0DB8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NXRK[0x10];                                    // 0x0DBC(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BleedOutDamageIncrement;                                   // 0x0DCC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ME_WeaponComponentClass;                                   // 0x0DD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_WeaponComponent*                         ME_WeaponComponent;                                        // 0x0DD8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XDT7[0x10];                                    // 0x0DE0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EjectedDamageAudioChance;                                  // 0x0DF0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K1ME[0x4];                                     // 0x0DF4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                BleedOutTimerHandle;                                       // 0x0DF8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AttackCooldownWhenBitten;                                  // 0x0E00(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JCBR[0x28];                                    // 0x0E04(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AbandonImpulseModifier;                                    // 0x0E2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AbandonTurnTime;                                           // 0x0E30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U630[0x4];                                     // 0x0E34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        AbandonVehicleMontage;                                     // 0x0E38(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RTCL[0x10];                                    // 0x0E48(0x0010) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HumanCharacter");
		return ptr;
	}



	void TryUpdateChatter(bool bForce);
	void SetThreatLevel(TEnumAsByte<Maneater_EAIThreatAlertState> NewAlertState, class AActor* InstigatingActor);
	void SetIsPassenger(bool bNewPassengerStatus, class AME_VehiclePawn* NewVehicle, bool bChangeCollision, int SeatIndex);
	void PostRandomDialogueEvent();
	void GetupPawn_UseSnapshot();
	void GetupPawn_TriggerAnimation();
	void GetupPawn_SetupActor();
	void GetupPawn_MoveActor();
	void GetStateAsDialogueString(struct FString* State);
	bool EjectIfPassenger(class AController* EjectInstigator, bool bShouldRagdoll, const struct FVector& EjectImpulse);
	void ChatterUpdateEvent_BP(int TotalLimbs, int DestroyedLimbs, bool isGrabbed, bool wasBumped, bool bWasForced);
	void BleedOutTimer();
	void AbandonVehicleFinished();
	void AbandonVehicle();
	void AbandonIfPassenger();
};

// Class Maneater.ME_HumanBeachgoer
// 0x0108 (FullSize[0x0F60] - InheritedSize[0x0E58])
class AME_HumanBeachgoer : public AME_HumanCharacter
{
public:
	class AME_HumanBeachgoer*                          DefaultBeachgoer;                                          // 0x0E58(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowedToEscape;                                          // 0x0E60(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YG2T[0x13];                                    // 0x0E61(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsGettingUp;                                              // 0x0E74(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P259[0x3];                                     // 0x0E75(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMinMaxRange                                EscapeMoveSpeed;                                           // 0x0E78(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_29RB[0x4];                                     // 0x0E80(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EscapeMoveSpeedToUse;                                      // 0x0E84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LegsCrawlSpeed;                                            // 0x0E88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NoLegsCrawlSpeed;                                          // 0x0E8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChanceToTrip;                                              // 0x0E90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMinMaxRange                                TripMinMaxTime;                                            // 0x0E94(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JDM4[0x4];                                     // 0x0E9C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      TrippedEffect;                                             // 0x0EA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AddedForwardImpulse;                                       // 0x0EA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AddedVerticalImpulse;                                      // 0x0EAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M1YV[0x10];                                    // 0x0EB0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FleeDistanceBetweenChecks;                                 // 0x0EC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ForwardCapsulePlacementDistance;                           // 0x0EC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UIE6[0x28];                                    // 0x0EC8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMinMaxRange                                FleeDelay;                                                 // 0x0EF0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LLX7[0x8];                                     // 0x0EF8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    StartFleeing;                                              // 0x0F00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMinMaxRange                                NavigationWaitTime;                                        // 0x0F10(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6C8F[0x8];                                     // 0x0F18(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMinMaxRange                                CasualWalkSpeedRange;                                      // 0x0F20(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JXVV[0x1C];                                    // 0x0F28(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PitchMaximum;                                              // 0x0F44(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RollMaximum;                                               // 0x0F48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchBlendSpeed;                                           // 0x0F4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawBlendSpeed;                                             // 0x0F50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RollBlendSpeed;                                            // 0x0F54(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VF4B[0x8];                                     // 0x0F58(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HumanBeachgoer");
		return ptr;
	}



};

// Class Maneater.ME_HumanBeachgoerAIController
// 0x0068 (FullSize[0x0820] - InheritedSize[0x07B8])
class AME_HumanBeachgoerAIController : public AME_HumanAIController
{
public:
	class UME_AmbientActivityComponent*                ActivityComponent;                                         // 0x07B8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_HumanBeachgoer*                          BeachgoerPawn;                                             // 0x07C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThreatSearchInterval;                                      // 0x07C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EL2W[0x54];                                    // 0x07CC(0x0054) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HumanBeachgoerAIController");
		return ptr;
	}



	void SetFleeingPath();
	void FleeingAfterDelay();
};

// Class Maneater.ME_HumanMovementComponent
// 0x0010 (FullSize[0x0760] - InheritedSize[0x0750])
class UME_HumanMovementComponent : public UME_CharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_VQV8[0x10];                                    // 0x0750(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HumanMovementComponent");
		return ptr;
	}



};

// Class Maneater.ME_HumanPassenger
// 0x0008 (FullSize[0x0E60] - InheritedSize[0x0E58])
class AME_HumanPassenger : public AME_HumanCharacter
{
public:
	unsigned char                                      UnknownData_6Y80[0x8];                                     // 0x0E58(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HumanPassenger");
		return ptr;
	}



};

// Class Maneater.ME_HumanPassengerController
// 0x0000 (FullSize[0x07B8] - InheritedSize[0x07B8])
class AME_HumanPassengerController : public AME_HumanAIController
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HumanPassengerController");
		return ptr;
	}



};

// Class Maneater.ME_InputComponent
// 0x0080 (FullSize[0x01B8] - InheritedSize[0x0138])
class UME_InputComponent : public UInputComponent
{
public:
	unsigned char                                      UnknownData_B5IE[0x10];                                    // 0x0138(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    PlayerBiteDelegate;                                        // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerSharkCharacter>     PlayerSharkCharacter;                                      // 0x0158(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E7D0[0x8];                                     // 0x0160(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxLookSpeed;                                              // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AM2W[0x14];                                    // 0x016C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EvadeInputDeadZone;                                        // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S1IG[0x8];                                     // 0x0184(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ComboInputDeadZone;                                        // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DotVectorAcceptanceValue;                                  // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InputWindow;                                               // 0x0194(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6XQJ[0x20];                                    // 0x0198(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_InputComponent");
		return ptr;
	}



};

// Class Maneater.ME_InterpolatedSplineActor
// 0x0098 (FullSize[0x02B8] - InheritedSize[0x0220])
class AME_InterpolatedSplineActor : public AActor
{
public:
	class USplineComponent*                            SplineComponent;                                           // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshMoveSpeed;                                             // 0x0228(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshTurnSpeed;                                             // 0x022C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TickRateMin;                                               // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TickRateMax;                                               // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TickDistMin;                                               // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUpdateWhileInvisible;                                     // 0x023C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PSL4[0x3];                                     // 0x023D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class USceneComponent*, struct FRotator>      InterpolationRotOffsets;                                   // 0x0240(0x0050) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZY19[0x28];                                    // 0x0290(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_InterpolatedSplineActor");
		return ptr;
	}



};

// Class Maneater.ME_SharkCharacter
// 0x0060 (FullSize[0x0FB0] - InheritedSize[0x0F50])
class AME_SharkCharacter : public AME_AnimalCharacter
{
public:
	unsigned char                                      UnknownData_FDT4[0x20];                                    // 0x0F50(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_OceanSurfaceParticleSystemComponent*     DorsalPSComponent;                                         // 0x0F70(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             GrowthStagePSTemplates[0x5];                               // 0x0F78(0x0028) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DorsalPSCDeactivationSpeedSq;                              // 0x0FA0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NETZ[0xC];                                     // 0x0FA4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SharkCharacter");
		return ptr;
	}



	struct FVector GetDorsalFinLocation();
};

// Class Maneater.ME_PlayerSharkCharacter
// 0x0F20 (FullSize[0x1ED0] - InheritedSize[0x0FB0])
class AME_PlayerSharkCharacter : public AME_SharkCharacter
{
public:
	unsigned char                                      UnknownData_1R9I[0x38];                                    // 0x0FB0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTailwhipPerformedDelegate;                               // 0x0FE8(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWhipShotPerformedDelegate;                               // 0x0FF8(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKnifingJumpPerformedDelegate;                            // 0x1008(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLungePerformedDelegate;                                  // 0x1018(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TimeDilationEventDelegate;                                 // 0x1028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      HeldTailWhipGE;                                            // 0x1038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle                 HeldTailWhipGEHandle;                                      // 0x1040(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TailWhipDilationLerpSpeed;                                 // 0x1048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TailWhipTargetingRotationRate;                             // 0x104C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BiteChainWindowTime;                                       // 0x1050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZWLQ[0xC];                                     // 0x1054(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinDeltaDotForBreachKnifing;                               // 0x1060(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDeltaDotForBreachKnifing;                               // 0x1064(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M6M7[0x4];                                     // 0x1068(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ThrashEndDelay;                                            // 0x106C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFocalTargetChanged;                                      // 0x1070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKnifingStateChanged;                                     // 0x1080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9DIX[0x20];                                    // 0x1090(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FocalTargetTraceExtent;                                    // 0x10B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8OSN[0x4];                                     // 0x10B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FComboAttack>                        AllComboAttacks;                                           // 0x10B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DRBR[0x4];                                     // 0x10C8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     CurrentFocusedGrabPointLoc;                                // 0x10CC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RegionCheckDelay;                                          // 0x10D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WIN0[0x4];                                     // 0x10DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_WorldRegionVolume*                       CurrentWorldRegion;                                        // 0x10E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7S8H[0x10];                                    // 0x10E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DeathFadeOutTime;                                          // 0x10F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DeathSlomoRatio;                                           // 0x10FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableSlomoOnDeath;                                      // 0x1100(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IA88[0x3];                                     // 0x1101(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       LastVictim;                                                // 0x1104(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I1K8[0xC];                                     // 0x110C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RegionAmbientNarratorPeriodFloor;                          // 0x1118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RegionAmbientNarratorPeriodCeil;                           // 0x111C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRegionChanged;                                           // 0x1120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E4C4[0x8];                                     // 0x1130(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FrenzyHealthBonus;                                         // 0x1138(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FrenzyHealthBonusMax;                                      // 0x113C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FrenzyStaminaBonus;                                        // 0x1140(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FrenzyStaminaBonusMax;                                     // 0x1144(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3QMH[0x30];                                    // 0x1148(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               StartLowHealthWarningEvent;                                // 0x1178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopLowHealthWarningEvent;                                 // 0x1180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartDrowningEvent;                                        // 0x1188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopDrowningEvent;                                         // 0x1190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthDangerStartPct;                                      // 0x1198(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowAirThreshold;                                           // 0x119C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D3OP[0x30];                                    // 0x11A0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_PlayerSharkMovementComponent*            SharkMovementComponent;                                    // 0x11D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_PlayerSharkState*                        SharkPlayerState;                                          // 0x11D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_PlayerSharkController*                   SharkPlayerController;                                     // 0x11E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_AIDirector*                              AIDirector;                                                // 0x11E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1J2K[0x8];                                     // 0x11F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_CameraComponent*                         FollowCamera;                                              // 0x11F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QRVR[0x10];                                    // 0x1200(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_CameraSpringArmComponent*                CameraBoom;                                                // 0x1210(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerCameraMaxPitch;                                      // 0x1218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerCameraMinPitch;                                      // 0x121C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraPitchCapBlend;                                       // 0x1220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnderwaterSurfaceCameraThreshold;                          // 0x1224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnderwaterSurfaceCameraMinPitch;                           // 0x1228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterSurfaceCameraBoomMultiplier;                          // 0x122C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterSurfaceAddedCameraHeight;                             // 0x1230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallingCameraBoomMultiplier;                               // 0x1234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraLagDistLevelMultiplier;                              // 0x1238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraArmSprintMultiplier;                                 // 0x123C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFinalSprintArmLengthMultiplier;                         // 0x1240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FKOH[0x4];                                     // 0x1244(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceConstant*                   MeshFadeMIC;                                               // 0x1248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFocusCharacterDist;                                     // 0x1250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFocusVehicleDist;                                       // 0x1254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFocusLandSurfaceDiff;                                   // 0x1258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshFadeDistanceBuffer;                                    // 0x125C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EUIJ[0x58];                                    // 0x1260(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SharkGrowthScale;                                          // 0x12B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PGYG[0x4];                                     // 0x12BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             LevelUpParticle;                                           // 0x12C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LevelUpSocketName;                                         // 0x12C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 LevelUpBloomCurve;                                         // 0x12D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 LevelUpGlowCurve;                                          // 0x12D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IYR0[0x30];                                    // 0x12E0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       TagTrackerAttachSocketName;                                // 0x1310(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TagTrackerClass;                                           // 0x1318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TagActivatedSound;                                         // 0x1320(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TagExpiredSound;                                           // 0x1328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MotionlessPitchLerpDelay;                                  // 0x1330(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LI7Z[0x4];                                     // 0x1334(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SharkTeethMeshName;                                        // 0x1338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SharkMaterialName;                                         // 0x1340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SharkScarredMaterialName;                                  // 0x1348(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TeethMaterialName;                                         // 0x1350(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HeadMaterialName;                                          // 0x1358(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TailMaterialName;                                          // 0x1360(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BodyMaterialName;                                          // 0x1368(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FinsMaterialName;                                          // 0x1370(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HitAudioName;                                              // 0x1378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HardHitAudioName;                                          // 0x1380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PainSoundDelay;                                            // 0x1388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0MC3[0x4];                                     // 0x138C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      TeethSkeletalMesh;                                         // 0x1390(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HeadSkeletalMesh;                                          // 0x1398(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      TailSkeletalMesh;                                          // 0x13A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      BodySkeletalMesh;                                          // 0x13A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      FinsSkeletalMesh;                                          // 0x13B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OHKH[0x64];                                    // 0x13B8(0x0064) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StickHoldTimeForSprint;                                    // 0x141C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoAimSpeedMin;                                           // 0x1420(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoAimSpeedMax;                                           // 0x1424(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoAimSpeedMinDot;                                        // 0x1428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoAimSpeedMaxDot;                                        // 0x142C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StickForwardThresholdForSprint;                            // 0x1430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StickForwardThresholdToCancelSprint;                       // 0x1434(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToBlendToFullSprint;                                   // 0x1438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AT5J[0x4];                                     // 0x143C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              SprintTier1;                                               // 0x1440(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              SprintTier2;                                               // 0x1450(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              SprintTier3;                                               // 0x1460(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                               MotherSharkMesh;                                           // 0x1470(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               ScarredAdultMesh;                                          // 0x1478(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                        MotherSharkStage;                                          // 0x1480(0x00F0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                        PupSharkStage;                                             // 0x1570(0x00F0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                        TeenSharkStage;                                            // 0x1660(0x00F0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                        AdultSharkStage;                                           // 0x1750(0x00F0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                        ElderSharkStage;                                           // 0x1840(0x00F0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                        MegaSharkStage;                                            // 0x1930(0x00F0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3OVE[0xC];                                     // 0x1A20(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bBitingVulnerableCharacter;                                // 0x1A2C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7PZN[0x3];                                     // 0x1A2D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       PerfectEntrySplash;                                        // 0x1A30(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PerfectTrailBubbles;                                       // 0x1A38(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SmallEntrySplash;                                          // 0x1A40(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SmallTrailBubbles;                                         // 0x1A48(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MediumEntrySplash;                                         // 0x1A50(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MediumTrailBubbles;                                        // 0x1A58(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LargeEntrySplash;                                          // 0x1A60(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LargeTrailBubbles;                                         // 0x1A68(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ExitWaterSplash;                                           // 0x1A70(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ExitWaterSplashSound;                                      // 0x1A78(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ExitWaterTrail;                                            // 0x1A80(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    ActiveTrail;                                               // 0x1A88(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FloppingTakeoffFromWater;                                  // 0x1A90(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FloppingLandInWater;                                       // 0x1A98(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttachedParticleSystem>             EnterKnifingFromUnderwaterTrail;                           // 0x1AA0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttachedParticleSystem>             EnterKnifingFromBreachTrail;                               // 0x1AB0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttachedParticleSystem>             ExitKnifingUnderwaterTrail;                                // 0x1AC0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5Y7G[0x2C];                                    // 0x1AD0(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraInterpolationSpeed;                                  // 0x1AFC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFreeMoveEnabled;                                          // 0x1B00(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J8QT[0x13];                                    // 0x1B01(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DoubleTapTimeWindow;                                       // 0x1B14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReverseMovementModifier;                                   // 0x1B18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeMovementModifier;                                    // 0x1B1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InputComponentClass;                                       // 0x1B20(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D3Y6[0x24];                                    // 0x1B28(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinWhipshotAimDistance;                                    // 0x1B4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWhipshotAimDistance;                                    // 0x1B50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ECollisionChannel>              WhipshotAimTraceChannel;                                   // 0x1B54(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_II8Y[0x3];                                     // 0x1B55(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 WhipShotMassDifferential;                                  // 0x1B58(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SlamDamageMassDifferential;                                // 0x1B60(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayerOnLand;                                             // 0x1B68(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_ECharacterActionMode>         CurrentActionMode;                                         // 0x1B69(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2I71[0x6];                                     // 0x1B6A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    DamageEffectScreenSpaceParticle;                           // 0x1B70(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    LoopingMeshParticle;                                       // 0x1B78(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IUV6[0x1C];                                    // 0x1B80(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxLockOnDistance;                                         // 0x1B9C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TTA9[0x4];                                     // 0x1BA0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       BeginLockOnSound;                                          // 0x1BA4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       EndLockOnSound;                                            // 0x1BAC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WUB1[0x4];                                     // 0x1BB4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialParameterCollection*                SharkMaterialParams;                                       // 0x1BB8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                                CachedMovementComponent;                                   // 0x1BC0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       MovementLoop;                                              // 0x1BC8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       MovementLoopStop;                                          // 0x1BD0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WaterLineMovementLoop;                                     // 0x1BD8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WaterLineMovementLoopStop;                                 // 0x1BE0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FoliageDisplacementScalingFactor;                          // 0x1BE8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseFogRevealDistance;                                     // 0x1BEC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LastRevealedMapLocation;                                   // 0x1BF0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CurrentMovementAudioEvent;                                 // 0x1BFC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    LastTickRotation;                                          // 0x1C04(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              AudioPitchRange;                                           // 0x1C10(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AudioYawRange;                                             // 0x1C14(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          ScreenEffectsPPM;                                          // 0x1C18(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    ScreenEffectsPPMI;                                         // 0x1C20(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       Param_ScreenEffect_Pain;                                   // 0x1C28(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeTime_ScreenEffect_Pain;                                // 0x1C30(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FAML[0x4];                                     // 0x1C34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       Param_ScreenEffect_SpeedBurst;                             // 0x1C38(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeInTime_ScreenEffect_SpeedBurst;                        // 0x1C40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeOutTime_ScreenEffect_SpeedBurst;                       // 0x1C44(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Duration_ScreenEffect_SpeedBurst;                          // 0x1C48(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastSpeedBurstTime;                                        // 0x1C4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VYA4[0x4];                                     // 0x1C50(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       Param_ScreenEffect_Drowning;                               // 0x1C54(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8CAE[0x4];                                     // 0x1C5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       Param_ScreenEffect_LowHealth;                              // 0x1C60(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_02FQ[0x8];                                     // 0x1C68(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          SonarEffectsPPM;                                           // 0x1C70(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    SonarEffectsPPMI;                                          // 0x1C78(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                        QueuedInputs;                                              // 0x1C80(0x0010) (Edit, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2CYU[0x4];                                     // 0x1C90(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SharkFlipSpeed;                                            // 0x1C94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SharkAirTurnSpeed;                                         // 0x1C98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFaceCameraOnLanding;                                      // 0x1C9C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0KCL[0x3];                                     // 0x1C9D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BreachCameraAngle;                                         // 0x1CA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KnifingPitchControllerGravity;                             // 0x1CA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KnifingRelaxedPitch;                                       // 0x1CA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KnifingJumpTestAngle;                                      // 0x1CAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallingMaxPitch;                                           // 0x1CB0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallingMinPitch;                                           // 0x1CB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThrashingInputDampeningMultiplier;                         // 0x1CB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DAW0[0x4];                                     // 0x1CBC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    LeftGillGrabBlood;                                         // 0x1CC0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    RightGillGrabBlood;                                        // 0x1CC8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BreachCameraPitchTransitionSpeed;                          // 0x1CD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BreachCameraYawTransitionSpeed;                            // 0x1CD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BreachSharkRotationCorrectionSpeed;                        // 0x1CD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KnifingCameraAngle;                                        // 0x1CDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KnifingCameraPitchTransitionSpeed;                         // 0x1CE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KnifingCameraYawTransitionSpeed;                           // 0x1CE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BreachControlImpulse;                                      // 0x1CE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8Q7S[0x4];                                     // 0x1CEC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              SlamVehicleHitEffects;                                     // 0x1CF0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              SlamCharacterHitEffects;                                   // 0x1D00(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlamAttackCooldown;                                        // 0x1D10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlamDamageMinDamagePct;                                    // 0x1D14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlamDamageMaxDamagePct;                                    // 0x1D18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlamDamageSpeedPctThreshold;                               // 0x1D1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeedMultiplier;                                        // 0x1D20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EvadeSlamDamageMultiplier;                                 // 0x1D24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6WCD[0x10];                                    // 0x1D28(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinVehicleDamageImpulse;                                   // 0x1D38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinVehicleImpactDamageInterval;                            // 0x1D3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              VehicleDamageHitEffects;                                   // 0x1D40(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_PlayerTargetingSystem*                   PlayerTargetingSystem;                                     // 0x1D50(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUseTargetSystemRotation;                                  // 0x1D58(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TRG0[0xB];                                     // 0x1D59(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BiteLungeCooldownTime;                                     // 0x1D64(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxBiteLungeTime;                                          // 0x1D68(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BiteLungeInterpSpeed;                                      // 0x1D6C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BiteLungeMaxTargetHeight;                                  // 0x1D70(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BiteLungeMinCameraDot;                                     // 0x1D74(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BiteLungeGroundLeapZ;                                      // 0x1D78(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BiteLungeStartAudioEvent;                                  // 0x1D7C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BiteLungeStopAudioEvent;                                   // 0x1D84(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NUHT[0x25];                                    // 0x1D8C(0x0025) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDebugWaveHeights;                                         // 0x1DB1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6RA4[0x2];                                     // 0x1DB2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DebugWaveHeightGridCount;                                  // 0x1DB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugAIVision;                                            // 0x1DB8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7BIV[0x6F];                                    // 0x1DB9(0x006F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDangerSenseUpdatedDelegate;                              // 0x1E28(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    DangerSensePSC;                                            // 0x1E38(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DangerSenseEventName;                                      // 0x1E40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DangerSenseSocketName;                                     // 0x1E48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             GainedMutagenParticle;                                     // 0x1E50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MutagenSocketName;                                         // 0x1E58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    ActiveMutagenParticle;                                     // 0x1E60(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CK6R[0x10];                                    // 0x1E68(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 MutagenHead02crv;                                          // 0x1E78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenHead01crv;                                          // 0x1E80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBodyMaincrv;                                        // 0x1E88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBody01crv;                                          // 0x1E90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBody02crv;                                          // 0x1E98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBody03crv;                                          // 0x1EA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBody04crv;                                          // 0x1EA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBody05crv;                                          // 0x1EB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBody06crv;                                          // 0x1EB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBody07crv;                                          // 0x1EC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MutagenBody08crv;                                          // 0x1EC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerSharkCharacter");
		return ptr;
	}



	void ZeroOutStats();
	void UpdateGrowthAssets(TEnumAsByte<Maneater_EPlayerGrowthStage> OldGrowthStage, TEnumAsByte<Maneater_EPlayerGrowthStage> NewGrowthStage);
	void TryUseLungeAbility();
	void TryCancelBite();
	void TailWhipTimeDilationStarted_BP(TEnumAsByte<Maneater_ECharacterActionMode> ActionMode);
	void TailWhipTimeDilationEnded_BP();
	void StopAnimationsOnLandfall();
	void SetWantsToLeaveKnifing(bool bWantsToLeave);
	void SetTagged(bool bNewIsTagged);
	void SetCameraRotation(const struct FRotator& NewRotation);
	bool SetActorAndCameraRotation(const struct FRotator& NewRotation, Engine_ETeleportType Teleport);
	void RefreshAttachedMeshes();
	void PlayWaterReEntryAnimation(float EntryAngleDot, float VelocityAngleDot, const struct FRotator& FlatEntryRotator, bool PerfectEntry, bool IsCruisingWaterLine);
	void PlayWaterBreachFX();
	void PlayAudioEvent(class UAkAudioEvent* AudioEvent);
	void OnTimeDilationStarted();
	void OnTimeDilationEnded();
	void OnEvolutionAbilityCharged();
	void OnCinematicModeChangedEvent(bool bCinematicMode);
	void OnCinematicModeChanged(bool bCinematicMode);
	void OnAttackAbilityMeleeHit_BP(class UGameplayAbility* AttackAbility, const struct FHitResult& HitResult);
	void NotifyDirectorOfAttack();
	void LerpSharkMaterialParam(const struct FString& ParamName, float ParamValue, float fLerpTime);
	void KnifingStateChanged_BP(bool NewKnifingState, TEnumAsByte<Maneater_ECharacterActionMode> ChangeContext);
	bool IsSprinting();
	bool IsMotherShark();
	bool IsInputDisabled();
	TEnumAsByte<Maneater_EFastTravelReturn> IsCapableOfFastTravel(class AActor* DestGrotto);
	void GrowthStageUpdated(TEnumAsByte<Maneater_EPlayerGrowthStage> OldGrowthStage, TEnumAsByte<Maneater_EPlayerGrowthStage> NewGrowthStage, bool bReinitPose);
	void GrowthStageChanged(TEnumAsByte<Maneater_EPlayerGrowthStage> NewGrowthStage);
	void GrowthLevelChanged(int NewGrowthLevel, bool bChangeFromTheoretical);
	void GibLastVictim();
	class UME_PlayerTargetingSystem* GetPlayerTargetingSystem();
	class UME_PlayerSharkMovementComponent* GetPlayerSharkMovement();
	int GetPlayerLevel();
	float GetGrowthStageScale();
	TEnumAsByte<Maneater_EPlayerGrowthStage> GetGrowthStage();
	class AActor* GetCurrentLockOnTarget();
	class AActor* GetCurrentFocusedTarget();
	class UME_AnimInstance_PlayerShark* GetCastAnimInstance();
	class USkeletalMeshComponent* GetAttachedEvolutionMesh(Maneater_EEvolutionSlot EvolutionSlot, int MeshIndex);
	void GenericWaterlineSplash(class UParticleSystem* Particles);
	void GenericAttachedParticleTrail(class UParticleSystem* Particles, TEnumAsByte<Maneater_ELimbBoneName> LimbName);
	void ForceKnifingEntryAngle();
	void ExitKnifingUnderwater();
	void EvolutionAbilityActivatedEvent(Maneater_EEvolutionSetType SetType);
	void EnterKnifingFromUnderwater();
	void EnterKnifingFromBreach();
	void EndWhipshotSlomo(int idx, int PageCount);
	void ChunkLastVictim();
	bool AttemptFastTravel(class AActor* Dest);
	void ApplyEvolutionMaterial();
	void ActivateMutagenScale(class UParticleSystem* ParticleToPlay, struct FName* SocketToAttach);
	void ActionModeUpdated_BP(TEnumAsByte<Maneater_ECharacterActionMode> NewActionMode);
};

// Class Maneater.ME_InventoryActor
// 0x0170 (FullSize[0x2040] - InheritedSize[0x1ED0])
class AME_InventoryActor : public AME_PlayerSharkCharacter
{
public:
	class AME_PlayerSharkCharacter*                    OwningCharacter;                                           // 0x1ED0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_46MO[0xF0];                                    // 0x1ED8(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PupAnimInstance;                                           // 0x1FC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      TeenAnimInstance;                                          // 0x1FD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      AdultAnimInstance;                                         // 0x1FD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ElderAnimInstance;                                         // 0x1FE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      MegaAnimInstance;                                          // 0x1FE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     PupMeshLocation;                                           // 0x1FF0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     TeenMeshLocation;                                          // 0x1FFC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AdultMeshLocation;                                         // 0x2008(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     MegaMeshLocation;                                          // 0x2014(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ElderMeshLocation;                                         // 0x2020(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_INVL[0x4];                                     // 0x202C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneCaptureComponent2D*                    SceneCaptureComponent;                                     // 0x2030(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_77K5[0x8];                                     // 0x2038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_InventoryActor");
		return ptr;
	}



	void SetSharkEvolutionVisuals(TMap<Maneater_EEvolutionSlot, class UME_PlayerEvolution*>* EquippedEvolutionMap);
	void SetPlayerSharkCharacter(class AME_PlayerSharkCharacter* Character);
};

// Class Maneater.ME_InWorldWidgetCreator
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AME_InWorldWidgetCreator : public AActor
{
public:
	unsigned char                                      UnknownData_FNZR[0x9];                                     // 0x0220(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_EObjectiveType                            RelatedObjectiveType;                                      // 0x0229(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRegisterWithSonarManager;                                 // 0x022A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ACUL[0x5];                                     // 0x022B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_InWorldWidgetCreator");
		return ptr;
	}



	void SetActiveIndexFromObjective(class UME_PlayerObjective* PlayerObjective);
	void OnViewControllerVisibilityChanged(UMG_ESlateVisibility ControllerVisibility);
};

// Class Maneater.ME_LandmarkObjective
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class AME_LandmarkObjective : public AActor
{
public:
	unsigned char                                      UnknownData_EMMB[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBillboardComponent*                         Billboard;                                                 // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               Box;                                                       // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                             ParticleSpawnLocation;                                     // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPointLightComponent*                        PointLight;                                                // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistanceVisible;                                        // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsAboveWater;                                              // 0x024C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsActive;                                                 // 0x024D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDiscovered;                                             // 0x024E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JW0G[0x1];                                     // 0x024F(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_LandmarkObjective");
		return ptr;
	}



	void OnDiscoveredSet(bool bNewDiscoveredSetting);
	class AME_DestructibleActor* GetAssociatedSign();
};

// Class Maneater.ME_MapWidgetInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_MapWidgetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_MapWidgetInterface");
		return ptr;
	}



	bool ShouldClampToEdgeOfMap();
	void OnWidgetMouseDown(class UUserWidget* Widget, const struct FPointerEvent& MouseEvent);
	UMG_ESlateVisibility GetMapWidgetVisibility();
	struct FVector2D GetMapWidgetSize();
	int GetMapWidgetPriority();
	class UMaterialInterface* GetMapWidgetMaterial();
	class UTexture2D* GetMapWidgetIcon();
	bool GetMapWidgetEnabled();
	struct FText GetMapDisplayName();
	struct FText GetMapDescriptionText();
};

// Class Maneater.ME_MercunaNavigableInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_MercunaNavigableInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_MercunaNavigableInterface");
		return ptr;
	}



};

// Class Maneater.ME_MercunaNavigationComponent
// 0x0018 (FullSize[0x0148] - InheritedSize[0x0130])
class UME_MercunaNavigationComponent : public UMercunaNavigationComponent
{
public:
	unsigned char                                      UnknownData_8RJ1[0x18];                                    // 0x0130(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_MercunaNavigationComponent");
		return ptr;
	}



};

// Class Maneater.ME_MercunaNavOctree
// 0x0008 (FullSize[0x02C0] - InheritedSize[0x02B8])
class AME_MercunaNavOctree : public AMercunaNavOctree
{
public:
	bool                                               bBoatOctree;                                               // 0x02B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6A4D[0x7];                                     // 0x02B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_MercunaNavOctree");
		return ptr;
	}



	bool IsBoatOctree();
};

// Class Maneater.ME_MercunaNavVolume
// 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
class AME_MercunaNavVolume : public AMercunaNavVolume
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_MercunaNavVolume");
		return ptr;
	}



	bool IsBoatVolume();
};

// Class Maneater.ME_MercunaObstacleComponent
// 0x0000 (FullSize[0x0200] - InheritedSize[0x0200])
class UME_MercunaObstacleComponent : public UMercunaObstacleComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_MercunaObstacleComponent");
		return ptr;
	}



};

// Class Maneater.MontageInstance
// 0x00D8 (FullSize[0x0100] - InheritedSize[0x0028])
class UMontageInstance : public UObject
{
public:
	TArray<struct FMontageEntry>                       MontagesToPlay;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayRate;                                                  // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SectionName;                                               // 0x003C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopMontageOnHit;                                         // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_159Y[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StopMontageBlendOutTime;                                   // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopMontageOnExitWater;                                   // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BJDE[0x3];                                     // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bShouldStopMovement : 1;                                   // 0x0050(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bShouldStopRotation : 1;                                   // 0x0050(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TW5K[0x3];                                     // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bSwitchToFlying;                                           // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LD30[0x3];                                     // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HomingRotationSpeed;                                       // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RootMotionScale;                                           // 0x005C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseRootMotionDistance;                                    // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4FGS[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              HitEffectClasses;                                          // 0x0070(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              GameplayEffectClassesWhileAnimating;                       // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttachedAudioEvent                         MontageStartedSound;                                       // 0x0090(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttachedAudioEvent                         MontageEndedSound;                                         // 0x00A0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UCameraAnim*                                 CamAnim;                                                   // 0x00B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GJ9D[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CamRate;                                                   // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CamBlendInTime;                                            // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CamBlendOutTime;                                           // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CamScale;                                                  // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLoop;                                                     // 0x00D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DD9X[0x3];                                     // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LoopDuration;                                              // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WakeUpSectionName;                                         // 0x00E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4JTM[0x18];                                    // 0x00E8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MontageInstance");
		return ptr;
	}



};

// Class Maneater.WildlifeMontageInstance
// 0x0068 (FullSize[0x0168] - InheritedSize[0x0100])
class UWildlifeMontageInstance : public UMontageInstance
{
public:
	bool                                               bIsLunge;                                                  // 0x0100(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDynamicLungeDistance;                                  // 0x0101(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CSHL[0x2];                                     // 0x0102(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DynamicLungeDistance;                                      // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bContinueToHoneIn;                                         // 0x0108(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NGLB[0x3];                                     // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DropFocusRange;                                            // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSuccessfulAttackWithVictim;                               // 0x0110(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9U54[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMontageInstanceEntry>               LungeSuccessful;                                           // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMontageInstanceEntry>               LungeMissed;                                               // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              GameplayEffectsOnLungeSuccess;                             // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              GameplayEffectsOnLungeMissed;                              // 0x0148(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              GameplayEffectsOnLungeCompletedAndMissed;                  // 0x0158(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.WildlifeMontageInstance");
		return ptr;
	}



};

// Class Maneater.DirectionalMontageInstance
// 0x0010 (FullSize[0x0178] - InheritedSize[0x0168])
class UDirectionalMontageInstance : public UWildlifeMontageInstance
{
public:
	TArray<struct FDirectionalLunges>                  DirectionalMontagesToPlay;                                 // 0x0168(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.DirectionalMontageInstance");
		return ptr;
	}



};

// Class Maneater.ME_NavigationSystem
// 0x0050 (FullSize[0x0588] - InheritedSize[0x0538])
class UME_NavigationSystem : public UNavigationSystemV1
{
public:
	class UME_PathRequestQueue*                        PathRequestQueue;                                          // 0x0538(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IHLG[0x48];                                    // 0x0540(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_NavigationSystem");
		return ptr;
	}



};

// Class Maneater.ME_NutrientCache
// 0x0090 (FullSize[0x0370] - InheritedSize[0x02E0])
class AME_NutrientCache : public AME_ThrashableActor
{
public:
	unsigned char                                      UnknownData_IZ2X[0x8];                                     // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPhysicsStateChanged;                                     // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bCauseFluidDisturbance;                                    // 0x02F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDestroyOnDeath;                                           // 0x02F9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BLZX[0x6];                                     // 0x02FA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, int>                           FragmentTypes;                                             // 0x0300(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
	class UME_BuoyancyForceComponent*                  BuoyancyComponent;                                         // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_DistanceSignificanceComponent*           DistanceSignificanceComponent;                             // 0x0358(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RL6G[0x10];                                    // 0x0360(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_NutrientCache");
		return ptr;
	}



};

// Class Maneater.ME_NutrientCache_Skeletal
// 0x0000 (FullSize[0x0370] - InheritedSize[0x0370])
class AME_NutrientCache_Skeletal : public AME_NutrientCache
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_NutrientCache_Skeletal");
		return ptr;
	}



};

// Class Maneater.ME_NutrientCache_Static
// 0x0000 (FullSize[0x0370] - InheritedSize[0x0370])
class AME_NutrientCache_Static : public AME_NutrientCache
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_NutrientCache_Static");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveConditionBase
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UME_ObjectiveConditionBase : public UObject
{
public:
	struct FString                                     ActivityTaskId;                                            // 0x0028(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveConditionBase");
		return ptr;
	}



	bool ConditionIsValid(class AActor* WorldContextActor);
};

// Class Maneater.ME_ObjectiveCondition_GamePercentComplete
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_ObjectiveCondition_GamePercentComplete : public UME_ObjectiveConditionBase
{
public:
	float                                              RequiredPercentComplete;                                   // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerObjectiveManager>   ObjectiveManager;                                          // 0x003C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VG4M[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveCondition_GamePercentComplete");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveCondition_InfamyRank
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_ObjectiveCondition_InfamyRank : public UME_ObjectiveConditionBase
{
public:
	int                                                InfamyRank;                                                // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_BountyManager>            BountyManager;                                             // 0x003C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6XKR[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveCondition_InfamyRank");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveCondition_ObjectiveComplete
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_ObjectiveCondition_ObjectiveComplete : public UME_ObjectiveConditionBase
{
public:
	Maneater_EWorldRegion                              Region;                                                    // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EObjectiveType                            ObjectiveType;                                             // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8TRH[0x2];                                     // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumberToComplete;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerObjectiveManager>   ObjectiveManager;                                          // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveCondition_ObjectiveComplete");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveCondition_PlayerLevel
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_ObjectiveCondition_PlayerLevel : public UME_ObjectiveConditionBase
{
public:
	int                                                PlayerLevel;                                               // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerSharkCharacter>     PlayerShark;                                               // 0x003C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RABN[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveCondition_PlayerLevel");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveCondition_RegionPercentComplete
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_ObjectiveCondition_RegionPercentComplete : public UME_ObjectiveConditionBase
{
public:
	float                                              RequiredPercentComplete;                                   // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EWorldRegion                              Region;                                                    // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V7IT[0x3];                                     // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AME_PlayerObjectiveManager>   ObjectiveManager;                                          // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveCondition_RegionPercentComplete");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveCondition_SharkGrowthStageReached
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UME_ObjectiveCondition_SharkGrowthStageReached : public UME_ObjectiveConditionBase
{
public:
	TEnumAsByte<Maneater_EPlayerGrowthStage>           RequiredGrowthStage;                                       // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LKEE[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AME_PlayerSharkState>         SharkState;                                                // 0x003C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DFJ6[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveCondition_SharkGrowthStageReached");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveCondition_TutorialComplete
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UME_ObjectiveCondition_TutorialComplete : public UME_ObjectiveConditionBase
{
public:
	TWeakObjectPtr<class AME_TutorialManager>          TutorialManager;                                           // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveCondition_TutorialComplete");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveCondition_ManuallyAdvanceOnly
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UME_ObjectiveCondition_ManuallyAdvanceOnly : public UME_ObjectiveConditionBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveCondition_ManuallyAdvanceOnly");
		return ptr;
	}



};

// Class Maneater.ME_ObjectiveSpawnActor
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AME_ObjectiveSpawnActor : public AActor
{
public:
	unsigned char                                      UnknownData_3V0P[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveSpawnActor");
		return ptr;
	}



};

// Class Maneater.ME_OceanBloodDecal
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class AME_OceanBloodDecal : public AActor
{
public:
	float                                              TargetDecalScale;                                          // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetDecalOpacity;                                        // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentDecalOpacity;                                       // 0x0228(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B76B[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x0230(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PNYS[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OceanBloodDecal");
		return ptr;
	}



};

// Class Maneater.ME_OceanCameraMesh
// 0x0010 (FullSize[0x04B0] - InheritedSize[0x04A0])
class UME_OceanCameraMesh : public UStaticMeshComponent
{
public:
	Maneater_EOceanMeshVisibility                      MeshVisibility;                                            // 0x04A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PY1V[0x3];                                     // 0x04A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GridSnapSize;                                              // 0x04A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1NNC[0x8];                                     // 0x04A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OceanCameraMesh");
		return ptr;
	}



};

// Class Maneater.ME_OceanManager
// 0x01C0 (FullSize[0x03E0] - InheritedSize[0x0220])
class AME_OceanManager : public AActor
{
public:
	class APhysicsVolume*                              OceanPhysicsVolume;                                        // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SCIK[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    OceanSurfaceMaterialInstance;                              // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    OceanRoofMaterialInstance;                                 // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanCameraMesh*                         SurfaceComponentNear;                                      // 0x0240(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanCameraMesh*                         SurfaceComponentFar;                                       // 0x0248(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanCameraMesh*                         RoofComponentNear;                                         // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanCameraMesh*                         RoofComponentFar;                                          // 0x0258(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*                OceanMPC;                                                  // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollectionInstance*        OceanMPCInstance;                                          // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanPostProcessComponent*               PostProcessComponent;                                      // 0x0270(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   GlobalWaveDirection;                                       // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GlobalWaveSpeed;                                           // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GlobalWaveAmplitude;                                       // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceCheck;                                             // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7S56[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FWaveParameter>                      WaveClusters;                                              // 0x0290(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWaveSetParameters>                  WaveSetOffsetsOverride;                                    // 0x02A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HVEE[0x10];                                    // 0x02B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ChoppyWaveSize;                                            // 0x02C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChoppyWaveSpeed;                                           // 0x02C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChoppyWaveHeight;                                          // 0x02C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaveChoppinessBias;                                        // 0x02CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   WaveChoppinessDimensions;                                  // 0x02D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  WaveChoppinessTexture;                                     // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<unsigned char>                              WaveChoppinessPixels;                                      // 0x02E0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   WaveModulationMapDimensions;                               // 0x02F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ModulationPower;                                           // 0x02F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumModulation;                                         // 0x02FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  WaveModulationTexture;                                     // 0x0300(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<unsigned char>                              WaveModulationPixels;                                      // 0x0308(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FluidUpdateRate;                                           // 0x0318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FluidSurfaceResolution;                                    // 0x031C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Engine_ETextureRenderTargetFormat>     FluidSimRenderTargetFormat;                                // 0x0320(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Engine_ETextureRenderTargetFormat>     FluidNormalsRenderTargetFormat;                            // 0x0321(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1CGS[0x6];                                     // 0x0322(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          FluidRippleSplatMaterial;                                  // 0x0328(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    FluidRippleSplatMID;                                       // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          FluidSimMaterial;                                          // 0x0338(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          FluidColorSplatMaterial;                                   // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    FluidColorSplatMID;                                        // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          FluidNormalMaterial;                                       // 0x0350(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*                FluidParameters;                                           // 0x0358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                      FluidHeight0;                                              // 0x0360(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                      FluidHeight1;                                              // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                      FluidHeight2;                                              // 0x0370(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                      FluidHeightNormalRT;                                       // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFluidSimNeedsClear;                                       // 0x0380(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BL69[0x7];                                     // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    FluidSimMID;                                               // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    FluidComputeNormalMID;                                     // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnoreDistantDisturbances;                                // 0x0398(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ODJM[0x3];                                     // 0x0399(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FluidHeightState;                                          // 0x039C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7X5X[0x18];                                    // 0x03A0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FluidSimSizeInWorld;                                       // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7PRG[0x1C];                                    // 0x03BC(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bTwTranslucencySortingEnabled;                             // 0x03D8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4EUR[0x7];                                     // 0x03D9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OceanManager");
		return ptr;
	}



	bool IsUnderwater(const struct FVector& InLocation);
	float GetWaveModulationAtLocation(const struct FVector& Location);
	class UTextureRenderTarget2D* GetFluidHeightRT(int Index);
	void CauseFluidDisturbance(const struct FVector& DisturbanceOrigin, float DisturbanceRadius, float DisturbanceIntensity, Maneater_EFluidEffectType EffectType);
};

// Class Maneater.ME_OceanPhysicsVolume
// 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
class AME_OceanPhysicsVolume : public APhysicsVolume
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OceanPhysicsVolume");
		return ptr;
	}



};

// Class Maneater.ME_OceanPostProcessComponent
// 0x0010 (FullSize[0x0760] - InheritedSize[0x0750])
class UME_OceanPostProcessComponent : public UPostProcessComponent
{
public:
	TWeakObjectPtr<class AME_OceanManager>             OceanManager;                                              // 0x0750(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HPR6[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OceanPostProcessComponent");
		return ptr;
	}



};

// Class Maneater.ME_OceanSurfaceEmitter
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class AME_OceanSurfaceEmitter : public AEmitter
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OceanSurfaceEmitter");
		return ptr;
	}



};

// Class Maneater.ME_OceanSurfaceParticleSystemComponent
// 0x0094 (FullSize[0x0710] - InheritedSize[0x067C])
class UME_OceanSurfaceParticleSystemComponent : public UParticleSystemComponent
{
public:
	struct FVector                                     OverrideVelocity;                                          // 0x067C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldOverrideIntensity;                                  // 0x0688(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IIK4[0x3];                                     // 0x0689(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverrideIntensity;                                         // 0x068C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCalculateSurfaceNormal;                                   // 0x0690(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5WDI[0x3];                                     // 0x0691(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     SurfaceNormal;                                             // 0x0694(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaveModulation;                                            // 0x06A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EBQP[0x6C];                                    // 0x06A4(0x006C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OceanSurfaceParticleSystemComponent");
		return ptr;
	}



	void SetWakeLowSize(float NewSize);
	void SetWakeLowColor(const struct FVector& NewColor);
	void SetWakeLowAlpha(float NewAlpha);
	float GetWakeLowSize();
	struct FVector GetWakeLowColor();
	float GetWakeLowAlpha();
};

// Class Maneater.ME_OceanTileComponent
// 0x0000 (FullSize[0x0640] - InheritedSize[0x0640])
class UME_OceanTileComponent : public UHierarchicalInstancedStaticMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OceanTileComponent");
		return ptr;
	}



};

// Class Maneater.ME_OverlapDamageProjectile
// 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
class AME_OverlapDamageProjectile : public AActor
{
public:
	float                                              DamageRadius;                                              // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_26NK[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    ProjectileParticleComponent;                               // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProjectileMovementComponent*                ProjectileMovement;                                        // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              DamageEffects;                                             // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              HitActors;                                                 // 0x0248(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ProjectileDamageNoise;                                     // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XH82[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_OverlapDamageProjectile");
		return ptr;
	}



};

// Class Maneater.ME_ParticleModuleManeaterBase
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UME_ParticleModuleManeaterBase : public UParticleModule
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ParticleModuleManeaterBase");
		return ptr;
	}



};

// Class Maneater.ME_ParticleModuleDetachFromOwner
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UME_ParticleModuleDetachFromOwner : public UME_ParticleModuleManeaterBase
{
public:
	struct FRawDistributionFloat                       TimeToDetach;                                              // 0x0030(0x0030) (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ParticleModuleDetachFromOwner");
		return ptr;
	}



};

// Class Maneater.ME_ParticleModuleDynamiclyEnabled
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UME_ParticleModuleDynamiclyEnabled : public UME_ParticleModuleManeaterBase
{
public:
	bool                                               bCanSpawnAboveWater;                                       // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanSpawnBelowWater;                                       // 0x0031(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckOnSpawnOnly;                                         // 0x0032(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6UBL[0xD];                                     // 0x0033(0x000D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ParticleModuleDynamiclyEnabled");
		return ptr;
	}



};

// Class Maneater.ME_ParticleModuleDynamicTranslucencySort
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UME_ParticleModuleDynamicTranslucencySort : public UME_ParticleModuleManeaterBase
{
public:
	int                                                TranslucencySortValueAboveWater;                           // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TranslucencySortValueBelowWater;                           // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ParticleModuleDynamicTranslucencySort");
		return ptr;
	}



};

// Class Maneater.ME_ParticleModuleFishball
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UME_ParticleModuleFishball : public UME_ParticleModuleManeaterBase
{
public:
	class UAkAudioEvent*                               DisperseAkEvent;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_57ZY[0x50];                                    // 0x0038(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ParticleModuleFishball");
		return ptr;
	}



};

// Class Maneater.ME_ParticleModuleFluidEffect
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UME_ParticleModuleFluidEffect : public UParticleModuleColorBase
{
public:
	Maneater_EFluidEffectType                          FluidEffectType;                                           // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2Y7W[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EffectStrength;                                            // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EffectRadiusScale;                                         // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxEffectsPerUpdate;                                       // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ParticleModuleFluidEffect");
		return ptr;
	}



};

// Class Maneater.ME_ParticleModuleSortValue
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UME_ParticleModuleSortValue : public UME_ParticleModuleManeaterBase
{
public:
	int                                                TranslucencySortValue;                                     // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PXQ4[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ParticleModuleSortValue");
		return ptr;
	}



};

// Class Maneater.ME_WeaponComponent
// 0x0240 (FullSize[0x06E0] - InheritedSize[0x04A0])
class UME_WeaponComponent : public UStaticMeshComponent
{
public:
	Maneater_EWeaponType                               WeaponType;                                                // 0x04A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X8R4[0x3];                                     // 0x04A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MuzzleSocketName;                                          // 0x04A4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EjectionPortSocketName;                                    // 0x04AC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasFiringAnimNotify;                                      // 0x04B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideMeshDuringReload;                                     // 0x04B5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4FU9[0x2];                                     // 0x04B6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FireRate;                                                  // 0x04B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadTime;                                                // 0x04BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ShotsPerMagazine;                                          // 0x04C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Range;                                                     // 0x04C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Damage;                                                    // 0x04C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Spread;                                                    // 0x04CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ProjectileAdditiveImpulse;                                 // 0x04D0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileFireForce;                                       // 0x04DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, int>                           WeaponProjectiles;                                         // 0x04E0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                                   TargetingDelay;                                            // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LaserTrackingSpeed;                                        // 0x0538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LaserLockOnThresholdDist;                                  // 0x053C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeUntilFullLaserLock;                                    // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBeforeLaserLockLost;                                   // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumTargetVelocity;                                     // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumVelocityExceededTime;                               // 0x054C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEvadeBreaksLock;                                          // 0x0550(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3RX5[0x3];                                     // 0x0551(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaximumEvadedTime;                                         // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLockOnPreventsEvade;                                      // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H11I[0x3];                                     // 0x0559(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BaseTargetingCircleScale;                                  // 0x055C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetingPctConsideredLocked;                              // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasLoopingFireSound;                                      // 0x0564(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOneFireSoundPerReload;                                    // 0x0565(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2JUE[0x2];                                     // 0x0566(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               FireSound_Looping;                                         // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopFiringSound;                                           // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FireSound;                                                 // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     RTPCLockOnTimeName;                                        // 0x0580(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LockOnSound;                                               // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ReloadSound;                                               // 0x0598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             MuzzleFlash;                                               // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ShellCasingMesh;                                           // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             LaserPointerBeamParticle;                                  // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             LaserPointerDotParticle;                                   // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     LaserPointerBeamParticleComponent;                         // 0x05C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent>     LaserPointerDotParticleComponent;                          // 0x05C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPassengerPropSetup>                 AnimationSets;                                             // 0x05D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDiverPropSetup>                     DiverSets;                                                 // 0x05E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A2BC[0x18];                                    // 0x05F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                MeleeAttackCooldownTimer;                                  // 0x0608(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UME_AnimInstance_HumanNPC>    CastAnimBP;                                                // 0x0610(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EAttachmentBone                           AttachmentBone;                                            // 0x0618(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D2TM[0xB];                                     // 0x0619(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MeleeAttackDistance;                                       // 0x0624(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimMontage*>                        MeleeAttackAnimations;                                     // 0x0628(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeleeDelayTime;                                            // 0x0638(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ODHO[0x24];                                    // 0x063C(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinFireForce;                                              // 0x0660(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxFireForce;                                              // 0x0664(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FireForceScale;                                            // 0x0668(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RandomFiringOffset;                                        // 0x066C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NMCK[0x4C];                                    // 0x0670(0x004C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanPredictTargetMovement;                                 // 0x06BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_58GD[0x3];                                     // 0x06BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimPredictionMultiplier;                                   // 0x06C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AME_Character>                MECharacterOwner;                                          // 0x06C4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AME_Character>                TargetedActor;                                             // 0x06CC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MeleeAttackCooldown;                                       // 0x06D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K2BI[0x8];                                     // 0x06D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WeaponComponent");
		return ptr;
	}



	void StartAttackCooldown(float CooldownDuration);
	void SetShowLaserPointer(bool bShowPointer, bool bResetTargeting, float CustomLockOnStartTime);
	void ResetLaserTargeting();
	void PerformFire(const struct FVector& AimDirection, bool bViaAnimNotify);
	void OnMeleeAttackCooldownTimerFinished();
	bool IsCooldownActive();
	bool HasLaserLock();
	bool HasLaser();
	class UME_WeaponComponent* STATIC_GetWeapon(class USkeletalMeshComponent* Owner);
	class AME_Character* GetTargetedActor();
	struct FVector GetLaserAimDir();
	void Fire(const struct FVector& AimDirection, bool bViaAnimNotify);
	void Drop();
};

// Class Maneater.ME_PassengerAttachment
// 0x0000 (FullSize[0x06E0] - InheritedSize[0x06E0])
class UME_PassengerAttachment : public UME_WeaponComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PassengerAttachment");
		return ptr;
	}



};

// Class Maneater.ME_PathFollowingComponent
// 0x0020 (FullSize[0x0278] - InheritedSize[0x0258])
class UME_PathFollowingComponent : public UPathFollowingComponent
{
public:
	unsigned char                                      UnknownData_VP5C[0x20];                                    // 0x0258(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PathFollowingComponent");
		return ptr;
	}



};

// Class Maneater.ME_PathRequestQueue
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UME_PathRequestQueue : public UObject
{
public:
	struct FTimerHandle                                DecayQueueHandle;                                          // 0x0028(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPathQueueEntry>                     PathRequestQueue;                                          // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PathRequestQueue");
		return ptr;
	}



	void DecayQueue();
};

// Class Maneater.ME_PathWisp
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AME_PathWisp : public AActor
{
public:
	class USphereComponent*                            WispHead;                                                  // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PathWisp");
		return ptr;
	}



};

// Class Maneater.ME_PawnSpawnInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_PawnSpawnInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PawnSpawnInterface");
		return ptr;
	}



};

// Class Maneater.ME_PhysicalImpactResponse
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UME_PhysicalImpactResponse : public UObject
{
public:
	int                                                GlobalLimit;                                               // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PerObjectLimit;                                            // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bProcessScrapes;                                           // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K7W7[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ScrapeAngle;                                               // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LMDA[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PhysicalImpactResponse");
		return ptr;
	}



	class AME_GameMode* GetManeaterGameMode();
	struct FImpactEffect GetImpactEffects(TEnumAsByte<Engine_EPhysicalSurface> ImpactingSurface, bool bUnderwater, bool bScrape);
};

// Class Maneater.ME_PhysicalMaterial
// 0x0008 (FullSize[0x0088] - InheritedSize[0x0080])
class UME_PhysicalMaterial : public UPhysicalMaterial
{
public:
	class UClass*                                      ImpactResponse;                                            // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PhysicalMaterial");
		return ptr;
	}



};

// Class Maneater.ME_PlayerCameraManager
// 0x0030 (FullSize[0x2770] - InheritedSize[0x2740])
class AME_PlayerCameraManager : public APlayerCameraManager
{
public:
	unsigned char                                      UnknownData_NR4X[0x8];                                     // 0x2740(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               CameraEnterWaterSound;                                     // 0x2748(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CameraExitWaterSound;                                      // 0x2750(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_TransparencyCaptureComponent*            TransparencyCaptureComponent;                              // 0x2758(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DG8Y[0x10];                                    // 0x2760(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerCameraManager");
		return ptr;
	}



};

// Class Maneater.ME_PlayerEvolution
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UME_PlayerEvolution : public UDataAsset
{
public:
	struct FText                                       EvolutionName;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       EvolutionDescription;                                      // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPlayerGrowthStage>           MinGrowthStageRequirement;                                 // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_02RY[0x7];                                     // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<Maneater_EEvolutionSlot>                    AssociatedSlots;                                           // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EEvolutionSetType                         EvolutionSetType;                                          // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               GrantsAbility;                                             // 0x0079(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6QBR[0x6];                                     // 0x007A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  AbilityIcon;                                               // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       AbilityName;                                               // 0x0088(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       AbilityDescription;                                        // 0x00A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FEvolutionVisualEffect                      EquippedVFX;                                               // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  EvolutionIcon;                                             // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEvolutionEffects>                   EvolutionGameplayEffects;                                  // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEvolutionUpgradePrice>              EvolutionUpgradePrices;                                    // 0x00E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerEvolution");
		return ptr;
	}



	TArray<struct FEvolutionDisplayStat> STATIC_GetDisplayStatsForEvolution(float EffectiveLevel, class UME_PlayerEvolution* Evolution, Maneater_EEvolutionRarity eRarity);
};

// Class Maneater.ME_PlayerObjective
// 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
class UME_PlayerObjective : public UObject
{
public:
	unsigned char                                      UnknownData_VXPD[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UME_ObjectiveConditionBase*>          AvailableConditions;                                       // 0x0038(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanSaveGame;                                              // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NKIT[0x7];                                     // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDataTableRowHandle                         NutritionTableRow;                                         // 0x0050(0x0010) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	Maneater_EObjectiveType                            Type;                                                      // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7NDY[0x7];                                     // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Name;                                                      // 0x0068(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FText                                       Description;                                               // 0x0080(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FText                                       ShortDescription;                                          // 0x0098(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FText                                       SubtitleText;                                              // 0x00B0(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FString                                     ActivityTaskId;                                            // 0x00C8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EObjectiveState                           State;                                                     // 0x00D8(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EWorldRegion                              AssignedRegion;                                            // 0x00D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R6ST[0x2];                                     // 0x00DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CompletionPoints;                                          // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       StartNarratorEventName;                                    // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       FinishNarratorEventName;                                   // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStoryObjective;                                           // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BVWO[0x7];                                     // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  ObjectiveImage;                                            // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AudioLog;                                                  // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAutoTrack;                                                // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTracked;                                                  // 0x0109(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2D8W[0x6];                                     // 0x010A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_InWorldWidgetCreator*                    OutOfRegionWidget;                                         // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjective");
		return ptr;
	}



	void SetObjectiveState(Maneater_EObjectiveState NewState, bool bTriggeredFromLoad, class AActor* WorldContextActor);
	void OnGateActivated(class AActor* ActivatedGate);
	bool IsStoryObjective();
	bool IsComplete();
	bool IsAssociatedWithActor(class AActor* Actor);
	void InitObjectiveFromSave();
	float GetTotalProgressPoints();
	struct FText GetSubtitleText();
	struct FText GetShortObjectiveDescription();
	struct FText GetProgressText();
	Maneater_EObjectiveType GetObjectiveType();
	Maneater_EObjectiveState GetObjectiveState();
	struct FDataTableRowHandle GetObjectiveRewardsHandle();
	struct FText GetObjectiveName();
	class UTexture2D* GetObjectiveImage();
	struct FText GetObjectiveDescription();
	TArray<struct FVector> GetMapLocators();
	float GetCurrentProgressPoints();
	float GetCompletionPercentage();
	Maneater_EWorldRegion GetAssignedRegion();
	void Cheat_ResetObjective();
	void Cheat_ProgressObjective(int Increment);
	void Cheat_LogObjective();
	void Cheat_CompleteObjective();
};

// Class Maneater.ME_ObjectCollectObjective
// 0x0028 (FullSize[0x0140] - InheritedSize[0x0118])
class UME_ObjectCollectObjective : public UME_PlayerObjective
{
public:
	TArray<Maneater_EObjectiveProgressState>           SubObjectiveStates;                                        // 0x0118(0x0010) (ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                             SubObjectivePositions;                                     // 0x0128(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TrackedIndex;                                              // 0x0138(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZPHY[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectCollectObjective");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveLandmark
// 0x0010 (FullSize[0x0150] - InheritedSize[0x0140])
class UME_PlayerObjectiveLandmark : public UME_ObjectCollectObjective
{
public:
	TArray<struct FLandmarkSubObject>                  RequiredActors;                                            // 0x0140(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveLandmark");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveNutrientCache
// 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
class UME_PlayerObjectiveNutrientCache : public UME_ObjectCollectObjective
{
public:
	unsigned char                                      NutrientCaches[0x10];                                      // 0x0140(0x0010) UNKNOWN PROPERTY: ArrayProperty
	int                                                NumCachesToTriggerObjective;                               // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F6C4[0x4];                                     // 0x0154(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveNutrientCache");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveCollectable
// 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
class UME_PlayerObjectiveCollectable : public UME_ObjectCollectObjective
{
public:
	unsigned char                                      AllCollectables[0x10];                                     // 0x0140(0x0010) UNKNOWN PROPERTY: ArrayProperty
	int                                                NumCollectablesToTriggerObjective;                         // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G9JK[0x4];                                     // 0x0154(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveCollectable");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveGrates
// 0x0010 (FullSize[0x0150] - InheritedSize[0x0140])
class UME_PlayerObjectiveGrates : public UME_ObjectCollectObjective
{
public:
	unsigned char                                      AllGrates[0x10];                                           // 0x0140(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveGrates");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveGates
// 0x0010 (FullSize[0x0150] - InheritedSize[0x0140])
class UME_PlayerObjectiveGates : public UME_ObjectCollectObjective
{
public:
	unsigned char                                      AllGates[0x10];                                            // 0x0140(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveGates");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveCustom
// 0x0028 (FullSize[0x0140] - InheritedSize[0x0118])
class UME_PlayerObjectiveCustom : public UME_PlayerObjective
{
public:
	unsigned char                                      AssociatedActor[0x28];                                     // 0x0118(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveCustom");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveGrotto
// 0x0030 (FullSize[0x0148] - InheritedSize[0x0118])
class UME_PlayerObjectiveGrotto : public UME_PlayerObjective
{
public:
	unsigned char                                      AssociatedGrotto[0x28];                                    // 0x0118(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FVector2D                                   GrottoPosition;                                            // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveGrotto");
		return ptr;
	}



	void GetAssociatedGrotto();
};

// Class Maneater.ME_PlayerObjectiveCutscene
// 0x0048 (FullSize[0x0160] - InheritedSize[0x0118])
class UME_PlayerObjectiveCutscene : public UME_PlayerObjective
{
public:
	unsigned char                                      CutsceneWidgetActor[0x28];                                 // 0x0118(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FVector                                     CutscenePosition;                                          // 0x0140(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TriggerDistance;                                           // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       LevelCinematicName;                                        // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEndBountyWhenTriggered;                                   // 0x0158(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LVSX[0x7];                                     // 0x0159(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveCutscene");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveBoss
// 0x0030 (FullSize[0x0190] - InheritedSize[0x0160])
class UME_PlayerObjectiveBoss : public UME_PlayerObjectiveCutscene
{
public:
	class UClass*                                      BossBoatClass;                                             // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AME_BoatPawn>                 BossBoat;                                                  // 0x0168(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EBossFightSequence                        BossFightSequence;                                         // 0x0170(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ARFE[0x7];                                     // 0x0171(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       BossAnnouncementText;                                      // 0x0178(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveBoss");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveDestroyThrashable
// 0x0020 (FullSize[0x0138] - InheritedSize[0x0118])
class UME_PlayerObjectiveDestroyThrashable : public UME_PlayerObjective
{
public:
	struct FVector                                     SpawnPosition;                                             // 0x0118(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LW6V[0x4];                                     // 0x0124(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SpawnClass;                                                // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AME_ThrashableActor>          SpawnedActor;                                              // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveDestroyThrashable");
		return ptr;
	}



};

// Class Maneater.ME_StoryEvent
// 0x00C8 (FullSize[0x00F0] - InheritedSize[0x0028])
class UME_StoryEvent : public UObject
{
public:
	TArray<class UME_ObjectiveConditionBase*>          ConditionsToActivate;                                      // 0x0028(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BossBoatClass;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_BoatPawn>                 BossBoat;                                                  // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     BossAnnouncementText;                                      // 0x0048(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              EnemiesToSpawn;                                            // 0x0058(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LevelCinematicName;                                        // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseTriggerLocation;                                       // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BO42[0x3];                                     // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     TriggerLocation;                                           // 0x0074(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TriggerDistance;                                           // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasTriggered;                                             // 0x0084(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z4U5[0x3];                                     // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DelayBeforeTriggering;                                     // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZQME[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       EventTitle;                                                // 0x0090(0x0018) (Edit, NativeAccessSpecifierPublic)
	int                                                EpisodeNumber;                                             // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F78W[0x4];                                     // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ActivityId;                                                // 0x00B0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     GrottoActivityId;                                          // 0x00C0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             ActivityIdsUsedBeforeGrotto;                               // 0x00D0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             UnusedActivityIdsForEpisode;                               // 0x00E0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_StoryEvent");
		return ptr;
	}



};

// Class Maneater.ME_RegionObjectiveCollection
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UME_RegionObjectiveCollection : public UObject
{
public:
	TArray<class UME_PlayerObjective*>                 Objectives;                                                // 0x0028(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EWorldRegion                              Region;                                                    // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3E8Z[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_RegionObjectiveCollection");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveManager
// 0x0200 (FullSize[0x0420] - InheritedSize[0x0220])
class AME_PlayerObjectiveManager : public AActor
{
public:
	TWeakObjectPtr<class AME_GameMode>                 OwningGameMode;                                            // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RXPH[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_EBossFightSequence                        LastBossKilled;                                            // 0x0230(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LH4X[0x3];                                     // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PoisonBeginStoryIndex;                                     // 0x0234(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ObjectiveCompleteDelegate;                                 // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    LandmarkFoundDelegate;                                     // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ObjectiveStartedDelegate;                                  // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ObjectiveUpdatedDelegate;                                  // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBossFightAvailableDelegate;                              // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNutrientCacheDestroyed;                                  // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ObjectiveStateChangedDelegate;                             // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ObjectiveDiscoveredDelegate;                               // 0x02A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ObjectiveTrackDelegate;                                    // 0x02B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ObjectiveFirstBossDelegate;                                // 0x02C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    StoryEventProgressDelegate;                                // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AdvancedToNextEpisodeDelegate;                             // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    NewQuestAvailableChangedDelegate;                          // 0x02F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    HUDErrorMessageDelegate;                                   // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AME_InWorldWidgetCreator>> AllInWorldWidgets;                                         // 0x0318(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              Regions;                                                   // 0x0328(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E2VX[0x10];                                    // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UME_PlayerObjective*>                 AllObjectives;                                             // 0x0348(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_PlayerObjective*>                 UnavailableObjectives;                                     // 0x0358(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_PlayerObjective*>                 AvailableObjectives;                                       // 0x0368(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_PlayerObjective*>                 CompletedObjectives;                                       // 0x0378(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_PlayerObjective*>                 TickedObjectives;                                          // 0x0388(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_StoryEvent*>                      StoryEvents;                                               // 0x0398(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ActiveStoryIndex;                                          // 0x03A8(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                StoryEventConditionsComplete;                              // 0x03AC(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bNewQuestsAvailable;                                       // 0x03B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_411P[0x3];                                     // 0x03B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       ScalyPeteBoat;                                             // 0x03B4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S1HL[0x4];                                     // 0x03BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FConditionStatus>                    CachedConditionResults;                                    // 0x03C0(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0IZF[0x28];                                    // 0x03D0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_InWorldWidgetCreator*                    PlayerWaypoint;                                            // 0x03F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PlayerWaypointClass;                                       // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    WorldMarkerPSC;                                            // 0x0408(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             WorldMarkerParticleSystem;                                 // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      OutOfRegionWidgetClass;                                    // 0x0418(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveManager");
		return ptr;
	}



	void TutorialFinished();
	void SetObjectState(class AActor* FoundActor, Maneater_EObjectiveProgressState eState);
	void SetCustomObjectiveState(Maneater_EObjectiveState NewState, class AActor* AssociatedActor);
	void OnRegionChanged(Maneater_EWorldRegion Region, class UTexture2D* RegionIcon);
	void OnPlayerLevelChanged(int NewGrowthLevel, bool bChangeFromTheoretical);
	void OnInfamyRankUp(int Rank);
	void OnGrowthStageChanged(TEnumAsByte<Maneater_EPlayerGrowthStage> OldGrowthStage, TEnumAsByte<Maneater_EPlayerGrowthStage> NewGrowthStage, bool bReinitPose);
	void OnGrottoEntered(class AME_Grotto* ME_Grotto);
	void OnGateActivated(class AActor* ActivatedGate);
	void ObjectUnloaded(class AActor* UnloadedActor);
	void ObjectLoaded(class AActor* LoadedActor);
	void LandmarkObjectBitten(class AActor* LandmarkActor);
	void GetStoryConditionStatus(TArray<struct FConditionStatus>* ConditionResults);
	float GetRegionPercentComplete(Maneater_EWorldRegion Region);
	Maneater_EObjectiveProgressState GetObjectState(class AActor* FoundActor);
	class UME_PlayerObjective* GetObjectiveFromActor(class AActor* SearchingActor, Maneater_EObjectiveType FilterType);
	class UME_PlayerObjective* GetObjectiveByName(const struct FText& SearchName);
	float GetGamePercentComplete();
	int GetCurrentStoryIndex();
	void DelayedBossFightAvailableBroadcast(class UME_PlayerObjectiveBoss* BossObjective);
	void CheckNextStoryEvent();
	void Cheat_ResetObjective(const struct FName& ObjName);
	void Cheat_ProgressObjective(const struct FName& ObjName, int Increment);
	void Cheat_CompleteObjective(const struct FName& ObjName);
	void AdvanceToNextStoryEvent();
};

// Class Maneater.ME_PlayerSharkController
// 0x00D8 (FullSize[0x0650] - InheritedSize[0x0578])
class AME_PlayerSharkController : public APlayerController
{
public:
	unsigned char                                      UnknownData_I90K[0x8];                                     // 0x0578(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               PauseAllAudio;                                             // 0x0580(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ResumeAllAudio;                                            // 0x0588(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAIProximityCache>                   NearbyAIs;                                                 // 0x0590(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFirstPossession;                                          // 0x05A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y0VG[0x7];                                     // 0x05A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_WorldMapWidget*                          WorldMapWidget;                                            // 0x05A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7MSF[0x28];                                    // 0x05B0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCinematicModeChanged;                                    // 0x05D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2JQI[0x18];                                    // 0x05E8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               BeachCrowdAsset;                                           // 0x0600(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                                BeachCrowdComponent;                                       // 0x0608(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDebugCrowdPosition;                                       // 0x0610(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X04I[0x3];                                     // 0x0611(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     PreviousAveragedPosition;                                  // 0x0614(0x000C) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrowdPositionInterpSpeed;                                  // 0x0620(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HighestHumanAlertLevel;                                    // 0x0624(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7JJD[0x28];                                    // 0x0628(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerSharkController");
		return ptr;
	}



	void SetHUDVisibilityChanged(bool bVisible);
	void ReceivePostInitializeComponents();
	void OnRevealMap(const struct FVector& MapLocation, float Radius, float Intensity);
	void OnPossessedPawn(class AME_PlayerSharkCharacter* PlayerPawn);
	void OnPlayerDied(class AME_PlayerSharkCharacter* PlayerPawn);
	bool IsCinematicMode();
	void GetKeysForAction(const struct FName& ActionName, TArray<struct FInputActionKeyMapping>* Bindings);
};

// Class Maneater.ME_PlayerSharkMovementComponent
// 0x00B4 (FullSize[0x08A0] - InheritedSize[0x07EC])
class UME_PlayerSharkMovementComponent : public UME_AnimalMovementComponent
{
public:
	float                                              WaterSurfaceLockMaxRequiredAngle;                          // 0x07EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterSurfaceLockMinRequiredAngle;                          // 0x07F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7ZZV[0x4];                                     // 0x07F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CruisingWaterInputDeadzone;                                // 0x07F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterSurfaceEntryDistance;                                 // 0x07FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T6GT[0x8];                                     // 0x0800(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    WaterEnteredDelegate;                                      // 0x0808(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    WaterBreachDelegate;                                       // 0x0818(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSwimmingToBreachDelegate;                                // 0x0828(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerMovementModeChangedDelegate;                       // 0x0838(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              AirbornVelocityLimitMultiplier;                            // 0x0848(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A6W9[0x8];                                     // 0x084C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BoatFriction;                                              // 0x0854(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeForForcedSurfaceLock;                                  // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeedForSurfaceLock;                                    // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinZSpeedForSurfaceLock;                                   // 0x0860(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinDeltaDotForReentryVelocityMult;                         // 0x0864(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxDeltaDotForReentryVelocityMult;                         // 0x0868(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinReentryVelocityMult;                                    // 0x086C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxReentryVelocityMult;                                    // 0x0870(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XSIW[0x4];                                     // 0x0874(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AME_PlayerSharkCharacter*                    SharkOwner;                                                // 0x0878(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 BreachAngleAdjustmentCurve;                                // 0x0880(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZZQE[0x18];                                    // 0x0888(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerSharkMovementComponent");
		return ptr;
	}



	void SetCrusingWaterLine(bool bNewCrusingWaterline, TEnumAsByte<Maneater_ECharacterActionMode> ChangeContext);
};

// Class Maneater.ME_PlayerSharkState
// 0x0440 (FullSize[0x0760] - InheritedSize[0x0320])
class AME_PlayerSharkState : public APlayerState
{
public:
	unsigned char                                      UnknownData_FEWM[0x8];                                     // 0x0320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnNutrientsGained;                                         // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNutrientsSpent;                                          // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerLevelChanged;                                      // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrowthStageChanged;                                      // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrowthStageAvailable;                                    // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                CurrentProteinReserve;                                     // 0x0378(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentFatReserve;                                         // 0x037C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentMineralReserve;                                     // 0x0380(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentMutagenReserve;                                     // 0x0384(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentExpAmount;                                          // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentPlayerLevel;                                        // 0x038C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CumulativeXPGainedFromObjectives;                          // 0x0390(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CumulativeXPGainedFromBounties;                            // 0x0394(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CumulativeXPGainedFromEating;                              // 0x0398(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CumulativeXPGainedFromLandmarks;                           // 0x039C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CumulativeXPGainedFromCaches;                              // 0x03A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CumulativeXPGainedFromCollectables;                        // 0x03A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CumulativeXPGainedFromCheats;                              // 0x03A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPlayerGrowthStage>           GrowthStageBehindTheScenesLevel;                           // 0x03AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RSGT[0x3];                                     // 0x03AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TheoreticalPlayerLevel;                                    // 0x03B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EPlayerGrowthStage>           CurrentGrowthStage;                                        // 0x03B4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7I3M[0x3];                                     // 0x03B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSharkEvolutionSettings>             EvolutionStageSettings;                                    // 0x03B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaypointDestroyed;                                       // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      WaypointMarkerClass;                                       // 0x03D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_WaypointMarker*                          CurrentWayPoint;                                           // 0x03E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     DesiredRespawnLocation;                                    // 0x03E8(0x000C) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    DesiredRespawnRotation;                                    // 0x03F4(0x000C) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                CurrentRegionIndex;                                        // 0x0400(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8TRZ[0x4];                                     // 0x0404(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      CurrentGrotto;                                             // 0x0408(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpeciesStatBinding                         PlayerStats;                                               // 0x0410(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStatChanged;                                             // 0x0420(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AME_PlayerSharkCharacter*                    PlayerSharkPawn;                                           // 0x0430(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                              ExperienceLevelRequirements;                               // 0x0438(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              CameraArmLengthPerLevel;                                   // 0x0458(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              CameraArmMinLengthPerLevel;                                // 0x0478(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              CameraZSocketOffsetByLevel;                                // 0x0498(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              WaterLineCruiseHeightPerLevel;                             // 0x04B8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              KnifingSnapDistanceFromLevel;                              // 0x04D8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              CameraFOVFromLevel;                                        // 0x04F8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              CameraLagSpeedFromLevel;                                   // 0x0518(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              MaxSwimSpeedFromLevel;                                     // 0x0538(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              MaxSafeGameplaySpeedFromLevel;                             // 0x0558(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              PerchRadiusThreshold;                                      // 0x0578(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                              MaxAggroWildlifeFromLevel;                                 // 0x0598(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              LevelUpGameplayEffect;                                     // 0x05B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UME_PlayerEvolution*, struct FEvolutionData> EvolutionInventoryData;                                    // 0x05C8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
	TMap<Maneater_EEvolutionSlot, class UME_PlayerEvolution*> SlottedEvolutions;                                         // 0x0618(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
	class UDataTable*                                  EvolutionSetBonusDataTable;                                // 0x0668(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  EvolutionListDataTable;                                    // 0x0670(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JA92[0xA0];                                    // 0x0678(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnInventoryEvolutionChanged;                               // 0x0718(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSlottedEvolutionChanged;                                 // 0x0728(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEvolutionInventoryLoaded;                                // 0x0738(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UME_PlayerEvolution*                         TigerSharkEvolution;                                       // 0x0748(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DUBD[0x10];                                    // 0x0750(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerSharkState");
		return ptr;
	}



	class AME_WaypointMarker* SetWaypoint(class AActor* TargetActor, const struct FVector& TargetLocation);
	void SetStat(TEnumAsByte<Maneater_EPersistentStatType> StatToModify, int NewValue);
	bool SetSlottedEvolution(Maneater_EEvolutionSlot EvolutionSlot, class UME_PlayerEvolution* Evolution);
	void SetRespawnLocation(const struct FVector& NewRespawnLocation, const struct FRotator& NewRespawnRotation, bool bSaveGame);
	void SetNewEvolution(class UME_PlayerEvolution* Evolution, bool bIsNewEvolution);
	void SetInventoryEvolutionEquipped(class UME_PlayerEvolution* Evolution, Maneater_EEvolutionSlot AssignedSlot);
	void SetHasNewEvolutionAvailable(bool bAvailable);
	void SetGrowthStage(TEnumAsByte<Maneater_EPlayerGrowthStage> NewGrowthStage, bool bReinitPose);
	void SetGrowthLevel(int NewGrowthLevel, bool ForceGrowth, bool bCauseGameSave, bool bChangeFromTheoretical);
	void RemoveWaypoint();
	bool RemoveInventoryEvolution(class UME_PlayerEvolution* ToBeRemovedEvolution);
	void ReceiveBountyChange(float NewBountyDollars, class AActor* BountyChangeInstigator);
	bool PurchaseInventoryEvolutionUpgrade(class UME_PlayerEvolution* Evolution);
	void OnWorldRegionChanged(class AME_WorldRegionVolume* NewRegion);
	void OnPlayerBountyChanged(float NewBountyDollars, class AActor* BountyChangeInstigator);
	void OnNutrientsChanged(int NutrientDelta, TEnumAsByte<Maneater_ENutrientType> NutrientType);
	void OnIncreasedGrowthStage(TEnumAsByte<Maneater_EPlayerGrowthStage> NewGrowthStage);
	void OnGainedGrowthLevel(int NewGrowthLevel);
	int ModifyStat(TEnumAsByte<Maneater_EPersistentStatType> StatToModify, int ValueChange);
	void ModifyNutrients(TEnumAsByte<Maneater_ENutrientType> NutrientToModify, int ValueChange);
	void ModifyGrowthStage(int GrowthChange);
	void ModifyGrowthLevel(int GrowthLevelChange);
	bool LevelUpRequiresGrowth(int NewGrowthLevel);
	bool IsInstigatingAnyAlerts();
	bool IsGrowthStageAvailable();
	bool IsEvolutionEquip(class UME_PlayerEvolution* Evolution);
	class UME_PlayerEvolution* GetSlottedEvolution(Maneater_EEvolutionSlot EvolutionSlot);
	int GetNumberOfSetItemsEquippedByType(Maneater_EEvolutionSetType eType);
	int GetMinGrowthLevel();
	int GetMaxGrowthLevel();
	void GetInventoryEvolutions(TArray<class UME_PlayerEvolution*>* Evolutions, Maneater_EEvolutionSlot SlotTypeFilter);
	bool GetInventoryEvolutionData(class UME_PlayerEvolution* Evolution, struct FEvolutionData* OutEvolutionData);
	bool GetHasNewEvolutionAvailable();
	float GetGrowthPct(bool bRelativeToNextStage);
	struct FText GetEvolutionSetName(Maneater_EEvolutionSetType eType);
	TArray<class UME_PlayerEvolution*> GetEvolutionsBelongingToSet(Maneater_EEvolutionSetType eType);
	TArray<struct FEvolutionDisplayStat> GetDisplayStatsForEvolutionSetBonus(Maneater_EEvolutionSetType eType, int NumEquip);
	void DeductNutrientCost(const struct FEvolutionUpgradeCost& UpgradeCost);
	void CheckAndGrantPlayerEntitlements();
	bool CanPurchaseEvolutionUpgrade(const struct FEvolutionUpgradePrice& UpgradePrice);
	bool CanAffordEvolutionCost(const struct FEvolutionUpgradeCost& UpgradeCost);
	bool AddInventoryEvolution(class UME_PlayerEvolution* NewEvolution, Maneater_EEvolutionRarity Rarity);
	void AcceptGrowthStageAtGrotto(TEnumAsByte<Maneater_EPlayerGrowthStage> PlayerGrowthStage);
};

// Class Maneater.ME_PlayerTargetingSystem
// 0x00A8 (FullSize[0x0158] - InheritedSize[0x00B0])
class UME_PlayerTargetingSystem : public UActorComponent
{
public:
	TArray<struct FME_DotProductToDistance>            DotToDistanceArray;                                        // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OU7C[0xC];                                     // 0x00C0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_EOutlineColor                             CurrentWhipshotTargetColor;                                // 0x00CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EOutlineColor                             CurrentFocusedObjectiveColor;                              // 0x00CD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Maneater_EOutlineColor                             AlertedColor;                                              // 0x00CE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KJ7N[0x1];                                     // 0x00CF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSoftTargetChangedEvent;                                  // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRelevantTargetChangedEvent;                              // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       CurrentFocusedObjectiveTarget;                             // 0x00F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       CurrentFocusedTarget;                                      // 0x00F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       CurrentLockOnTarget;                                       // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       CurrentSoftLockOnTarget;                                   // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       CurrentWhipShotTarget;                                     // 0x0110(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FME_TargetableActorData>             PotentialTargets;                                          // 0x0118(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FME_TargetableActorData>             PotentialObjectiveTargets;                                 // 0x0128(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_PlayerSharkCharacter*                    ME_PlayerSharkCharacter;                                   // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSoftLockEnabled;                                          // 0x0140(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L60E[0x3];                                     // 0x0141(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WorldDistanceWeight;                                       // 0x0144(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DotProductWeight;                                          // 0x0148(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LandTargetDistanceMultiplier;                              // 0x014C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TickRate;                                                  // 0x0150(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0B84[0x4];                                     // 0x0154(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerTargetingSystem");
		return ptr;
	}



	void SetShowSilhouette(class AActor* PingTarget, bool bShow, Maneater_EOutlineColor ForcedOutlineColor);
	void RemovePotentialTarget(class AActor* Actor);
	struct FVector GetSoftLockOnTargetLocation();
	struct FVector GetLockOnTargetLocation();
	struct FVector GetFocusedTargetLocation();
	class AActor* GetCurrentWhipShotTarget();
	class AActor* GetCurrentSoftLockOnTarget();
	class AActor* GetCurrentLockOnTarget();
	class AActor* GetCurrentFocusedTarget();
	class AActor* GetCurrentFocusedObjectiveTarget();
	void AddPotentialTarget(class AActor* Actor, bool bOnlyWhipshotTarget, bool bIsObjectiveTarget);
};

// Class Maneater.ME_PlayerUIAvatarActor
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AME_PlayerUIAvatarActor : public AActor
{
public:
	class USceneCaptureComponent2D*                    AvatarSceneCapture;                                        // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerUIAvatarActor");
		return ptr;
	}



	void ReceivePostInitializeComponents();
};

// Class Maneater.ME_PlayerUIAvatarMeshComponent
// 0x0000 (FullSize[0x0AE0] - InheritedSize[0x0AE0])
class UME_PlayerUIAvatarMeshComponent : public USkeletalMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerUIAvatarMeshComponent");
		return ptr;
	}



};

// Class Maneater.ME_Projectile
// 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
class AME_Projectile : public AActor
{
public:
	class UParticleSystemComponent*                    BubbleTrailComponent;                                      // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                            SphereComponent;                                           // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProjectileMovementComponent*                ProjectileMovement;                                        // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ProjectileAmbientMovementSound;                            // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachOnHit;                                              // 0x0248(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanHitVehicles;                                           // 0x0249(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E52T[0x6];                                     // 0x024A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              DamageEffects;                                             // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ExplosionActorClass;                                       // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRange;                                                  // 0x0268(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O5EA[0x4];                                     // 0x026C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_Projectile");
		return ptr;
	}



	void OnPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OnHitActor(class AActor* HitActor);
};

// Class Maneater.ME_ProjectileMovementComponent
// 0x0010 (FullSize[0x01E0] - InheritedSize[0x01D0])
class UME_ProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	unsigned char                                      UnknownData_XUUV[0x10];                                    // 0x01D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ProjectileMovementComponent");
		return ptr;
	}



};

// Class Maneater.ME_ProximityBomb
// 0x0028 (FullSize[0x03A8] - InheritedSize[0x0380])
class AME_ProximityBomb : public AME_ExplodingBarrelBase
{
public:
	float                                              DetectionRadius;                                           // 0x0380(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CS9A[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	double                                             CleanupRadius;                                             // 0x0388(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutomaticallyHandleDespawning;                            // 0x0390(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OXEN[0x17];                                    // 0x0391(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ProximityBomb");
		return ptr;
	}



};

// Class Maneater.ME_SaveObjectBase
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UME_SaveObjectBase : public USaveGame
{
public:
	unsigned char                                      UnknownData_K0CY[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SaveObjectBase");
		return ptr;
	}



	void SetDirty();
	void SetClean();
	bool IsDirty();
};

// Class Maneater.ME_SaveGameObject
// 0x00E0 (FullSize[0x0110] - InheritedSize[0x0030])
class UME_SaveGameObject : public UME_SaveObjectBase
{
public:
	float                                              TotalPlayTime;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerLevel;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                StoryLineProgress;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K5BB[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       StoryChapterName;                                          // 0x0040(0x0018) (Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	struct FDateTime                                   SaveTimestamp;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VH9R[0x28];                                    // 0x0060(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, int>                            NarratorHistory;                                           // 0x0088(0x0050) (Edit, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               UnlockedAchievements;                                      // 0x00D8(0x0010) (Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             TopLevelActivities;                                        // 0x00E8(0x0010) (Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             InProgressActivities;                                      // 0x00F8(0x0010) (Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XUFT[0x4];                                     // 0x0108(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Maneater_EEvolutionRarity                          eTigerSharkEvolutonRarity;                                 // 0x010C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P7PZ[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SaveGameObject");
		return ptr;
	}



	void SetTigerSkinEvolutionRarity(Maneater_EEvolutionRarity eRarity);
	bool SaveObject(class UObject* ObjectToSave, class UWorld* GameWorld);
	bool SaveActorWithTransform(class AActor* ActorToSave);
	bool RemoveSavedObject(class UObject* ObjectToRemove);
	bool LoadObjectProperties(class UObject* ObjectToLoad, class UWorld* GameWorld, bool bOnlyClassMustMatch);
	TArray<class UObject*> LoadAllObjectsOfClass(class UClass* ClassToLoad, class UObject* WorldContextObject);
	TArray<class AActor*> LoadAllActorsWithTransform(class UClass* ClassToLoad, class UObject* WorldContextObject);
	class AActor* LoadActorWithTransform(const struct FString& ActorName, class UObject* WorldContextObject);
	Maneater_EEvolutionRarity GetTigerSkinEvolutionRarity();
};

// Class Maneater.ME_SaveProfileObject
// 0x00D8 (FullSize[0x0108] - InheritedSize[0x0030])
class UME_SaveProfileObject : public UME_SaveObjectBase
{
public:
	int                                                PreviouslySelectedSlot;                                    // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3D7K[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDateTime                                   LastTimeStampWhenSaved;                                    // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, int>                            SavedTutorials;                                            // 0x0040(0x0050) (NativeAccessSpecifierPublic)
	struct FString                                     ProfileName;                                               // 0x0090(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FText>                               StatNames;                                                 // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerPersistentStat>               GlobalStats;                                               // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ControlScheme;                                             // 0x00C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInvertMouseY;                                             // 0x00C4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInvertGamepadY;                                           // 0x00C5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R101[0x2];                                     // 0x00C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LeftStickSensitivity;                                      // 0x00C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightStickSensitivity;                                     // 0x00CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseSensitivity;                                          // 0x00D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      DEV_BoostType;                                             // 0x00D4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TS95[0x13];                                    // 0x00D5(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MasterVolume;                                              // 0x00E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SfxVolume;                                                 // 0x00EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MusicVolume;                                               // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DialogVolume;                                              // 0x00F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NarratorVolume;                                            // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RaytracingQuality;                                         // 0x00FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSubtitlesEnabled;                                         // 0x0100(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bControllerVibrationEnabled;                               // 0x0101(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTutorialPopupEnabled;                                     // 0x0102(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TRM4[0x5];                                     // 0x0103(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SaveProfileObject");
		return ptr;
	}



	void SetTutorialPopupEnabled(bool bEnable);
	void SetSubtitlesEnabled(bool bEnable);
	void SetSfxVolume(float Val);
	void SetRightStickSensitivity(float Sensitivity);
	void SetRaytracingQuality(int Quality);
	void SetNarratorVolume(float Val);
	void SetMusicVolume(float Val);
	void SetMouseSensitivity(float Sensitivity);
	void SetMasterVolume(float Val);
	void SetLeftStickSensitivity(float Sensitivity);
	void SetInvertMouseYEnabled(bool bEnable);
	void SetInvertMouseY(bool Val);
	void SetInvertGamepadYEnabled(bool bEnable);
	void SetInvertGamepadY(bool Val);
	void SetDialogVolume(float Val);
	void SetControlScheme(int idx);
	void SetControllerVibrationEnabled(bool bEnable);
	bool IsMouseYInverted();
	bool IsInvertMouseYEnabled();
	bool IsInvertGamepadYEnabled();
	bool IsGamepadYInverted();
	bool GetTutorialPopupEnabled();
	bool GetSubtitlesEnabled();
	float GetSfxVolume();
	float GetRightStickSensitivity();
	int GetRaytracingQuality();
	float GetNarratorVolume();
	float GetMusicVolume();
	float GetMouseSensitivity();
	float GetMinStickSensitivity();
	float GetMinMouseSensitivity();
	float GetMaxStickSensitivity();
	float GetMaxMouseSensitivity();
	float GetMasterVolume();
	float GetLeftStickSensitivity();
	float GetDialogVolume();
	int GetControlScheme();
	bool GetControllerVibrationEnabled();
	void DEV_SetBoostType(unsigned char idx);
	unsigned char DEV_GetBoostType();
	void ApplyAudioSettings();
};

// Class Maneater.ME_SaveSystemStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_SaveSystemStatics : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SaveSystemStatics");
		return ptr;
	}



	bool STATIC_SaveCurrentlyActiveProfileData(class UObject* WorldContextObject);
	bool STATIC_SaveCurrentlyActiveGameToSlot(class UObject* WorldContextObject, bool bForceFlush);
	class UME_SaveGameObject* STATIC_PeekSaveGameSlot(int Slot, class UObject* WorldContextObject);
	class UME_SaveGameObject* STATIC_LoadSaveGameSlot(int Slot, class UObject* WorldContextObject);
	class UME_SaveProfileObject* STATIC_LoadProfileData(class UObject* WorldContextObjet);
	struct FString STATIC_GetSaveName(int Slot);
	class UME_SaveGameObject* STATIC_GetSaveGameInstance(class UObject* WorldContextObject);
	struct FDateTime STATIC_GetSavedProfileTimeStamp(class UObject* WorldContextObject);
	struct FString STATIC_GetSavedProfileDir();
	class UME_SaveProfileObject* STATIC_GetProfileSaveInstance(class UObject* WorldContextObject);
	int STATIC_GetPreviouslyLoadedSaveSlot(class UObject* WorldContextObject);
	bool STATIC_DestroySaveGameInstance(class UObject* WorldContextObject);
	bool STATIC_DeleteSaveGameSlot(int Slot, class UObject* WorldContextObject);
	bool STATIC_CurrentPlayerDoesSlotHaveSave(int Slot, class UObject* WorldContextObject);
};

// Class Maneater.ME_SignificanceEmitter
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class AME_SignificanceEmitter : public AEmitter
{
public:
	unsigned char                                      UnknownData_WHBQ[0x10];                                    // 0x0270(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SignificanceEmitter");
		return ptr;
	}



};

// Class Maneater.ME_SignificanceEntity
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_SignificanceEntity : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SignificanceEntity");
		return ptr;
	}



	void PostSignificance(class UObject* SignificanceObject, float OldSignificance, float NewSignificance, bool bUnregistered);
	float CalculateSignificance(class UObject* SignificanceObject, const struct FTransform& ViewPoint);
};

// Class Maneater.ME_SignificanceManager
// 0x0010 (FullSize[0x0130] - InheritedSize[0x0120])
class UME_SignificanceManager : public USignificanceManager
{
public:
	float                                              MaxAIWeight;                                               // 0x0120(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EWS6[0xC];                                     // 0x0124(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SignificanceManager");
		return ptr;
	}



};

// Class Maneater.ME_SonarDetectableInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_SonarDetectableInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SonarDetectableInterface");
		return ptr;
	}



	void OnPlayerFocused();
	void OnPingedByPlayerSonar();
	void OnFoundBySonar();
	class UWidgetComponent* GetSonarWidget(bool bForce);
	float GetMaxDistanceVisible();
	struct FText GetFriendlyName();
	int GetFocusPriority();
	int GetDisplayLevel();
	struct FVector GetDetectableLocation(const struct FVector& AttackerLocation);
	struct FVector GetDetectableComponentLocationOffset();
	class UPrimitiveComponent* GetDetectableComponent();
	bool CanBeLockedOnTo();
	bool CanBeFocused();
};

// Class Maneater.ME_SonarManager
// 0x0090 (FullSize[0x02B0] - InheritedSize[0x0220])
class AME_SonarManager : public AActor
{
public:
	unsigned char                                      UnknownData_AV1N[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSonarTargetEvent;                                        // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSonarUntargetEvent;                                      // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSonarRefreshTargetEvent;                                 // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IKVV[0x58];                                    // 0x0258(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SonarManager");
		return ptr;
	}



	void OnCinematicModeChanged(bool bCinematicMode);
};

// Class Maneater.ME_SpawnActorVisualizerComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UME_SpawnActorVisualizerComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnActorVisualizerComponent");
		return ptr;
	}



};

// Class Maneater.ME_SpawningObjectiveBase
// 0x0060 (FullSize[0x0178] - InheritedSize[0x0118])
class UME_SpawningObjectiveBase : public UME_PlayerObjective
{
public:
	unsigned char                                      UnknownData_XHUM[0x24];                                    // 0x0118(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnDistance;                                             // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DespawnDistance;                                           // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ANHV[0x34];                                    // 0x0144(0x0034) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawningObjectiveBase");
		return ptr;
	}



};

// Class Maneater.ME_KillObjective
// 0x0098 (FullSize[0x0210] - InheritedSize[0x0178])
class UME_KillObjective : public UME_SpawningObjectiveBase
{
public:
	struct FSpawnObjectiveInfo                         SpawnInfo;                                                 // 0x0178(0x0068) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       ApexName;                                                  // 0x01E0(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                                  ApexImage;                                                 // 0x01F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ApexPosition;                                              // 0x0200(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDiscovered;                                               // 0x020C(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MGLM[0x3];                                     // 0x020D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_KillObjective");
		return ptr;
	}



};

// Class Maneater.ME_HighValueTargetObjective
// 0x0028 (FullSize[0x01A0] - InheritedSize[0x0178])
class UME_HighValueTargetObjective : public UME_SpawningObjectiveBase
{
public:
	TArray<struct FSpawnObjectiveInfo>                 SpawnInfo;                                                 // 0x0178(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpawnObjectiveInfo>                 AvailableSpawnInfo;                                        // 0x0188(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ActiveSpawnInfo;                                           // 0x0198(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                HVTsToComplete;                                            // 0x019C(0x0004) (Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HighValueTargetObjective");
		return ptr;
	}



};

// Class Maneater.ME_AreaSpawnObjective
// 0x0070 (FullSize[0x01E8] - InheritedSize[0x0178])
class UME_AreaSpawnObjective : public UME_SpawningObjectiveBase
{
public:
	TArray<struct FSpawnObjectiveInfo>                 SpawnInfo;                                                 // 0x0178(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TargetKillCount;                                           // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9BMG[0x4];                                     // 0x018C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        CompletedSubObjectives;                                    // 0x0190(0x0010) (ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<Maneater_EObjectiveProgressState>           SubObjectiveStates;                                        // 0x01A0(0x0010) (ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int>                                        SubObjectiveRemaining;                                     // 0x01B0(0x0010) (ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                             SubObjectivePositions;                                     // 0x01C0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ActiveSpawnIndex;                                          // 0x01D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8ENE[0x4];                                     // 0x01D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AME_AIController>>     SpawnedControllers;                                        // 0x01D8(0x0010) (ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_AreaSpawnObjective");
		return ptr;
	}



};

// Class Maneater.ME_HuntObjective
// 0x0000 (FullSize[0x01E8] - InheritedSize[0x01E8])
class UME_HuntObjective : public UME_AreaSpawnObjective
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_HuntObjective");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectiveTerrorize
// 0x0000 (FullSize[0x01E8] - InheritedSize[0x01E8])
class UME_PlayerObjectiveTerrorize : public UME_AreaSpawnObjective
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectiveTerrorize");
		return ptr;
	}



};

// Class Maneater.ME_PlayerObjectivePopulationControl
// 0x0000 (FullSize[0x01E8] - InheritedSize[0x01E8])
class UME_PlayerObjectivePopulationControl : public UME_AreaSpawnObjective
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_PlayerObjectivePopulationControl");
		return ptr;
	}



};

// Class Maneater.ME_SpawnManagerBase
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class AME_SpawnManagerBase : public AActor
{
public:
	TWeakObjectPtr<class AME_PlayerSharkCharacter>     PlayerShark;                                               // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AME_AIController>>     CurrentAIList;                                             // 0x0228(0x0010) (ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnManagerBase");
		return ptr;
	}



	void AISpawned(class AME_AIController* AIC);
};

// Class Maneater.ME_ObjectiveSpawnManager
// 0x00A0 (FullSize[0x02D8] - InheritedSize[0x0238])
class AME_ObjectiveSpawnManager : public AME_SpawnManagerBase
{
public:
	unsigned char                                      UnknownData_NG1O[0xA0];                                    // 0x0238(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ObjectiveSpawnManager");
		return ptr;
	}



};

// Class Maneater.ME_SpawnlistCondition
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_SpawnlistCondition : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnlistCondition");
		return ptr;
	}



	bool ConditionIsValid(class AActor* WorldContextActor);
};

// Class Maneater.ME_SpawnListCondition_ActiveBounty
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UME_SpawnListCondition_ActiveBounty : public UME_SpawnlistCondition
{
public:
	float                                              bInverseCondition;                                         // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WQN7[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnListCondition_ActiveBounty");
		return ptr;
	}



};

// Class Maneater.ME_SpawnListCondition_BossIsActive
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UME_SpawnListCondition_BossIsActive : public UME_SpawnlistCondition
{
public:
	float                                              bInverseCondition;                                         // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0XJC[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnListCondition_BossIsActive");
		return ptr;
	}



};

// Class Maneater.ME_SpawnListCondition_IgnoreForObjective
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UME_SpawnListCondition_IgnoreForObjective : public UME_SpawnlistCondition
{
public:
	float                                              bUseObjectiveSpawnManager;                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ET7P[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnListCondition_IgnoreForObjective");
		return ptr;
	}



};

// Class Maneater.ME_SpawnListCondition_MaxInPlay
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UME_SpawnListCondition_MaxInPlay : public UME_SpawnlistCondition
{
public:
	float                                              MaxInPlay;                                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NumInPlay;                                                 // 0x002C(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              bPrioritySpawn;                                            // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_32WT[0xC];                                     // 0x0034(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnListCondition_MaxInPlay");
		return ptr;
	}



};

// Class Maneater.ME_SpawnListCondition_PoisonedWater
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UME_SpawnListCondition_PoisonedWater : public UME_SpawnlistCondition
{
public:
	float                                              bInverseCondition;                                         // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QIXI[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnListCondition_PoisonedWater");
		return ptr;
	}



};

// Class Maneater.ME_SpawnListCondition_StorylineProgress
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UME_SpawnListCondition_StorylineProgress : public UME_SpawnlistCondition
{
public:
	int                                                MinimumStorylineProgress;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaximumStorylineProgress;                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerObjectiveManager>   ObjectiveManager;                                          // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnListCondition_StorylineProgress");
		return ptr;
	}



};

// Class Maneater.ME_SpawnListCondition_TimeOfDay
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UME_SpawnListCondition_TimeOfDay : public UME_SpawnlistCondition
{
public:
	float                                              StartTime;                                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EndTime;                                                   // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnListCondition_TimeOfDay");
		return ptr;
	}



};

// Class Maneater.ME_SpawnListCondition_TutorialComplete
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UME_SpawnListCondition_TutorialComplete : public UME_SpawnlistCondition
{
public:
	TWeakObjectPtr<class AME_TutorialManager>          TutorialManager;                                           // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnListCondition_TutorialComplete");
		return ptr;
	}



};

// Class Maneater.ME_SpawnManager
// 0x0048 (FullSize[0x0280] - InheritedSize[0x0238])
class AME_SpawnManager : public AME_SpawnManagerBase
{
public:
	int                                                MaxProxMines;                                              // 0x0238(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4L9B[0x1C];                                    // 0x023C(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMESpawnerInfo>                      ManagedSpawners;                                           // 0x0258(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSpawnsPerFrame;                                         // 0x0268(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BV3U[0x14];                                    // 0x026C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnManager");
		return ptr;
	}



};

// Class Maneater.ME_SpawnPool
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UME_SpawnPool : public UObject
{
public:
	TArray<class AActor*>                              AllSpawnedActors;                                          // 0x0028(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TI8Y[0x58];                                    // 0x0038(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnPool");
		return ptr;
	}



};

// Class Maneater.ME_SpawnPoolEntity
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_SpawnPoolEntity : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnPoolEntity");
		return ptr;
	}



	void ResetEntity();
	bool IsExemptFromPool();
	bool IsDespawning();
	void InitEntity();
	void EntityDespawned();
};

// Class Maneater.ME_SpawnData
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UME_SpawnData : public UDataAsset
{
public:
	TArray<struct FSpawnDataEntry>                     SpawnDataList;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnData");
		return ptr;
	}



};

// Class Maneater.ME_SpawnVolumeCollection
// 0x00D0 (FullSize[0x00F8] - InheritedSize[0x0028])
class UME_SpawnVolumeCollection : public UObject
{
public:
	unsigned char                                      UnknownData_ZP30[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CachedNextSpawn;                                           // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OOIQ[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bObjectiveVolumeCollection;                                // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OSC2[0x3];                                     // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SignificanceMod;                                           // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsExplorable;                                             // 0x0068(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9E6A[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSpawnListEntry>                     SpawnLists;                                                // 0x0070(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2MNR[0x10];                                    // 0x0080(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AME_SpawnVolume>>      OwnedVolumes;                                              // 0x0090(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IZ7S[0x34];                                    // 0x00A0(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FilteredSpawnPercentage;                                   // 0x00D4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FilterDelay;                                               // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GYLV[0x1C];                                    // 0x00DC(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnVolumeCollection");
		return ptr;
	}



};

// Class Maneater.ME_SpawnVolume
// 0x0060 (FullSize[0x02B8] - InheritedSize[0x0258])
class AME_SpawnVolume : public AVolume
{
public:
	class UME_SpawnVolumeCollection*                   OwningCollection;                                          // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0QDM[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AIDensity;                                                 // 0x0268(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KO3I[0x14];                                    // 0x026C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ExpectedMaxAICount;                                        // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequiresUniqueCollection;                                 // 0x0284(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WZ7P[0x3];                                     // 0x0285(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SignificanceMod;                                           // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsExplorableSpawner;                                      // 0x028C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CSWS[0x3];                                     // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSpawnListEntry>                     SpawnLists;                                                // 0x0290(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             GridSpawnPoints;                                           // 0x02A0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bObjectiveVolume;                                          // 0x02B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TAVP[0x7];                                     // 0x02B1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnVolume");
		return ptr;
	}



};

// Class Maneater.ME_SpawnVolumeCollection_Beachgoer
// 0x0068 (FullSize[0x0160] - InheritedSize[0x00F8])
class UME_SpawnVolumeCollection_Beachgoer : public UME_SpawnVolumeCollection
{
public:
	TArray<struct FBeachActivityEntry>                 CollectionActivities;                                      // 0x00F8(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L769[0x58];                                    // 0x0108(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnVolumeCollection_Beachgoer");
		return ptr;
	}



};

// Class Maneater.ME_SpawnVolume_Beachgoer
// 0x0068 (FullSize[0x0320] - InheritedSize[0x02B8])
class AME_SpawnVolume_Beachgoer : public AME_SpawnVolume
{
public:
	TArray<struct FBeachActivityEntry>                 ValidActivities;                                           // 0x02B8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_ESpawnRotationType>           SpawnRotation;                                             // 0x02C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WIG9[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SpawnRotationActor[0x28];                                  // 0x02C9(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ForcedEscapeVolumes[0x10];                                 // 0x02F8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      ExcludedEscapeVolumes[0x10];                               // 0x0308(0x0010) UNKNOWN PROPERTY: ArrayProperty
	float                                              PercentChanceOfFleeing;                                    // 0x0318(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RLT0[0x4];                                     // 0x031C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnVolume_Beachgoer");
		return ptr;
	}



};

// Class Maneater.ME_SpawnVolumeVisualizerComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UME_SpawnVolumeVisualizerComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_SpawnVolumeVisualizerComponent");
		return ptr;
	}



};

// Class Maneater.ME_TerrainMappedAmbience
// 0x0040 (FullSize[0x02A0] - InheritedSize[0x0260])
class AME_TerrainMappedAmbience : public AAkAmbientSound
{
public:
	class UTexture2D*                                  AmbienceHeatmap;                                           // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Maneater_EAmbienceColorChannel>        HeatmapChannel;                                            // 0x0268(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I40L[0x3];                                     // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AmbienceRTPCParam;                                         // 0x026C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPrintRTPCValue;                                           // 0x0274(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawHeatmapVisualization;                                 // 0x0275(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableMultiPositionAudio;                                 // 0x0276(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	AkAudio_EAkMultiPositionType                       EmitterPositionMethod;                                     // 0x0277(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GHMP[0x28];                                    // 0x0278(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_TerrainMappedAmbience");
		return ptr;
	}



};

// Class Maneater.ME_ThrashableInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_ThrashableInterface : public UME_ActorDamageInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ThrashableInterface");
		return ptr;
	}



	void OnWhipShotImpact(class APawn* WhipInstigator);
	void OnWhipShotEnd(class APawn* WhipInstigator, const struct FVector& EndVelocity, bool GrabbedActor);
	void OnWhipShotBegin(class APawn* WhipInstigator, const struct FVector& WhipVelocity);
	void OnReleasedBy(class AME_AnimalCharacter* ReleasingAnimal, bool bIgnoreFlee, bool bBrokeAway);
	void OnGrabPointDamagedVFX(const struct FThrashGrabPoint& GrabPoint, float DamageToApply, const struct FVector& DamageNormal, const struct FVector& DamageLocation);
	void OnGrabPointDamaged(const struct FThrashGrabPoint& GrabPoint, float DamageToApply, TEnumAsByte<Engine_EPhysicalSurface> PhysSurface, class UPrimitiveComponent* DamagedComponent, class AActor* DamageInstigator, class UPrimitiveComponent* InstigatingComponent, const struct FVector& DamageNormal, const struct FVector& DamageLocation);
	void OnGrabPointConsumed(class AME_AnimalCharacter* ConsumingAnimal, const struct FThrashGrabPoint& ConsumedGrabPoint, const struct FName& GoreCapBoneName);
	void OnGrabPointChanged(class AME_AnimalCharacter* GrabbingAnimal, class UPrimitiveComponent* GrabbedComponent, int GrabPointIndex);
	void OnGrabbedBy(class AME_AnimalCharacter* GrabbingAnimal, class UPrimitiveComponent* GrabbedComponent, int GrabPointIndex);
	void OnConsumedWhole(class AME_AnimalCharacter* ConsumingAnimal);
	bool MoveActorToMeshPositionOnRelease();
	float GetWhipshotSpinning();
	float GetWhipshotRotationSpeed();
	float GetWhipshotRolling();
	class UClass* GetWhipShotMovementClass();
	float GetWhipshotLandClearance();
	class UClass* GetWhipShotImpactEffect();
	TEnumAsByte<Maneater_EMECustomMovementMode> GetWhipShotFlightType();
	class UParticleSystem* GetWhipShotFlightParticleEffect();
	class UMeshComponent* GetThrashableMesh();
	float GetSize();
	void GetGrabPoints(class AME_AnimalCharacter* GrabbingAnimal, TArray<struct FThrashGrabPoint>* GrabPoints);
	bool CanBeWhipShot();
	bool CanBeGrabbedBy(class AME_AnimalCharacter* GrabbingAnimal);
	bool CanBeConsumedWholeBy(class AME_AnimalCharacter* GrabbingAnimal);
};

// Class Maneater.ME_TimeofDayInfo
// 0x0070 (FullSize[0x0290] - InheritedSize[0x0220])
class AME_TimeofDayInfo : public AInfo
{
public:
	float                                              TimeofDaySpeedScale;                                       // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K22A[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentHourOfDay;                                          // 0x0228(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0YZP[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTimeOfDayPhaseSettings>             DayPhases;                                                 // 0x0230(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimeOfDayPhaseSettings                     CurrentPhaseOfDay;                                         // 0x0240(0x0014) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FTimeOfDayPhaseSettings                     NextPhaseOfDay;                                            // 0x0254(0x0014) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTimeOfDayChanged;                                        // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTimeOfDayForceChanged;                                   // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8ND4[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_TimeofDayInfo");
		return ptr;
	}



	void SetTimeOfDay(float NewHourOfDay, bool bForce);
	void SetPauseState(bool bNewPause);
	bool GetPauseState();
};

// Class Maneater.ME_TimeOfDayWorldActor
// 0x01A8 (FullSize[0x03C8] - InheritedSize[0x0220])
class AME_TimeOfDayWorldActor : public AActor
{
public:
	bool                                               bEnableNativeTick;                                         // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TR3G[0x3];                                     // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OceanDepthPostInterpSpeed;                                 // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             TODBaseComponent;                                          // 0x0228(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*                WeatherParams;                                             // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LightValueTransitionSpeed;                                 // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentLightValue;                                         // 0x023C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AME_PlayerSharkCharacter>     PlayerShark;                                               // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTickDayNight;                                             // 0x0248(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YWQ0[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APostProcessVolume*                          AirPostProcess;                                            // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirPostDayExposureCompensation;                            // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirPostNightExposureCompensation;                          // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APostProcessVolume*                          OceanPostProcess;                                          // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinOceanDepthExposure;                                     // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxOceanDepthExposure;                                     // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OceanDepthPostMinStartingExposureDay;                      // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OceanDepthPostMaxStartingExposureDay;                      // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OceanDepthPostMinStartingExposureNight;                    // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OceanDepthPostMaxStartingExposureNight;                    // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OceanPostMaximumDepth;                                     // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XY1A[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveLinearColor*                           HorizonColorCurve;                                         // 0x0288(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveLinearColor*                           ZenithColorCurve;                                          // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveLinearColor*                           CloudColorCurve;                                           // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkyLightComponent*                          SkyLightComponent;                                         // 0x02A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    SkyMaterial;                                               // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SkylightIntensityDay;                                      // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SkylightIntensityNight;                                    // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                SkylightSunriseColor;                                      // 0x02B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                SkylightNoonColor;                                         // 0x02C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                SkylightMidnightColor;                                     // 0x02D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureCube*                                UnderWaterFogCubemap;                                      // 0x02E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTimeOfDayCubemap>                   TimeOfDayCubemapList;                                      // 0x02F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LastTimeOfDayCubemapIndex;                                 // 0x0300(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EBXQ[0x4];                                     // 0x0304(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDirectionalLightComponent*                  SunLightComponent;                                         // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 SunSpeedCurve;                                             // 0x0310(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StartingSunIntensity;                                      // 0x0318(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SunTemp6AM;                                                // 0x031C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SunTemp12PM;                                               // 0x0320(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SunHeight;                                                 // 0x0324(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SunAngleInTheSky;                                          // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NorthDirectionOffset;                                      // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDirectionalLightComponent*                  MoonLightComponent;                                        // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    MoonMaterial;                                              // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHideMoonDuringDay;                                        // 0x0340(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6CER[0x3];                                     // 0x0341(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StartingMoonIntensity;                                     // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MoonlightIntensity;                                        // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MoonPhase;                                                 // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExponentialHeightFogComponent*              HeightFogComponent;                                        // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FogCurrentTransitionAlpha;                                 // 0x0358(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UnderWaterFogDensity;                                      // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AboveWaterFogDensity;                                      // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UnderWaterFogHeightFalloff;                                // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AboveWaterFogHeightFalloff;                                // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AboveWaterFogExtinctionScale;                              // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                FogSunriseColor;                                           // 0x0370(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                FogNoonColor;                                              // 0x0380(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                FogMidnightColor;                                          // 0x0390(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Maneater_EFogState>                    CurrentFogState;                                           // 0x03A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NYKC[0x3];                                     // 0x03A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentRegionFogExtinctionScale;                           // 0x03A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_641G[0x4];                                     // 0x03A8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsDaytime;                                                // 0x03AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7NIR[0x3];                                     // 0x03AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DayNightTransitionAlpha;                                   // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentMinute;                                             // 0x03B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_32E7[0x10];                                    // 0x03B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_TimeOfDayWorldActor");
		return ptr;
	}



	void UpdateTimeOfDayCubemaps(float InTimeOfDay);
	void TriggerStartNightTime();
	void TriggerStartDayTime();
	void TriggerForceChangeTime();
	void TriggerFogBelowWater();
	void TriggerFogAboveWater();
	void TickFogTransition();
	void TickDayNightTransition();
	void OnNewFogVolumeEntered(TEnumAsByte<Maneater_EFogState> PlayerFogOverride);
	bool IsDaytime();
	void InitTODActor();
	void InitTimeOfDaySettings();
	void InitFogSettings();
};

// Class Maneater.ME_TorpedoLauncherComponent
// 0x0048 (FullSize[0x00F8] - InheritedSize[0x00B0])
class UME_TorpedoLauncherComponent : public UActorComponent
{
public:
	class UClass*                                      TorpedoProjectileClass;                                    // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxActiveTorpedos;                                         // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FireCooldownTime;                                          // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumTargetAngleDot;                                     // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bMustBeFiredUnderwater : 1;                                // 0x00C4(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCancelUpwardLaunchZ : 1;                                  // 0x00C4(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIncludeInCombatManager : 1;                               // 0x00C4(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XMGV[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       LeftLauncherSocket;                                        // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RightLauncherSocket;                                       // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B10H[0x20];                                    // 0x00D8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_TorpedoLauncherComponent");
		return ptr;
	}



};

// Class Maneater.ME_TorpedoMovementComponent
// 0x0030 (FullSize[0x0210] - InheritedSize[0x01E0])
class UME_TorpedoMovementComponent : public UME_ProjectileMovementComponent
{
public:
	unsigned char                                      UnknownData_GOK6[0x8];                                     // 0x01E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DelayBeforeHomingStart;                                    // 0x01E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MininumHomingTime;                                         // 0x01EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumDistanceForDodge;                                   // 0x01F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DodgeRadiusHomingAccelScale;                               // 0x01F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZW7R[0x18];                                    // 0x01F8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_TorpedoMovementComponent");
		return ptr;
	}



};

// Class Maneater.ME_TorpedoProjectile
// 0x0040 (FullSize[0x0320] - InheritedSize[0x02E0])
class AME_TorpedoProjectile : public AME_ThrashableActor
{
public:
	class UME_TorpedoMovementComponent*                ProjectileMovement;                                        // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DetonatorSocketName;                                       // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ExplosionActorClass;                                       // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    ThrustParticle;                                            // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ThrustParticleSocketName;                                  // 0x0300(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WhipshotImpactSound;                                       // 0x0308(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ML2A[0x10];                                    // 0x0310(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_TorpedoProjectile");
		return ptr;
	}



	void SetCanBeGrabbed(bool bCanGrab);
	void OnHomingLost();
	void OnEvaded();
};

// Class Maneater.ME_TransparencyCaptureComponent
// 0x0000 (FullSize[0x0880] - InheritedSize[0x0880])
class UME_TransparencyCaptureComponent : public USceneCaptureComponent2D
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_TransparencyCaptureComponent");
		return ptr;
	}



};

// Class Maneater.ME_TutorialManager
// 0x0230 (FullSize[0x0450] - InheritedSize[0x0220])
class AME_TutorialManager : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnHudTipRequestedDelegate;                                 // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialObjectiveAdded;                                  // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialObjectiveActive;                                 // 0x0240(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialObjectiveComplete;                               // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialObjectiveRemoved;                                // 0x0260(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialObjectivesCleared;                               // 0x0270(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialFinished;                                        // 0x0280(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialEnded;                                           // 0x0290(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialRepeatedStepCompleted;                           // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialStepTimerStarted;                                // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialStepTimerStopped;                                // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TutorialEventTriggeredDelegate;                            // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialEventRequestMarker;                              // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialEventClearCompassMarker;                         // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialManagerDisabled;                                 // 0x0300(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialSinglePopupRequestDelegate;                      // 0x0310(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RequestInvertedControlsPopup;                              // 0x0320(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TMap<TEnumAsByte<Maneater_ETutorialPopupID>, float> TutorialPopupDelay;                                        // 0x0330(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5AL2[0x20];                                    // 0x0380(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               AudioEventTutorialComplete;                                // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               AudioEventTutorialIncrementStep;                           // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FME_TutorialEvent>                   TutorialEvents;                                            // 0x03B0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FME_TutorialTipEvent>                HudTips;                                                   // 0x03C0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CurrentTutorialIndex;                                      // 0x03D0(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SavedStepIndex;                                            // 0x03D4(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ETCR[0x4];                                     // 0x03D8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxVisibleTutorialObjectives;                              // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_387D[0x4];                                     // 0x03E0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeBeforeInvertedControlsWidgetShows;                     // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HZUV[0x8];                                     // 0x03E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TEnumAsByte<Maneater_ETutorialPopupID>, struct FME_TutorialPopupEvent> TutorialPopupMap;                                          // 0x03F0(0x0050) (Edit, NativeAccessSpecifierPrivate)
	TArray<bool>                                       TutorialPopupCompleted;                                    // 0x0440(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_TutorialManager");
		return ptr;
	}



	void TriggerNarratorInitialProgressEvent();
	bool ShouldShowInGamePopupWidget(TEnumAsByte<Maneater_ETutorialPopupID> PopupId);
	bool RequestInGamePopupWidget(TEnumAsByte<Maneater_ETutorialPopupID> PopupId);
	void PushHudTip(int Index);
	void OnWhipShotPerformed(class AActor* Actor);
	void OnTailwhipPerformed();
	void OnPlayerConsumedPrey(class AME_AnimalCharacter* Player, class AActor* Prey);
	void OnLungePerformed();
	void OnKnifingStateChanged(bool NewKnifingState, TEnumAsByte<Maneater_ECharacterActionMode> ChangeContext);
	void OnKnifingJumpPerformed();
	void OnEvolutionEquipped(Maneater_EEvolutionSlot EvolutionSlot, class UME_PlayerEvolution* Evolution);
	void OnBreachPerformed();
	bool IsTutorialPartTwoComplete();
	bool IsTutorialPartOneComplete();
	bool IsEnabled();
	void IncrementObjective(bool ForceShowDelayedStep);
	TEnumAsByte<Maneater_ETutorialEventId> GetCurrentTutorialIndex();
	void DelayedShowInvertedControlsPopup();
	void DelayedIncrementObjective();
	bool CreateInGamePopupWidget(TEnumAsByte<Maneater_ETutorialPopupID> PopupId);
	void ClearHudTip();
};

// Class Maneater.ME_UserProfileSettings
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UME_UserProfileSettings : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_UserProfileSettings");
		return ptr;
	}



};

// Class Maneater.ME_VehicleDebrisActor
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AME_VehicleDebrisActor : public AActor
{
public:
	class UStaticMeshComponent*                        DebrisMesh;                                                // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_BuoyancyForceComponent*                  DebrisBuoyancyComponent;                                   // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_VehicleDebrisActor");
		return ptr;
	}



};

// Class Maneater.ME_VehicleNavigationComponent
// 0x0000 (FullSize[0x0148] - InheritedSize[0x0148])
class UME_VehicleNavigationComponent : public UME_MercunaNavigationComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_VehicleNavigationComponent");
		return ptr;
	}



};

// Class Maneater.ME_ViewportClient
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UME_ViewportClient : public UGameViewportClient
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_ViewportClient");
		return ptr;
	}



};

// Class Maneater.ME_WaterVehicleMoveComponent
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UME_WaterVehicleMoveComponent : public UME_VehicleMovementComponent
{
public:
	unsigned char                                      UnknownData_5RRD[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WaterVehicleMoveComponent");
		return ptr;
	}



};

// Class Maneater.ME_WaterVehicleNavComponent
// 0x0000 (FullSize[0x0148] - InheritedSize[0x0148])
class UME_WaterVehicleNavComponent : public UME_VehicleNavigationComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WaterVehicleNavComponent");
		return ptr;
	}



};

// Class Maneater.ME_WaypointMarker
// 0x0090 (FullSize[0x02B0] - InheritedSize[0x0220])
class AME_WaypointMarker : public AActor
{
public:
	unsigned char                                      UnknownData_EMV3[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          WaypointMaterial;                                          // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       WaypointFriendlyName;                                      // 0x0230(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       WaypointDescription;                                       // 0x0248(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WaypointReachedSound;                                      // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WaypointSetSound;                                          // 0x0268(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                            CollisionComponent;                                        // 0x0270(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProjectedIconCache                         WaypointIconCache;                                         // 0x0278(0x0030) (NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bRenderProjectedIcon;                                      // 0x02A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BN0G[0x7];                                     // 0x02A9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WaypointMarker");
		return ptr;
	}



};

// Class Maneater.ME_WhippableActorBase
// 0x0008 (FullSize[0x0378] - InheritedSize[0x0370])
class AME_WhippableActorBase : public AME_NutrientCache_Static
{
public:
	int                                                MaxUses;                                                   // 0x0370(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FXN7[0x4];                                     // 0x0374(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WhippableActorBase");
		return ptr;
	}



};

// Class Maneater.ME_WhipshotMovementComponent
// 0x0060 (FullSize[0x0230] - InheritedSize[0x01D0])
class UME_WhipshotMovementComponent : public UProjectileMovementComponent
{
public:
	float                                              FluidFrictionAdjustment;                                   // 0x01D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWhipshotPhysicsTime;                                    // 0x01D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NMK7[0x58];                                    // 0x01D8(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WhipshotMovementComponent");
		return ptr;
	}



	void OnWhipShotVictimImpact(class UPrimitiveComponent* SelfActor, class AActor* OtherActor, class UPrimitiveComponent* OtherPrimitive, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};

// Class Maneater.ME_WildlifeCharacter
// 0x0010 (FullSize[0x0F60] - InheritedSize[0x0F50])
class AME_WildlifeCharacter : public AME_AnimalCharacter
{
public:
	bool                                               bCanWalkOnLand;                                            // 0x0F50(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WH4J[0xF];                                     // 0x0F51(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WildlifeCharacter");
		return ptr;
	}



};

// Class Maneater.ME_WorldMapCaptureComponent
// 0x0000 (FullSize[0x0880] - InheritedSize[0x0880])
class UME_WorldMapCaptureComponent : public USceneCaptureComponent2D
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WorldMapCaptureComponent");
		return ptr;
	}



};

// Class Maneater.ME_WorldMapWidget
// 0x0048 (FullSize[0x0278] - InheritedSize[0x0230])
class UME_WorldMapWidget : public UUserWidget
{
public:
	class UTextureRenderTarget2D*                      FogRenderTarget;                                           // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<unsigned char>                              RTColorBuffer;                                             // 0x0238(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KE97[0x30];                                    // 0x0248(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WorldMapWidget");
		return ptr;
	}



	class UTextureRenderTarget2D* LoadSavedRenderTarget();
};

// Class Maneater.ME_WorldRegionData
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UME_WorldRegionData : public UDataAsset
{
public:
	TArray<struct FWorldRegion>                        WorldRegions;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WorldRegionData");
		return ptr;
	}



};

// Class Maneater.ME_WorldRegionVolume
// 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
class AME_WorldRegionVolume : public AVolume
{
public:
	struct FColor                                      VolumeColor;                                               // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RegionPriority;                                            // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WorldRegionVolume");
		return ptr;
	}



	bool PointIsWithinRegion(const struct FVector& Point, float SphereRadius);
};

// Class Maneater.ME_WorldSettings
// 0x0130 (FullSize[0x04D0] - InheritedSize[0x03A0])
class AME_WorldSettings : public AWorldSettings
{
public:
	TEnumAsByte<Engine_ESceneCaptureSource>            WorldCaptureSource;                                        // 0x03A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KNPT[0x3];                                     // 0x03A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                WorldCaptureResolution;                                    // 0x03A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIncludeOceanInWorldCapture;                               // 0x03A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPrintAlertnessDebugLogs;                                  // 0x03A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowEvolutionDrops;                                      // 0x03AA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PS01[0x5];                                     // 0x03AB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_WorldRegionData*                         WorldRegionData;                                           // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      WorldBoundsActor[0x28];                                    // 0x03B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      TheLand[0x28];                                             // 0x03E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      TheOcean[0x28];                                            // 0x0408(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	float                                              FriendlyFireDamageMultiplier;                              // 0x0430(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_35MF[0x4];                                     // 0x0434(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UME_WorldMapCaptureComponent*                WorldCaptureComponent;                                     // 0x0438(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UA05[0x60];                                    // 0x0440(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FImpactResponseInstance>             ActiveImpactResponses;                                     // 0x04A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PW8Y[0x20];                                    // 0x04B0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.ME_WorldSettings");
		return ptr;
	}



	void UpdateWorldCapture();
	void OnImpactParticleComplete(class UParticleSystemComponent* PSystem);
	void OnImpactAudioComplete(AkAudio_EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
};

// Class Maneater.MEAIDataProvider_CombatHeight
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UMEAIDataProvider_CombatHeight : public UAIDataProvider_QueryParams
{
public:
	float                                              DefaultValue;                                              // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XI2A[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEAIDataProvider_CombatHeight");
		return ptr;
	}



};

// Class Maneater.MEAIDataProvider_CombatRange
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UMEAIDataProvider_CombatRange : public UAIDataProvider_QueryParams
{
public:
	float                                              DefaultValue;                                              // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MXUD[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEAIDataProvider_CombatRange");
		return ptr;
	}



};

// Class Maneater.MEAIDataProvider_EscapeVolExtents
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UMEAIDataProvider_EscapeVolExtents : public UAIDataProvider
{
public:
	float                                              FloatValue;                                                // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IntValue;                                                  // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEAIDataProvider_EscapeVolExtents");
		return ptr;
	}



};

// Class Maneater.MEAIDataProvider_LeashDistance
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UMEAIDataProvider_LeashDistance : public UAIDataProvider
{
public:
	float                                              FloatValue;                                                // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IntValue;                                                  // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEAIDataProvider_LeashDistance");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_AbilityBase
// 0x0048 (FullSize[0x00B0] - InheritedSize[0x0068])
class UMEBTDecorator_AbilityBase : public UBTDecorator
{
public:
	bool                                               bUseAbilityType;                                           // 0x0068(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M6PR[0x3];                                     // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                AbilityGameplayTag;                                        // 0x006C(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EME_CharacterAbility                      AbilityType;                                               // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R2WA[0x3];                                     // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAIDataProviderIntValue                     AbilityIndex;                                              // 0x0078(0x0038) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_AbilityBase");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_BBValueChanged
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UMEBTDecorator_BBValueChanged : public UBTDecorator_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_BBValueChanged");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_CanSpawnDiver
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UMEBTDecorator_CanSpawnDiver : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_CanSpawnDiver");
		return ptr;
	}



	void OnTrackedAIChange(class AME_AIController* AIC);
};

// Class Maneater.MEBTDecorator_CanUseAbility
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UMEBTDecorator_CanUseAbility : public UMEBTDecorator_AbilityBase
{
public:
	unsigned char                                      UnknownData_23MI[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_CanUseAbility");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_CombatState
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UMEBTDecorator_CombatState : public UBTDecorator
{
public:
	Maneater_ECombatStatus                             DesiredStatus;                                             // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YS7C[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_CombatState");
		return ptr;
	}



	void OnCombatStateChanged(class AME_AIController* AIC, Maneater_ECombatStatus PrevStatus);
};

// Class Maneater.MEBTDecorator_HasGameplayTags
// 0x0000 (FullSize[0x00C8] - InheritedSize[0x00C8])
class UMEBTDecorator_HasGameplayTags : public UBTDecorator_CheckGameplayTagsOnActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_HasGameplayTags");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_HasGrabbedPrey
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UMEBTDecorator_HasGrabbedPrey : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_HasGrabbedPrey");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_IsPawnRelevant
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UMEBTDecorator_IsPawnRelevant : public UBTDecorator
{
public:
	float                                              MinTimeSinceLastRendered;                                  // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinDistanceFromPlayer;                                     // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_IsPawnRelevant");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_LandOrSea
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UMEBTDecorator_LandOrSea : public UBTDecorator
{
public:
	Maneater_ETerrainType                              TerrainType;                                               // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UPG1[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_LandOrSea");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_TimeSince
// 0x0040 (FullSize[0x00D0] - InheritedSize[0x0090])
class UMEBTDecorator_TimeSince : public UBTDecorator_BlackboardBase
{
public:
	struct FAIDataProviderFloatValue                   TimeValue;                                                 // 0x0090(0x0038) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ComparisonOp;                                              // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7XP7[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_TimeSince");
		return ptr;
	}



};

// Class Maneater.MEBTDecorator_TimeSinceLastSpawn
// 0x0040 (FullSize[0x00A8] - InheritedSize[0x0068])
class UMEBTDecorator_TimeSinceLastSpawn : public UBTDecorator
{
public:
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ComparisonOp;                                              // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q4Y2[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAIDataProviderFloatValue                   ComparisonValue;                                           // 0x0070(0x0038) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_TimeSinceLastSpawn");
		return ptr;
	}



	void OnNewSpawn(class AME_AIController* AIC);
};

// Class Maneater.MEBTDecorator_WaterDepth
// 0x0040 (FullSize[0x00D0] - InheritedSize[0x0090])
class UMEBTDecorator_WaterDepth : public UBTDecorator_BlackboardBase
{
public:
	struct FAIDataProviderFloatValue                   ExpectedWaterDepth;                                        // 0x0090(0x0038) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ComparisonOp;                                              // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N08Y[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTDecorator_WaterDepth");
		return ptr;
	}



};

// Class Maneater.MEBTService_AbilityBase
// 0x0048 (FullSize[0x00B8] - InheritedSize[0x0070])
class UMEBTService_AbilityBase : public UBTService
{
public:
	bool                                               bUseAbilityType;                                           // 0x0070(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2NHT[0x3];                                     // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                AbilityGameplayTag;                                        // 0x0074(0x0008) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Maneater_EME_CharacterAbility                      AbilityType;                                               // 0x007C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KM5G[0x3];                                     // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAIDataProviderIntValue                     AbilityIndex;                                              // 0x0080(0x0038) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_AbilityBase");
		return ptr;
	}



};

// Class Maneater.MEBTService_AttackTarget
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UMEBTService_AttackTarget : public UBTService_BlackboardBase
{
public:
	class UClass*                                      WeaponPreference;                                          // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_AttackTarget");
		return ptr;
	}



};

// Class Maneater.MEBTService_CacheEscapeRoutes
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTService_CacheEscapeRoutes : public UBTService
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_CacheEscapeRoutes");
		return ptr;
	}



};

// Class Maneater.MEBTService_CheckThreatUnderBoat
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UMEBTService_CheckThreatUnderBoat : public UBTService
{
public:
	struct FBlackboardKeySelector                      BlackboardKey;                                             // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              TimeNeededToTrigger;                                       // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SK39[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_CheckThreatUnderBoat");
		return ptr;
	}



};

// Class Maneater.MEBTService_ClaimCombatLocation
// 0x0058 (FullSize[0x00F0] - InheritedSize[0x0098])
class UMEBTService_ClaimCombatLocation : public UBTService_BlackboardBase
{
public:
	struct FEQSParametrizedQueryExecutionRequest       EQSRequest;                                                // 0x0098(0x0048) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T0H3[0x10];                                    // 0x00E0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_ClaimCombatLocation");
		return ptr;
	}



};

// Class Maneater.MEBTService_LookForBoats
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTService_LookForBoats : public UBTService
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_LookForBoats");
		return ptr;
	}



};

// Class Maneater.MEBTService_LookForThreats
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTService_LookForThreats : public UBTService
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_LookForThreats");
		return ptr;
	}



};

// Class Maneater.MEBTService_RepelFromGeometry
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTService_RepelFromGeometry : public UBTService
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_RepelFromGeometry");
		return ptr;
	}



};

// Class Maneater.MEBTService_UseAbility
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UMEBTService_UseAbility : public UMEBTService_AbilityBase
{
public:
	bool                                               bCancelImmediately;                                        // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XS88[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTService_UseAbility");
		return ptr;
	}



};

// Class Maneater.MEBTTask_AbilityBase
// 0x0050 (FullSize[0x00C0] - InheritedSize[0x0070])
class UMEBTTask_AbilityBase : public UBTTaskNode
{
public:
	bool                                               bUseAbilityType;                                           // 0x0070(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FT5R[0x3];                                     // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                AbilityGameplayTag;                                        // 0x0074(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Maneater_EME_CharacterAbility                      AbilityType;                                               // 0x007C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GZ94[0x3];                                     // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAIDataProviderIntValue                     AbilityIndex;                                              // 0x0080(0x0038) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                               bWaitForAbilityToFinish;                                   // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KMJG[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_AbilityBase");
		return ptr;
	}



	void OnAbilityFinished(const struct FGameplayAbilitySpecHandle& AbilityHandle, class UBehaviorTreeComponent* OwnerComp);
};

// Class Maneater.MEBTTask_TargetBase
// 0x0028 (FullSize[0x00C0] - InheritedSize[0x0098])
class UMEBTTask_TargetBase : public UBTTask_BlackboardBase
{
public:
	unsigned char                                      TargetAssetId[0x28];                                       // 0x0098(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_TargetBase");
		return ptr;
	}



};

// Class Maneater.MEBTTask_AttackTarget
// 0x0008 (FullSize[0x00C8] - InheritedSize[0x00C0])
class UMEBTTask_AttackTarget : public UMEBTTask_TargetBase
{
public:
	class UClass*                                      WeaponPreference;                                          // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_AttackTarget");
		return ptr;
	}



};

// Class Maneater.MEBTTask_CacheActivityPoints
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTTask_CacheActivityPoints : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_CacheActivityPoints");
		return ptr;
	}



};

// Class Maneater.MEBTTask_CacheEscapeRoutes
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTTask_CacheEscapeRoutes : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_CacheEscapeRoutes");
		return ptr;
	}



};

// Class Maneater.MEBTTask_ChangeAlertState
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UMEBTTask_ChangeAlertState : public UBTTaskNode
{
public:
	TEnumAsByte<Maneater_EAIThreatAlertState>          NewAlertState;                                             // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bResetSuspicion;                                           // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HXQU[0x6];                                     // 0x0072(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_ChangeAlertState");
		return ptr;
	}



};

// Class Maneater.MEBTTask_ChangeCombatPriority
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UMEBTTask_ChangeCombatPriority : public UBTTaskNode
{
public:
	float                                              PriorityBuff;                                              // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Duration;                                                  // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_ChangeCombatPriority");
		return ptr;
	}



};

// Class Maneater.MEBTTask_ClaimCombatLocation
// 0x0058 (FullSize[0x00F0] - InheritedSize[0x0098])
class UMEBTTask_ClaimCombatLocation : public UBTTask_BlackboardBase
{
public:
	struct FEQSParametrizedQueryExecutionRequest       EQSRequest;                                                // 0x0098(0x0048) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2IOG[0x10];                                    // 0x00E0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_ClaimCombatLocation");
		return ptr;
	}



};

// Class Maneater.MEBTTask_MoveToBase
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UMEBTTask_MoveToBase : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_MoveToBase");
		return ptr;
	}



};

// Class Maneater.MEBTTask_DirectMoveTo
// 0x0078 (FullSize[0x0110] - InheritedSize[0x0098])
class UMEBTTask_DirectMoveTo : public UMEBTTask_MoveToBase
{
public:
	struct FAIDataProviderFloatValue                   AcceptableRadius;                                          // 0x0098(0x0038) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   Speed;                                                     // 0x00D0(0x0038) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                               bReachTestIncludesAgentRadius;                             // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReachTestIncludesGoalRadius;                              // 0x0109(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BZ82[0x6];                                     // 0x010A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_DirectMoveTo");
		return ptr;
	}



};

// Class Maneater.MEBTTask_EjectPassengers
// 0x0018 (FullSize[0x0088] - InheritedSize[0x0070])
class UMEBTTask_EjectPassengers : public UBTTaskNode
{
public:
	unsigned char                                      bEjectUsingVehicleVelocity : 1;                            // 0x0070(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KREN[0x3];                                     // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VehicleImpulseScale;                                       // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bAlwaysPushOverboard : 1;                                  // 0x0078(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XN7J[0x3];                                     // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverboardVelocityImpulseXY;                                // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OverboardVelocityImpulseZ;                                 // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      NumToEjectOnExecute;                                       // 0x0084(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PJO0[0x3];                                     // 0x0085(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_EjectPassengers");
		return ptr;
	}



};

// Class Maneater.MEBTTask_EmitNoise
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UMEBTTask_EmitNoise : public UBTTaskNode
{
public:
	float                                              NoiseIntensity;                                            // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<Maneater_ECharacterVoiceEventType>     NoiseVoiceType;                                            // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QNA2[0x3];                                     // 0x0075(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_EmitNoise");
		return ptr;
	}



};

// Class Maneater.MEBTTask_FireTorpedo
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTTask_FireTorpedo : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_FireTorpedo");
		return ptr;
	}



};

// Class Maneater.MEBTTask_GetNextPatrol
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UMEBTTask_GetNextPatrol : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_GetNextPatrol");
		return ptr;
	}



};

// Class Maneater.MEBTTask_MoveTo
// 0x0098 (FullSize[0x0130] - InheritedSize[0x0098])
class UMEBTTask_MoveTo : public UMEBTTask_MoveToBase
{
public:
	struct FAIDataProviderFloatValue                   Speed;                                                     // 0x0098(0x0038) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   AcceptableRadius;                                          // 0x00D0(0x0038) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                               bReachTestIncludesAgentRadius;                             // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReachTestIncludesGoalRadius;                              // 0x0109(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowPartialPath;                                         // 0x010A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K9YR[0x5];                                     // 0x010B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      FilterClass;                                               // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bObserveBlackboardValue;                                   // 0x0118(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LJJ6[0xF];                                     // 0x0119(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ObservedBlackboardValueTolerance;                          // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JWBP[0x4];                                     // 0x012C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_MoveTo");
		return ptr;
	}



	void OnRequestIdUpdated(class AME_AIController* AIC, const struct FAIRequestID& UpdatedRequestId);
};

// Class Maneater.MEBTTask_PlayCustomAnimations
// 0x0038 (FullSize[0x00A8] - InheritedSize[0x0070])
class UMEBTTask_PlayCustomAnimations : public UBTTaskNode
{
public:
	TArray<class UAnimSequenceBase*>                   Animations;                                                // 0x0070(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PlayRate;                                                  // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BlendIn;                                                   // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BlendOut;                                                  // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumLoops;                                                  // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StartTimeMin;                                              // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StartTimeMax;                                              // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D26P[0x10];                                    // 0x0098(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_PlayCustomAnimations");
		return ptr;
	}



	void OnMontageComplete();
};

// Class Maneater.MEBTTask_PlayCustomPassengerAnimations
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UMEBTTask_PlayCustomPassengerAnimations : public UMEBTTask_PlayCustomAnimations
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_PlayCustomPassengerAnimations");
		return ptr;
	}



};

// Class Maneater.MEBTTask_PlayDialogueAkEvent
// 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
class UMEBTTask_PlayDialogueAkEvent : public UBTTask_BlackboardBase
{
public:
	class UAkAudioEvent*                               Event;                                                     // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  DialogueTableOverride;                                     // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_PlayDialogueAkEvent");
		return ptr;
	}



};

// Class Maneater.MEBTTask_PlayDialogueFile
// 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
class UMEBTTask_PlayDialogueFile : public UBTTask_BlackboardBase
{
public:
	struct FDataTableRowHandle                         DialogueRowHandle;                                         // 0x0098(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_PlayDialogueFile");
		return ptr;
	}



};

// Class Maneater.MEBTTask_ReleasePrey
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTTask_ReleasePrey : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_ReleasePrey");
		return ptr;
	}



};

// Class Maneater.MEBTTask_RemoveAI
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTTask_RemoveAI : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_RemoveAI");
		return ptr;
	}



};

// Class Maneater.MEBTTask_SpawnActor
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UMEBTTask_SpawnActor : public UBTTaskNode
{
public:
	unsigned char                                      UnknownData_UWH7[0x8];                                     // 0x0070(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ClassToSpawn;                                              // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TriggerSound;                                              // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SpawnActorParticle;                                        // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DelayTillActorSpawn;                                       // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DepthToSpawnActor;                                         // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_SpawnActor");
		return ptr;
	}



};

// Class Maneater.MEBTTask_SpawnAI
// 0x0010 (FullSize[0x0080] - InheritedSize[0x0070])
class UMEBTTask_SpawnAI : public UBTTaskNode
{
public:
	TArray<struct FSpawnListEntry>                     SpawnList;                                                 // 0x0070(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_SpawnAI");
		return ptr;
	}



	void OnSpawnComplete(class AME_BoatAIController* AIC);
};

// Class Maneater.MEBTTask_StopAllMovement
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UMEBTTask_StopAllMovement : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_StopAllMovement");
		return ptr;
	}



};

// Class Maneater.MEBTTask_StopCustomAnimation
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UMEBTTask_StopCustomAnimation : public UBTTaskNode
{
public:
	float                                              BlendOut;                                                  // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PA08[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_StopCustomAnimation");
		return ptr;
	}



};

// Class Maneater.MEBTTask_UseAbility
// 0x0008 (FullSize[0x00C8] - InheritedSize[0x00C0])
class UMEBTTask_UseAbility : public UMEBTTask_AbilityBase
{
public:
	bool                                               bCancelImmediately;                                        // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JZDO[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_UseAbility");
		return ptr;
	}



};

// Class Maneater.MEBTTask_VehicleMoveTo
// 0x0028 (FullSize[0x00C0] - InheritedSize[0x0098])
class UMEBTTask_VehicleMoveTo : public UMEBTTask_MoveToBase
{
public:
	float                                              Speed;                                                     // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AcceptanceRadius;                                          // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoveUpdateThreshold;                                       // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TaskUpdateInterval;                                        // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bProjectToSurface : 1;                                     // 0x00A8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bClampToWaterEdge : 1;                                     // 0x00A8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IW5C[0x3];                                     // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SurfaceZOffset;                                            // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bAllowPartialPath : 1;                                     // 0x00B0(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bObserveBlackboardValue : 1;                               // 0x00B0(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ARRB[0xF];                                     // 0x00B1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEBTTask_VehicleMoveTo");
		return ptr;
	}



	void OnRequestIdUpdated(class AME_AIController* AIC, const struct FAIRequestID& UpdatedRequestId);
};

// Class Maneater.MEEnvQueryContext_BoatEscape
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_BoatEscape : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_BoatEscape");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_BossVehicleActor
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_BossVehicleActor : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_BossVehicleActor");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_ClosestEscape
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_ClosestEscape : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_ClosestEscape");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_ClosestLandNavPoint
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_ClosestLandNavPoint : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_ClosestLandNavPoint");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_CombatLocation
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_CombatLocation : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_CombatLocation");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_LastSawThreatLocation
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_LastSawThreatLocation : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_LastSawThreatLocation");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_LeashLocation
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_LeashLocation : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_LeashLocation");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_NextPatrolLoc
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_NextPatrolLoc : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_NextPatrolLoc");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_PlayerCameraLocation
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_PlayerCameraLocation : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_PlayerCameraLocation");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryContext_PlayerCameraRotation
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMEEnvQueryContext_PlayerCameraRotation : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryContext_PlayerCameraRotation");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryGenerator_3DGrid
// 0x0120 (FullSize[0x0170] - InheritedSize[0x0050])
class UMEEnvQueryGenerator_3DGrid : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderFloatValue                   GridHalfExtentX;                                           // 0x0050(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   GridHalfExtentY;                                           // 0x0088(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   SpaceBetween;                                              // 0x00C0(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderIntValue                     NumLayers;                                                 // 0x00F8(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   SpaceBetweenLayers;                                        // 0x0130(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      GenerateAround;                                            // 0x0168(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryGenerator_3DGrid");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryGenerator_CombatLocations
// 0x0078 (FullSize[0x00C8] - InheritedSize[0x0050])
class UMEEnvQueryGenerator_CombatLocations : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderFloatValue                   DefaultCombatDistance;                                     // 0x0050(0x0038) (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue                   DefaultCombatHeight;                                       // 0x0088(0x0038) (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UClass*                                      QueryContext;                                              // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryGenerator_CombatLocations");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryGenerator_EscapeVolume
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UMEEnvQueryGenerator_EscapeVolume : public UEnvQueryGenerator
{
public:
	class UClass*                                      QueryContext;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryGenerator_EscapeVolume");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryItemType_CombatLocation
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMEEnvQueryItemType_CombatLocation : public UEnvQueryItemType_VectorBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryItemType_CombatLocation");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryTest_InsideEscapeVol
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UMEEnvQueryTest_InsideEscapeVol : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryTest_InsideEscapeVol");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryTest_IsInsideOcean
// 0x0070 (FullSize[0x0268] - InheritedSize[0x01F8])
class UMEEnvQueryTest_IsInsideOcean : public UEnvQueryTest
{
public:
	struct FAIDataProviderFloatValue                   CapsuleRadius;                                             // 0x01F8(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   CapsuleHalfHeight;                                         // 0x0230(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryTest_IsInsideOcean");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryTest_ProjectToSeaLevel
// 0x0038 (FullSize[0x0230] - InheritedSize[0x01F8])
class UMEEnvQueryTest_ProjectToSeaLevel : public UEnvQueryTest
{
public:
	struct FAIDataProviderFloatValue                   OffsetZValue;                                              // 0x01F8(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryTest_ProjectToSeaLevel");
		return ptr;
	}



};

// Class Maneater.MEEnvQueryTest_WaterDepth
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UMEEnvQueryTest_WaterDepth : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEnvQueryTest_WaterDepth");
		return ptr;
	}



};

// Class Maneater.MEEscapeVolume
// 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
class AMEEscapeVolume : public AVolume
{
public:
	unsigned char                                      UnknownData_HIDA[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MEEscapeVolume");
		return ptr;
	}



};

// Class Maneater.MENavArea_Escape
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UMENavArea_Escape : public UNavArea
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MENavArea_Escape");
		return ptr;
	}



};

// Class Maneater.MerEQSTestingPawn
// 0x0010 (FullSize[0x0560] - InheritedSize[0x0550])
class AMerEQSTestingPawn : public AEQSTestingPawn
{
public:
	class UME_MercunaNavigationComponent*              MercunaNavigation;                                         // 0x0550(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MSFX[0x8];                                     // 0x0558(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.MerEQSTestingPawn");
		return ptr;
	}



};

// Class Maneater.OvodusButton
// 0x0010 (FullSize[0x0438] - InheritedSize[0x0428])
class UOvodusButton : public UButton
{
public:
	class UTexture2D*                                  AdvancedHitTexture;                                        // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AdvancedHitAlpha;                                          // 0x0430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M8FO[0x4];                                     // 0x0434(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Maneater.OvodusButton");
		return ptr;
	}



	void UpdateCursorOverlaps(const struct FGeometry& AllottedGeometry);
	void SetAdvancedHitTexture(class UTexture2D* InTexture);
	void SetAdvancedHitAlpha(int InAlpha);
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
